{"version":3,"sources":["webpack:///./src/SmartComponents/PatchManager/PatchManagerCard.scss?61b6","webpack:///./src/SmartComponents/PatchManager/PatchManagerCard.js","webpack:///./src/SmartComponents/PatchManager/PatchManagerCard.scss"],"names":["api","content","__esModule","default","module","i","options","update","exported","locals","hot","accept","newContent","dispose","exports","PatchManagerCard","systems","systemsStatus","fetchSystems","fetchSecurity","securityStatus","security","bugs","fetchBugs","bugsStatus","enhancements","fetchEnhancements","enhancementsStatus","intl","React","useEffect","isLoaded","every","item","pieChartData","x","formatMessage","messages","securityAdvisories","count","y","fill","bugfixAdvisories","enhancementAdvisories","pieChartLegendData","map","name","symbol","type","appName","className","subtitle","Fragment","component","href","UI_BASE","PATCHMAN_ID","variant","isInline","systemsAffected","ariaDesc","ariaTitle","constrainToVisibleArea","data","labels","datum","padding","bottom","left","right","top","height","width","colorScale","legend","legendData","legendOrientation","legendHeight","legendWidth","propTypes","PropTypes","number","string","func","any","injectIntl","connect","DashboardStore","patchmanSystems","patchmanSystemsStatus","patchmanSecurity","patchmanSecurityStatus","patchmanBugs","patchmanBugsStatus","patchmanEnhancements","patchmanEnhancementsStatus","dispatch","url","patchmanFetchSystems","patchmanFetchSecurity","patchmanFetchBugs","patchmanFetchEnhancements","___CSS_LOADER_API_IMPORT___","push"],"mappings":"+EAAA,IAAIA,EAAM,EAAQ,GACFC,EAAU,EAAQ,KAIC,iBAFvBA,EAAUA,EAAQC,WAAaD,EAAQE,QAAUF,KAG/CA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAG9C,IAAIK,EAAU,CAEd,OAAiB,OACjB,WAAoB,GAEhBC,EAASP,EAAIC,EAASK,GAEtBE,EAAWP,EAAQQ,OAASR,EAAQQ,OAAS,GAI1CR,EAAQQ,QACXL,EAAOM,IAAIC,OACT,KACA,WACE,IAAIC,EAAa,EAAQ,KAIO,iBAF1BA,EAAaA,EAAWV,WAAaU,EAAWT,QAAUS,KAGxDA,EAAa,CAAC,CAACR,EAAOC,EAAIO,EAAY,MAGxCL,EAAOK,MAKnBR,EAAOM,IAAIG,SAAQ,WACjBN,OAIJH,EAAOU,QAAUN,G,kCC1CjB,0HAgBMO,GAhBN,QAgByB,SAAC,GACiF,IAD/EC,EAC+E,EAD/EA,QAASC,EACsE,EADtEA,cAAeC,EACuD,EADvDA,aAAcC,EACyC,EADzCA,cAAeC,EAC0B,EAD1BA,eAC7EC,EAAuG,EAAvGA,SAAUC,EAA6F,EAA7FA,KAAMC,EAAuF,EAAvFA,UAAWC,EAA4E,EAA5EA,WAAYC,EAAgE,EAAhEA,aAAcC,EAAkD,EAAlDA,kBAAmBC,EAA+B,EAA/BA,mBAAoBC,EAAW,EAAXA,KAE5FC,IAAMC,WAAU,WACZZ,IACAC,IACAI,IACAG,MACD,CAACR,EAAcC,EAAeI,EAAWG,IAE5C,IAAMK,EAAW,CAACd,EAAeG,EAAgBI,EAAYG,GAAoBK,OAAM,SAAAC,GAAI,MAAa,cAATA,KAEzFC,EAAe,CACjB,CAAEC,EAAGP,EAAKQ,cAAcC,IAASC,mBAAoB,CAAEC,MAAOlB,IAAamB,EAAGnB,EAAUoB,KAAM,WAC9F,CAAEN,EAAGP,EAAKQ,cAAcC,IAASK,iBAAkB,CAAEH,MAAOjB,IAASkB,EAAGlB,EAAMmB,KAAM,QACpF,CAAEN,EAAGP,EAAKQ,cAAcC,IAASM,sBAAuB,CAAEJ,MAAOd,IAAiBe,EAAGf,EAAcgB,KAAM,YAEvGG,EAAqBV,EAAaW,KAAI,SAAAZ,GAAI,MAAK,CAAEa,KAAM,GAAF,OAAKb,EAAKO,EAAV,YAAeP,EAAKE,GAAKY,OAAQ,CAAEN,KAAM,GAAF,OAAKR,EAAKQ,MAAQO,KAAM,cAG1H,OAAO,kBAAC,IAAD,CAAcC,QAAQ,eAAeC,UAAY,gCACpD,kBAAC,IAAD,CAAoBC,SAAS,kBAC7B,kBAAC,IAAD,KACMpB,EACE,kBAAC,IAAMqB,SAAP,KACI,kBAAC,SAAD,CACIC,UAAU,IACVC,KAAI,UAAMC,IAAN,YAAiBC,IAAjB,YACJC,QAAQ,OACRC,UAAQ,GAER,8BAAO9B,EAAKQ,cAAcC,IAASsB,gBAAiB,CAAEpB,MAAOvB,MAEjE,kBAAC,IAAD,CACI4C,SAAS,yBACTC,UAAU,8BACVC,wBAAyB,EACzBC,KAAO7B,EACP8B,OAAS,gBAAGC,EAAH,EAAGA,MAAH,gBAAkBA,EAAM9B,EAAxB,aAA8B8B,EAAMzB,IAC7C0B,QApBI,CAAEC,OAAQ,EAAGC,KAAM,EAAGC,MAAO,EAAGC,IAAK,GAqBzCC,OAAS,GACTC,MAAQ,GACRC,WAxBD,CAAC,UAAW,OAAQ,WAyBnBC,OAAO,OACPC,WAAa/B,EACbgC,kBAAkB,WAClBC,aAAe,GACfC,YAAc,OAxBb,kBAAC,IAAD,UAgCzB/D,EAAiBgE,UAAY,CACzB/D,QAASgE,IAAUC,OACnBhE,cAAe+D,IAAUE,OACzBhE,aAAc8D,IAAUG,KACxBhE,cAAe6D,IAAUG,KACzB9D,SAAU2D,IAAUC,OACpB7D,eAAgB4D,IAAUE,OAC1B3D,UAAWyD,IAAUG,KACrB7D,KAAM0D,IAAUC,OAChBzD,WAAYwD,IAAUE,OACtBxD,kBAAmBsD,IAAUG,KAC7B1D,aAAcuD,IAAUC,OACxBtD,mBAAoBqD,IAAUE,OAC9BtD,KAAMoD,IAAUI,KAGLC,sBAAWC,mBACtB,gBAAGC,EAAH,EAAGA,eAAH,MAAyB,CACrBvE,QAASuE,EAAeC,gBACxBvE,cAAesE,EAAeE,sBAC9BpE,SAAUkE,EAAeG,iBACzBtE,eAAgBmE,EAAeI,uBAC/BrE,KAAMiE,EAAeK,aACrBpE,WAAY+D,EAAeM,mBAC3BpE,aAAc8D,EAAeO,qBAC7BnE,mBAAoB4D,EAAeQ,+BAEvC,SAAAC,GAAQ,MAAK,CACT9E,aAAc,SAAC+E,GAAD,OAASD,EAASE,YAAqBD,KACrD9E,cAAe,SAAC8E,GAAD,OAASD,EAASG,YAAsBF,KACvD1E,UAAW,SAAC0E,GAAD,OAASD,EAASI,YAAkBH,KAC/CvE,kBAAmB,SAACuE,GAAD,OAASD,EAASK,YAA0BJ,QAf7CX,CAiBxBvE,K,qBCtGFD,EADkC,EAAQ,EAChCwF,EAA4B,IAE9BC,KAAK,CAACnG,EAAOC,EAAI,0EAA2E,KAEpGD,EAAOU,QAAUA","file":"js/14.js","sourcesContent":["var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./PatchManagerCard.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\nif (module.hot) {\n  if (!content.locals) {\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./PatchManagerCard.scss\",\n      function () {\n        var newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./PatchManagerCard.scss\");\n\n              newContent = newContent.__esModule ? newContent.default : newContent;\n\n              if (typeof newContent === 'string') {\n                newContent = [[module.id, newContent, '']];\n              }\n\n              update(newContent);\n      }\n    )\n  }\n\n  module.hot.dispose(function() { \n    update();\n  });\n}\n\nmodule.exports = exported;","import { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { patchmanFetchBugs, patchmanFetchEnhancements, patchmanFetchSecurity, patchmanFetchSystems } from '../../AppActions';\nimport { PATCHMAN_ID, UI_BASE } from '../../AppConstants';\nimport { PieChart } from '../../ChartTemplates/PieChart/PieChartTemplate';\nimport messages from '../../Messages';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport { TemplateCard, TemplateCardBody, TemplateCardHeader } from '../../PresentationalComponents/Template/TemplateCard';\nimport './PatchManagerCard.scss';\n\n/**\n * Operating systems card for showing the ratio of operating systems used.\n */\nconst PatchManagerCard = ({ systems, systemsStatus, fetchSystems, fetchSecurity, securityStatus,\n    security, bugs, fetchBugs, bugsStatus, enhancements, fetchEnhancements, enhancementsStatus, intl }) => {\n\n    React.useEffect(() => {\n        fetchSystems();\n        fetchSecurity();\n        fetchBugs();\n        fetchEnhancements();\n    }, [fetchSystems, fetchSecurity, fetchBugs, fetchEnhancements]);\n\n    const isLoaded = [systemsStatus, securityStatus, bugsStatus, enhancementsStatus].every(item => item === 'fulfilled');\n\n    const pieChartData = [\n        { x: intl.formatMessage(messages.securityAdvisories, { count: security }), y: security, fill: '#004b95' },\n        { x: intl.formatMessage(messages.bugfixAdvisories, { count: bugs }), y: bugs, fill: '#06c' },\n        { x: intl.formatMessage(messages.enhancementAdvisories, { count: enhancements }), y: enhancements, fill: '#519de9' }\n    ];\n    const pieChartLegendData = pieChartData.map(item => ({ name: `${item.y} ${item.x}`, symbol: { fill: `${item.fill}`, type: 'circle' } }));\n    const colorScale = ['#004b95', '#06c', '#519de9'];\n    const pieChartPadding = { bottom: 0, left: 0, right: 0, top: 0 };\n    return <TemplateCard appName='PatchManager' className={ 'ins-c-dashboard__card--Patch' }>\n        <TemplateCardHeader subtitle='Patch manager'/>\n        <TemplateCardBody>\n            {!isLoaded ? <Loading/> :\n                <React.Fragment>\n                    <Button\n                        component=\"a\"\n                        href={ `${UI_BASE}/${PATCHMAN_ID}/systems` }\n                        variant=\"link\"\n                        isInline\n                    >\n                        <span>{intl.formatMessage(messages.systemsAffected, { count: systems })}</span>\n                    </Button>\n                    <PieChart\n                        ariaDesc=\"Operating systems used\"\n                        ariaTitle=\"Pie chart operating systems\"\n                        constrainToVisibleArea={ true }\n                        data={ pieChartData }\n                        labels={ ({ datum }) => `${datum.x}: ${datum.y}` }\n                        padding={ pieChartPadding }\n                        height={ 65 }\n                        width={ 65 }\n                        colorScale={ colorScale }\n                        legend=\"true\"\n                        legendData={ pieChartLegendData }\n                        legendOrientation=\"vertical\"\n                        legendHeight={ 75 }\n                        legendWidth={ 200 }\n                    />\n                </React.Fragment>\n            }\n        </TemplateCardBody>\n    </TemplateCard>;\n};\n\nPatchManagerCard.propTypes = {\n    systems: PropTypes.number,\n    systemsStatus: PropTypes.string,\n    fetchSystems: PropTypes.func,\n    fetchSecurity: PropTypes.func,\n    security: PropTypes.number,\n    securityStatus: PropTypes.string,\n    fetchBugs: PropTypes.func,\n    bugs: PropTypes.number,\n    bugsStatus: PropTypes.string,\n    fetchEnhancements: PropTypes.func,\n    enhancements: PropTypes.number,\n    enhancementsStatus: PropTypes.string,\n    intl: PropTypes.any\n};\n\nexport default injectIntl(connect(\n    ({ DashboardStore }) => ({\n        systems: DashboardStore.patchmanSystems,\n        systemsStatus: DashboardStore.patchmanSystemsStatus,\n        security: DashboardStore.patchmanSecurity,\n        securityStatus: DashboardStore.patchmanSecurityStatus,\n        bugs: DashboardStore.patchmanBugs,\n        bugsStatus: DashboardStore.patchmanBugsStatus,\n        enhancements: DashboardStore.patchmanEnhancements,\n        enhancementsStatus: DashboardStore.patchmanEnhancementsStatus\n    }),\n    dispatch => ({\n        fetchSystems: (url) => dispatch(patchmanFetchSystems(url)),\n        fetchSecurity: (url) => dispatch(patchmanFetchSecurity(url)),\n        fetchBugs: (url) => dispatch(patchmanFetchBugs(url)),\n        fetchEnhancements: (url) => dispatch(patchmanFetchEnhancements(url))\n    })\n)(PatchManagerCard));\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".ins-c-dashboard__card--Patch .pf-c-button.pf-m-link{text-align:left}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n"],"sourceRoot":""}