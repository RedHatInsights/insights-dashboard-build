{"version":3,"sources":["webpack:///./src/SmartComponents/Advisor/Constants.js","webpack:///./src/SmartComponents/Advisor/Advisor.js"],"names":["SEVERITY_MAP","critical","important","moderate","low","Advisor","recStats","recStatsStatus","advisorFetchStatsRecs","advisorFetchStatsSystems","advisorIncidents","advisorIncidentsStatus","advisorFetchIncidents","systemsStats","systemsStatsStatus","intl","useIntl","useState","chartData","setChartData","useEffect","name","formatMessage","messages","y","total_risk","legendClick","map","data","risk","toLowerCase","UI_BASE","TemplateCard","appName","data-ouia-safe","title","FailState","Loading","NumberDescription","meta","count","dataSize","layout","linkDescription","incidentsDetected","incidents","link","StackChartTemplate","ariaDesc","advisorChartDescription","ariaTitle","height","width","maxWidth","legendHeight","legendWidth","Button","component","href","variant","isInline","recsImpactingSystems","totalRecs","total","systems","propTypes","PropTypes","func","object","string","connect","DashboardStore","advisorStatsRecs","advisorStatsRecsStatus","advisorStatsSystems","advisorStatsSystemsStatus","dispatch","url","AppActions"],"mappings":"iIAGaA,EAAe,CACxBC,SAAU,EACVC,UAAW,EACXC,SAAU,EACVC,IAAK,G,sHCcHC,EAAU,SAAC,GAC2F,IADzFC,EACyF,EADzFA,SAAUC,EAC+E,EAD/EA,eAAgBC,EAC+D,EAD/DA,sBAAuBC,EACwC,EADxCA,yBAChEC,EAAwG,EAAxGA,iBAAkBC,EAAsF,EAAtFA,uBAAwBC,EAA8D,EAA9DA,sBAAuBC,EAAuC,EAAvCA,aAAcC,EAAyB,EAAzBA,mBAEzEC,EAAOC,cAF2F,EAGtEC,mBAAS,IAH6D,WAGjGC,EAHiG,KAGtFC,EAHsF,KAKxGC,qBAAU,WACNZ,IACAC,IACAG,MACD,CAACA,EAAuBJ,EAAuBC,IAElDW,qBAAU,WACa,cAAnBb,GAAkCY,EAAa,CAC3C,CAAEE,KAAMN,EAAKO,cAAcC,IAAStB,UAAWuB,EAAGlB,EAASmB,WAAWzB,EAAaC,WACnF,CAAEoB,KAAMN,EAAKO,cAAcC,IAASrB,WAAYsB,EAAGlB,EAASmB,WAAWzB,EAAaE,YACpF,CAAEmB,KAAMN,EAAKO,cAAcC,IAASpB,UAAWqB,EAAGlB,EAASmB,WAAWzB,EAAaG,WACnF,CAAEkB,KAAMN,EAAKO,cAAcC,IAASnB,KAAMoB,EAAGlB,EAASmB,WAAWzB,EAAaI,UAEnF,CAACW,EAAMT,EAAUC,IAEpB,IAAMmB,EAAcR,EAAUS,KAAI,SAACC,GAC/B,IAAMC,EAAOD,EAAKP,KAAKS,cACvB,gBAAUC,IAAV,+CAAwD/B,EAAa6B,GAArE,2DAGJ,OAAO,kBAACG,EAAA,EAAD,CAAcC,QAAQ,UAAUC,kBAAA,GACnC,kBAACF,EAAA,EAAD,CAAoBG,MAAM,4BACE,aAA3BxB,EACG,kBAACqB,EAAA,EAAD,KAAkB,kBAACI,EAAA,EAAD,CAAWH,QAAQ,aACnC,kBAACD,EAAA,EAAD,KAC8B,cAA3BrB,EAAyC,kBAAC0B,EAAA,EAAD,MACtC,kBAACC,EAAA,EAAD,CACIV,KAAOlB,EAAiB6B,KAAKC,MAC7BC,SAAS,KACTC,OAAO,aACPC,gBAAkB5B,EAAKO,cAAcC,IAASqB,kBAAmB,CAAEC,UAAWnC,EAAiB6B,KAAKC,QACpGvC,SAAWS,EAAiB6B,KAAKC,MAAQ,GAAK,OAAS,QACvDM,KAAI,UAAMf,KAAN,OD3DA,wHC8DQ,cAAnBxB,EAAiC,kBAAC8B,EAAA,EAAD,MAC9B,kBAACU,EAAA,EAAD,CACIC,SAAWjC,EAAKO,cAAcC,IAAS0B,yBACvCC,UAAU,gCACVC,OAAS,GACTC,MAAQ,IACRC,SAAW,IACXC,aAAe,GACfC,YAAc,IACd3B,KAAOV,EACPQ,YAAcA,IAGE,cAAvBZ,EAAqC,kBAACuB,EAAA,EAAD,MAClC,kBAACmB,EAAA,OAAD,CAAQC,UAAU,IAAIC,KAAI,UAAM3B,KAAN,OD3EnB,wGC2EmD4B,QAAQ,OAAOC,UAAQ,GAC5E7C,EAAKO,cAAcC,IAASsC,qBAAsB,CAAEC,UAAWxD,EAASyD,MAAOC,QAASnD,EAAakD,YAQ9H1D,EAAQ4D,UAAY,CAChBzD,sBAAuB0D,IAAUC,KACjC7D,SAAU4D,IAAUE,OACpB7D,eAAgB2D,IAAUG,OAC1B5D,yBAA0ByD,IAAUC,KACpCtD,aAAcqD,IAAUE,OACxBtD,mBAAoBoD,IAAUG,OAC9B3D,iBAAkBwD,IAAUE,OAC5BzD,uBAAwBuD,IAAUG,OAClCzD,sBAAuBsD,IAAUC,MAGtBG,6BACX,gBAAGC,EAAH,EAAGA,eAAH,MAAyB,CACrBjE,SAAUiE,EAAeC,iBACzBjE,eAAgBgE,EAAeE,uBAC/B5D,aAAc0D,EAAeG,oBAC7B5D,mBAAoByD,EAAeI,0BACnCjE,iBAAkB6D,EAAe7D,iBACjCC,uBAAwB4D,EAAe5D,2BAE3C,SAAAiE,GAAQ,MAAK,CACTpE,sBAAuB,SAACqE,GAAD,OAASD,EAASE,IAAiCD,KAC1EpE,yBAA0B,SAACoE,GAAD,OAASD,EAASE,IAAoCD,KAChFjE,sBAAuB,SAACiE,GAAD,OAASD,EAASE,IAAiCD,QAZnEP,CAcbjE","file":"js/14.js","sourcesContent":["export const INCIDENT_URL = `/advisor/recommendations?reports_shown=undefined&impacting=true&offset=0&limit=10&sort=-publish_date&incident=true`;\nexport const NEW_REC_URL = `/advisor/recommendations?reports_shown=undefined&impacting=true&offset=0&limit=10&sort=-publish_date`;\n\nexport const SEVERITY_MAP = {\n    critical: 4,\n    important: 3,\n    moderate: 2,\n    low: 1\n};\n","import * as AppActions from '../../AppActions';\n\nimport { INCIDENT_URL, NEW_REC_URL } from './Constants';\nimport React, { useEffect, useState } from 'react';\nimport { TemplateCard, TemplateCardBody, TemplateCardHeader } from '../../PresentationalComponents/Template/TemplateCard';\n\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport FailState from '../../PresentationalComponents/FailState/FailState';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport { NumberDescription } from '../../PresentationalComponents/NumberDescription/NumberDescription';\nimport PropTypes from 'prop-types';\nimport { SEVERITY_MAP } from './Constants';\nimport StackChartTemplate from '../../ChartTemplates/StackChart/StackChartTemplate';\nimport { UI_BASE } from '../../AppConstants';\nimport { connect } from 'react-redux';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\n\n/**\n * Advisor Card for showing count/severity of rec hits\n */\nconst Advisor = ({ recStats, recStatsStatus, advisorFetchStatsRecs, advisorFetchStatsSystems,\n    advisorIncidents, advisorIncidentsStatus, advisorFetchIncidents, systemsStats, systemsStatsStatus }) => {\n\n    const intl = useIntl();\n    const [chartData, setChartData] = useState([]);\n\n    useEffect(() => {\n        advisorFetchStatsRecs();\n        advisorFetchStatsSystems();\n        advisorFetchIncidents();\n    }, [advisorFetchIncidents, advisorFetchStatsRecs, advisorFetchStatsSystems]);\n\n    useEffect(() => {\n        recStatsStatus === 'fulfilled' && setChartData([\n            { name: intl.formatMessage(messages.critical), y: recStats.total_risk[SEVERITY_MAP.critical] },\n            { name: intl.formatMessage(messages.important), y: recStats.total_risk[SEVERITY_MAP.important] },\n            { name: intl.formatMessage(messages.moderate), y: recStats.total_risk[SEVERITY_MAP.moderate] },\n            { name: intl.formatMessage(messages.low), y: recStats.total_risk[SEVERITY_MAP.low] }\n        ]);\n    }, [intl, recStats, recStatsStatus]);\n\n    const legendClick = chartData.map((data) => {\n        const risk = data.name.toLowerCase();\n        return `${UI_BASE}/advisor/recommendations?total_risk=${SEVERITY_MAP[risk]}&reports_shown=true&impacting=true&offset=0&limit=10`;\n    });\n\n    return <TemplateCard appName='Advisor' data-ouia-safe>\n        <TemplateCardHeader title='Advisor recommendations' />\n        {advisorIncidentsStatus === 'rejected' ?\n            <TemplateCardBody><FailState appName='Advisor' /></TemplateCardBody>\n            : <TemplateCardBody>\n                {advisorIncidentsStatus !== 'fulfilled' ? <Loading /> :\n                    <NumberDescription\n                        data={ advisorIncidents.meta.count }\n                        dataSize=\"md\"\n                        layout=\"horizontal\"\n                        linkDescription={ intl.formatMessage(messages.incidentsDetected, { incidents: advisorIncidents.meta.count }) }\n                        critical={ advisorIncidents.meta.count > 50 ? 'true' : 'false' }\n                        link={ `${UI_BASE}${INCIDENT_URL}` }\n                    />\n                }\n                {recStatsStatus !== 'fulfilled' ? <Loading /> :\n                    <StackChartTemplate\n                        ariaDesc={ intl.formatMessage(messages.advisorChartDescription) }\n                        ariaTitle=\"Advisor recommendations chart\"\n                        height={ 40 }\n                        width={ 600 }\n                        maxWidth={ 600 }\n                        legendHeight={ 36 }\n                        legendWidth={ 600 }\n                        data={ chartData }\n                        legendClick={ legendClick }\n                    />\n                }\n                {systemsStatsStatus !== 'fulfilled' ? <Loading /> :\n                    <Button component=\"a\" href={ `${UI_BASE}${NEW_REC_URL}` } variant=\"link\" isInline>\n                        {intl.formatMessage(messages.recsImpactingSystems, { totalRecs: recStats.total, systems: systemsStats.total })}\n                    </Button>}\n            </TemplateCardBody>\n        }\n\n    </TemplateCard>;\n};\n\nAdvisor.propTypes = {\n    advisorFetchStatsRecs: PropTypes.func,\n    recStats: PropTypes.object,\n    recStatsStatus: PropTypes.string,\n    advisorFetchStatsSystems: PropTypes.func,\n    systemsStats: PropTypes.object,\n    systemsStatsStatus: PropTypes.string,\n    advisorIncidents: PropTypes.object,\n    advisorIncidentsStatus: PropTypes.string,\n    advisorFetchIncidents: PropTypes.func\n};\n\nexport default connect(\n    ({ DashboardStore }) => ({\n        recStats: DashboardStore.advisorStatsRecs,\n        recStatsStatus: DashboardStore.advisorStatsRecsStatus,\n        systemsStats: DashboardStore.advisorStatsSystems,\n        systemsStatsStatus: DashboardStore.advisorStatsSystemsStatus,\n        advisorIncidents: DashboardStore.advisorIncidents,\n        advisorIncidentsStatus: DashboardStore.advisorIncidentsStatus\n    }),\n    dispatch => ({\n        advisorFetchStatsRecs: (url) => dispatch(AppActions.advisorFetchStatsRecs(url)),\n        advisorFetchStatsSystems: (url) => dispatch(AppActions.advisorFetchStatsSystems(url)),\n        advisorFetchIncidents: (url) => dispatch(AppActions.advisorFetchIncidents(url))\n    })\n)(Advisor);\n"],"sourceRoot":""}