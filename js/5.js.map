{"version":3,"sources":["webpack:///./src/SmartComponents/Vulnerability/VulnerabilityCard.js"],"names":["VulnerabilityCard","props","this","fetchCriticalVulnerabilities","fetchLatestVulnerabilities","fetchVulnerabilities","criticalVulnerabilitiesFetchStatus","latestVulnerabilitiesFetchStatus","criticalVulnerabilities","latestVulnerabilities","vulnerabilitiesFetchStatus","vulnerabilities","className","size","meta","total_items","href","UI_BASE","Component","propTypes","PropTypes","func","object","string","routerParams","connect","state","ownProps","DashboardStore","dispatch","url","AppActions"],"mappings":"wlBAqBMA,E,YAEF,WAAYC,GAAO,0BACf,4BAAMA,KACDA,MAAQ,GAFE,E,iEAMfC,KAAKD,MAAME,+BACXD,KAAKD,MAAMG,6BACXF,KAAKD,MAAMI,yB,+BAGN,MAQDH,KAAKD,MANLK,EAFC,EAEDA,mCACAC,EAHC,EAGDA,iCACAC,EAJC,EAIDA,wBACAC,EALC,EAKDA,sBACAC,EANC,EAMDA,2BACAC,EAPC,EAODA,gBAGJ,OACI,kBAAC,IAAD,KAAMC,UAAU,6BAE+B,YAAvCN,GACqC,YAArCC,GAC+B,YAA/BG,EACA,CACI,kBAAkB,GAClB,CACA,kBAAkB,IAG1B,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOE,UAAU,sBAAsBC,KAAO,MAA9C,kBAEJ,kBAAC,IAAD,KAC4C,cAAvCP,GACG,yBAAKM,UAAU,iBACX,kBAAC,IAAD,CAAuBA,UAAU,qDACjC,0BAAMA,UAAU,2BAA2BJ,EAAwBM,KAAKC,aACxE,0BAAMH,UAAU,wBACZ,uBAAGI,KAAI,UAAMC,IAAN,8CAAP,+BANhB,IAS+C,YAAvCX,GAAqD,kBAAC,IAAD,MACnB,cAArCC,GACG,yBAAKK,UAAU,iBACX,kBAAC,IAAD,CAAUA,UAAU,iDACpB,0BAAMA,UAAU,2BAA2BH,EAAsBK,KAAKC,aACtE,0BAAMH,UAAU,wBACZ,uBAAGI,KAAI,UAAMC,IAAN,gEAAP,oCAKhB,kBAAC,IAAD,KACI,uBAAGD,KAAI,UAAMC,IAAN,oBAAP,WAC4C,cAA/BP,GAA8CC,EAAgBG,KAAKC,YAAc,EAAjF,WACDJ,EAAgBG,KAAKC,YADpB,KACqC,GAFlD,0B,GA3DYG,aAqEhClB,EAAkBmB,UAAY,CAC1BhB,6BAA8BiB,IAAUC,KACxCb,wBAAyBY,IAAUE,OACnChB,mCAAoCc,IAAUG,OAC9CnB,2BAA4BgB,IAAUC,KACtCZ,sBAAuBW,IAAUE,OACjCf,iCAAkCa,IAAUG,OAC5ClB,qBAAsBe,IAAUC,KAChCV,gBAAiBS,IAAUE,OAC3BZ,2BAA4BU,IAAUG,QAmB3BC,cAAaC,mBAhBJ,SAACC,EAAOC,GAAR,O,iWAAA,EACpBnB,wBAAyBkB,EAAME,eAAepB,wBAC9CF,mCAAoCoB,EAAME,eAAetB,mCACzDG,sBAAuBiB,EAAME,eAAenB,sBAC5CF,iCAAkCmB,EAAME,eAAerB,iCACvDI,gBAAiBe,EAAME,eAAejB,gBACtCD,2BAA4BgB,EAAME,eAAelB,4BAC9CiB,MAGoB,SAAAE,GAAQ,MAAK,CACpC1B,6BAA8B,SAAC2B,GAAD,OAASD,EAASE,IAAwCD,KACxF1B,2BAA4B,SAAC0B,GAAD,OAASD,EAASE,IAAsCD,KACpFzB,qBAAsB,SAACyB,GAAD,OAASD,EAASE,IAAgCD,QAGhDL,CAG1BzB","file":"js/5.js","sourcesContent":["import * as AppActions from '../../AppActions';\n\nimport {\n    Card,\n    CardBody,\n    CardFooter,\n    CardHeader,\n    Title\n} from '@patternfly/react-core';\nimport { ExclamationCircleIcon, FlagIcon } from '@patternfly/react-icons';\nimport React, { Component } from 'react';\n\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport PropTypes from 'prop-types';\nimport { UI_BASE } from '../../AppConstants';\nimport { connect } from 'react-redux';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\n\n/**\n * Vulnerability Card for showing number of critical vulnerabilities\n */\nclass VulnerabilityCard extends Component {\n\n    constructor(props) {\n        super(props);\n        this.props = {};\n    }\n\n    componentDidMount() {\n        this.props.fetchCriticalVulnerabilities();\n        this.props.fetchLatestVulnerabilities();\n        this.props.fetchVulnerabilities();\n    }\n\n    render() {\n        const {\n            criticalVulnerabilitiesFetchStatus,\n            latestVulnerabilitiesFetchStatus,\n            criticalVulnerabilities,\n            latestVulnerabilities,\n            vulnerabilitiesFetchStatus,\n            vulnerabilities\n        } = this.props;\n\n        return (\n            <Card className='ins-c-card__vulnerability'\n                { ...(\n                    criticalVulnerabilitiesFetchStatus !== 'pending' &&\n                    latestVulnerabilitiesFetchStatus !== 'pending' &&\n                    vulnerabilitiesFetchStatus !== 'pending'\n                ) ? {\n                        'data-ouia-safe': true\n                    } : {\n                        'data-ouia-safe': false\n                    } }\n            >\n                <CardHeader>\n                    <Title className=\"pf-u-mt-0 pf-u-mb-0\" size={ 'lg' }>Vulnerability</Title>\n                </CardHeader>\n                <CardBody>\n                    {criticalVulnerabilitiesFetchStatus === 'fulfilled' && (\n                        <div className='ins-c-summary'>\n                            <ExclamationCircleIcon className='ins-c-summary__icon ins-c-summary__icon-critical' />\n                            <span className='ins-c-summary__emphasis'>{criticalVulnerabilities.meta.total_items}</span>\n                            <span className='ins-c-summary__label'>\n                                <a href={ `${UI_BASE}/vulnerability/cves?cvss_filter=from8to10` }>CVEs with CVSS score &gt;= 8</a>\n                            </span>\n                        </div>\n                    )} {criticalVulnerabilitiesFetchStatus === 'pending' && (<Loading />)}\n                    {latestVulnerabilitiesFetchStatus === 'fulfilled' && (\n                        <div className='ins-c-summary'>\n                            <FlagIcon className='ins-c-summary__icon ins-c-summary__icon-flag' />\n                            <span className='ins-c-summary__emphasis'>{latestVulnerabilities.meta.total_items}</span>\n                            <span className='ins-c-summary__label'>\n                                <a href={ `${UI_BASE}/vulnerability/cves?publish_date=last7&show_irrelevant=true` }>CVEs added in the last 7 days</a>\n                            </span>\n                        </div>\n                    )}\n                </CardBody>\n                <CardFooter>\n                    <a href={ `${UI_BASE}/vulnerability/` }>\n                        View all{vulnerabilitiesFetchStatus === 'fulfilled' && vulnerabilities.meta.total_items > 0 ?\n                            ` ${vulnerabilities.meta.total_items} ` : ''} vulnerabilities\n                    </a>\n                </CardFooter>\n            </Card>\n        );\n    }\n}\n\nVulnerabilityCard.propTypes = {\n    fetchCriticalVulnerabilities: PropTypes.func,\n    criticalVulnerabilities: PropTypes.object,\n    criticalVulnerabilitiesFetchStatus: PropTypes.string,\n    fetchLatestVulnerabilities: PropTypes.func,\n    latestVulnerabilities: PropTypes.object,\n    latestVulnerabilitiesFetchStatus: PropTypes.string,\n    fetchVulnerabilities: PropTypes.func,\n    vulnerabilities: PropTypes.object,\n    vulnerabilitiesFetchStatus: PropTypes.string\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    criticalVulnerabilities: state.DashboardStore.criticalVulnerabilities,\n    criticalVulnerabilitiesFetchStatus: state.DashboardStore.criticalVulnerabilitiesFetchStatus,\n    latestVulnerabilities: state.DashboardStore.latestVulnerabilities,\n    latestVulnerabilitiesFetchStatus: state.DashboardStore.latestVulnerabilitiesFetchStatus,\n    vulnerabilities: state.DashboardStore.vulnerabilities,\n    vulnerabilitiesFetchStatus: state.DashboardStore.vulnerabilitiesFetchStatus,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchCriticalVulnerabilities: (url) => dispatch(AppActions.fetchCriticalVulnerabilities(url)),\n    fetchLatestVulnerabilities: (url) => dispatch(AppActions.fetchLatestVulnerabilities(url)),\n    fetchVulnerabilities: (url) => dispatch(AppActions.fetchVulnerabilities(url))\n});\n\nexport default routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(VulnerabilityCard));\n"],"sourceRoot":""}