{"version":3,"sources":["webpack://insights-dashboard/./src/SmartComponents/Vulnerability/VulnerabilityCard.js"],"names":["VulnerabilityCard","fetchVulnerabilities","vulnerabilities","vulnerabilitiesFetchStatus","workloads","SID","selectedTags","useEffect","options","SAP","isSelected","sap_system","length","sap_sids","tags","chartData","rows","intl","useIntl","bySeverity","cves_by_severity","cvesTotal","cves_total","legendLink","map","data","UI_BASE","from","to","name","x","y","count","fill","title","TableText","wrapModifier","className","style","href","props","textCenter","columns","transforms","fitContent","isFilled","data-ouia-safe","formatMessage","messages","appName","component","body","direction","default","spaceItems","alignItems","justifyContent","total","cves","rel","target","variant","inset","md","hasGutter","ariaDesc","ariaTitle","constrainToVisibleArea","labels","datum","padding","bottom","left","right","top","height","width","colorScale","flex","Table","borders","aria-label","cells","gridBreakPoint","TableHeader","TableBody","propTypes","PropTypes","workloadsPropType","connect","DashboardStore","dispatch","AppActions"],"mappings":"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","file":"js/3848.aa4f1ef851b858c5b48b.js","sourcesContent":["import * as AppActions from '../../AppActions';\n\nimport {\n    Button,\n    Card,\n    Divider,\n    TextContent\n} from '@patternfly/react-core/dist/esm/components';\nimport {\n    Flex,\n    FlexItem,\n    Grid\n} from '@patternfly/react-core/dist/esm/layouts';\nimport React, { useEffect } from 'react';\nimport {\n    Table,\n    TableBody,\n    TableHeader,\n    TableText,\n    fitContent\n} from '@patternfly/react-table';\nimport {\n    TemplateCard,\n    TemplateCardBody,\n    TemplateCardHeader\n} from '../../PresentationalComponents/Template/TemplateCard';\n\nimport { ExpandableCardTemplate } from '../../PresentationalComponents/Template/ExpandableCardTemplate';\nimport FailState from '../../PresentationalComponents/FailState/FailState';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport { PieChart } from '../../ChartTemplates/PieChart/PieChartTemplate';\nimport PropTypes from 'prop-types';\nimport { UI_BASE } from '../../AppConstants';\nimport { connect } from 'react-redux';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\nimport { workloadsPropType } from '../../Utilities/Common';\n\nconst VulnerabilityCard = ({ fetchVulnerabilities, vulnerabilities, vulnerabilitiesFetchStatus, workloads, SID, selectedTags }) => {\n    useEffect(() => {\n        const options = {\n            ...workloads?.SAP?.isSelected && { sap_system: true },\n            ...SID?.length > 0 && { sap_sids: SID },\n            ...selectedTags?.length > 0 && { tags: selectedTags }\n        };\n\n        fetchVulnerabilities(options);\n    }, [fetchVulnerabilities, workloads, SID, selectedTags]);\n\n    let chartData = [];\n    let rows = [];\n    const intl = useIntl();\n\n    if (vulnerabilitiesFetchStatus === 'fulfilled') {\n        let { cves_by_severity: bySeverity, cves_total: cvesTotal } = vulnerabilities;\n\n        const legendLink = chartData.map((data) => {\n            return `${UI_BASE}/vulnerability/cves?cvss_from=${data.from}&cvss_to=${data.to}`;\n        });\n\n        chartData = [\n            {\n                name: 'CVSS 8.0 - 10',\n                from: 8.0,\n                to: 10.0,\n                x: cvesTotal,\n                y: bySeverity['8to10'].count,\n                fill: '#a30000'\n            },\n            {\n                name: 'CVSS 4.0 - 7.9',\n                from: 4.0,\n                to: 7.9,\n                x: cvesTotal,\n                y: bySeverity['4to7.9'].count,\n                fill: '#ec7a08'\n            },\n            {\n                name: 'CVSS 0.0 - 3.9',\n                from: 0.0,\n                to: 3.9,\n                x: cvesTotal,\n                y: bySeverity['0to3.9'].count,\n                fill: '#f0ab00'\n            }\n        ];\n\n        rows = [\n            [\n                {\n                    title:\n                        <TableText wrapModifier=\"nowrap\" className=\"ins-c-table__dot\" style={{ '--ins-c-table__dot--BackgroundColor': '#a30000' }}>\n                            <a href={legendLink[0]}>8.0 - 10</a>\n                        </TableText>\n                },\n                {\n                    title: <a href={legendLink[0]} className=\"pf-u-text-align-center\">{bySeverity['8to10'].count}</a>,\n                    props: { textCenter: true }\n                }\n            ],\n            [\n                {\n                    title:\n                        <TableText wrapModifier=\"nowrap\" className=\"ins-c-table__dot\" style={{ '--ins-c-table__dot--BackgroundColor': '#ec7a08' }}>\n                            <a href={legendLink[1]} className=\"pf-u-text-align-center\">4.0 - 7.9</a>\n                        </TableText>\n                },\n                {\n                    title: <a href={legendLink[1]} className=\"pf-u-text-align-center\">{bySeverity['4to7.9'].count}</a>,\n                    props: { textCenter: true }\n                }\n            ],\n            [\n                {\n                    title:\n                        <TableText wrapModifier=\"nowrap\" className=\"ins-c-table__dot\" style={{ '--ins-c-table__dot--BackgroundColor': '#f0ab00' }}>\n                            <a href={legendLink[2]}>0.0 - 3.9</a>\n                        </TableText>\n                },\n                {\n                    title: <a href={legendLink[2]}>{bySeverity['0to3.9'].count}</a>,\n                    props: { textCenter: true }\n                }\n            ]\n        ];\n    }\n\n    const columns = [\n        { title: 'CVSS score', transforms: [fitContent] },\n        { title: 'CVE totals', transforms: [fitContent] }\n    ];\n\n    const pieChartPadding = { bottom: 0, left: 0, right: 0, top: 0 };\n\n    if (vulnerabilitiesFetchStatus === 'rejected') {\n        return (\n            <TemplateCard isFilled={false} className='ins-c-card__vulnerability' data-ouia-safe>\n                <TemplateCardHeader title={intl.formatMessage(messages.vulnerabilitiesTitle)} />\n                <TemplateCardBody><FailState appName='Vulnerability' /></TemplateCardBody>\n            </TemplateCard>\n        );\n    }\n\n    return (\n        <Card component='div' className=\"ins-c-dashboard-card-parent\" data-ouia-safe={vulnerabilitiesFetchStatus !== 'pending'}>\n            <ExpandableCardTemplate\n                appName='Vulnerabilities'\n                className='ins-m-toggle-right-on-md'\n                data-ouia-safe={vulnerabilitiesFetchStatus !== 'pending'}\n                title={intl.formatMessage(messages.vulnerabilitiesTitle)}\n                body={\n                    vulnerabilitiesFetchStatus !== 'fulfilled' ? <Loading /> :\n                        <TemplateCardBody className=\"ins-c-custom-policies__card-body\">\n                            <Flex\n                                direction={{ default: 'column' }}\n                                spaceItems={{ default: 'spaceItemsLg' }}\n                            >\n                                <TextContent>\n                                    <p>\n                                        {intl.formatMessage(messages.vulnerabilityMessage)}\n                                    </p>\n                                </TextContent>\n                                <Flex\n                                    direction={{ default: 'column' }}\n                                    spaceItems={{ default: 'spaceItemsLg' }}\n                                    alignItems={{ default: 'alignItemsCenter' }}\n                                    justifyContent={{ default: 'justifyContentCenter' }}\n                                >\n                                    <Flex\n                                        direction={{ default: 'column' }}\n                                        spaceItems={{ default: 'spaceItemsNone' }}\n                                    >\n                                        <a className=\"pf-u-font-size-2xl pf-u-text-align-center pf-u-color-100 pf-u-font-weight-bold\"\n                                            href={`${UI_BASE}/vulnerability/`}>\n                                            {intl.formatMessage(messages.vulnerabilitiesTotalItems, { total: vulnerabilities.cves_total })}\n                                        </a>\n                                        <TextContent\n                                            className='ins-c-width-limiter pf-u-text-align-center'\n                                            style={{ '--ins-c-width-limiter--MaxWidth': '24ch' }}>\n                                            <p>\n                                                {intl.formatMessage(messages.cvesImpactingOneOrMoreSystems, { cves: vulnerabilities.cves_total })}\n                                            </p>\n                                        </TextContent>\n                                    </Flex>\n                                    <Button component=\"a\" href={`${UI_BASE}/vulnerability/`} rel='noreferrer' target='_blank' variant=\"secondary\">\n                                        {intl.formatMessage(messages.vulnerabilityCardCTAText)}\n                                    </Button>\n                                </Flex>\n                            </Flex>\n                        </TemplateCardBody>\n                }\n            />\n            <Divider inset={{ md: 'insetLg' }} />\n            <ExpandableCardTemplate\n                appName='CVESbyCVSS'\n                className='ins-m-toggle-right-on-md'\n                data-ouia-safe={vulnerabilitiesFetchStatus !== 'pending'}\n                title={intl.formatMessage(messages.cveByCvssScoreTitle)}\n                body={\n                    vulnerabilitiesFetchStatus !== 'fulfilled' ? <Loading /> :\n                        <TemplateCardBody className=\"ins-c-custom-policies__card-body\">\n                            <Grid hasGutter>\n                                <Flex alignItems={{ default: 'alignItemsCenter' }}>\n                                    <FlexItem>\n                                        <PieChart\n                                            ariaDesc={intl.formatMessage(messages.cvesImpactingSystems,\n                                                { cves: vulnerabilities.cves_total })}\n                                            ariaTitle=\"Vulnerabilities chart\"\n                                            constrainToVisibleArea={true}\n                                            data={chartData}\n                                            labels={({ datum }) => `${datum.x}: ${datum.y}`}\n                                            padding={pieChartPadding}\n                                            height={100}\n                                            width={100}\n                                            colorScale={['#a30000', '#ec7a08', '#f0ab00']}\n                                        />\n                                    </FlexItem>\n                                    <FlexItem flex={{ default: 'flex_1s' }}>\n                                        <Table\n                                            borders={false}\n                                            aria-label=\"Simple Table\"\n                                            cells={columns}\n                                            rows={rows}\n                                            className='ins-m-no-styling'\n                                            gridBreakPoint=''\n                                        >\n                                            <TableHeader />\n                                            <TableBody />\n                                        </Table>\n                                    </FlexItem>\n                                </Flex>\n                            </Grid>\n                        </TemplateCardBody>\n                }\n            />\n        </Card>\n    );\n};\n\nVulnerabilityCard.propTypes = {\n    fetchVulnerabilities: PropTypes.func,\n    vulnerabilities: PropTypes.object,\n    vulnerabilitiesFetchStatus: PropTypes.string,\n    selectedTags: PropTypes.array,\n    workloads: workloadsPropType,\n    SID: PropTypes.arrayOf(PropTypes.string)\n};\n\nexport default connect(\n    ({ DashboardStore }) => ({\n        vulnerabilities: DashboardStore.vulnerabilities,\n        vulnerabilitiesFetchStatus: DashboardStore.vulnerabilitiesFetchStatus,\n        selectedTags: DashboardStore.selectedTags,\n        workloads: DashboardStore.workloads,\n        SID: DashboardStore.SID\n    }),\n    dispatch => ({\n        fetchVulnerabilities: (options) => dispatch(AppActions.fetchVulnerabilities(options))\n    })\n)(VulnerabilityCard);\n"],"sourceRoot":""}