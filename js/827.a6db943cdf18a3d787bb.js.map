{"version":3,"sources":["webpack://insights-dashboard/./node_modules/react-masonry-css/dist/react-masonry-css.module.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","Masonry","props","columnCount","super","reCalculateColumnCount","bind","reCalculateColumnCountDebounce","breakpointCols","default","parseInt","state","window","addEventListener","removeEventListener","requestAnimationFrame","cancelAnimationFrame","_lastRecalculateAnimationFrame","windowWidth","innerWidth","Infinity","breakpointColsObject","matchedBreakpoint","columns","breakpoint","optBreakpoint","Math","max","setState","currentColumnCount","itemsInColumns","Array","items","children","columnIndex","column","columnAttrs","columnClassName","childrenInColumns","columnWidth","className","logDeprecated","columnAttributes","style","width","map","message","console","error","_this$props","rest","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","_objectWithoutProperties","classNameOutput","renderColumns","defaultProps","undefined"],"mappings":"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","file":"js/827.a6db943cdf18a3d787bb.js","sourcesContent":["import React from 'react';\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nconst defaultProps = {\n  breakpointCols: undefined,\n  // optional, number or object { default: number, [key: number]: number }\n  className: undefined,\n  // required, string\n  columnClassName: undefined,\n  // optional, string\n  // Any React children. Typically an array of JSX items\n  children: undefined,\n  // Custom attributes, however it is advised against\n  // using these to prevent unintended issues and future conflicts\n  // ...any other attribute, will be added to the container\n  columnAttrs: undefined,\n  // object, added to the columns\n  // Deprecated props\n  // The column property is deprecated.\n  // It is an alias of the `columnAttrs` property\n  column: undefined\n};\nconst DEFAULT_COLUMNS = 2;\n\nclass Masonry extends React.Component {\n  constructor(props) {\n    super(props); // Correct scope for when methods are accessed externally\n\n    this.reCalculateColumnCount = this.reCalculateColumnCount.bind(this);\n    this.reCalculateColumnCountDebounce = this.reCalculateColumnCountDebounce.bind(this); // default state\n\n    let columnCount;\n\n    if (this.props.breakpointCols && this.props.breakpointCols.default) {\n      columnCount = this.props.breakpointCols.default;\n    } else {\n      columnCount = parseInt(this.props.breakpointCols) || DEFAULT_COLUMNS;\n    }\n\n    this.state = {\n      columnCount\n    };\n  }\n\n  componentDidMount() {\n    this.reCalculateColumnCount(); // window may not be available in some environments\n\n    if (window) {\n      window.addEventListener('resize', this.reCalculateColumnCountDebounce);\n    }\n  }\n\n  componentDidUpdate() {\n    this.reCalculateColumnCount();\n  }\n\n  componentWillUnmount() {\n    if (window) {\n      window.removeEventListener('resize', this.reCalculateColumnCountDebounce);\n    }\n  }\n\n  reCalculateColumnCountDebounce() {\n    if (!window || !window.requestAnimationFrame) {\n      // IE10+\n      this.reCalculateColumnCount();\n      return;\n    }\n\n    if (window.cancelAnimationFrame) {\n      // IE10+\n      window.cancelAnimationFrame(this._lastRecalculateAnimationFrame);\n    }\n\n    this._lastRecalculateAnimationFrame = window.requestAnimationFrame(() => {\n      this.reCalculateColumnCount();\n    });\n  }\n\n  reCalculateColumnCount() {\n    const windowWidth = window && window.innerWidth || Infinity;\n    let breakpointColsObject = this.props.breakpointCols; // Allow passing a single number to `breakpointCols` instead of an object\n\n    if (typeof breakpointColsObject !== 'object') {\n      breakpointColsObject = {\n        default: parseInt(breakpointColsObject) || DEFAULT_COLUMNS\n      };\n    }\n\n    let matchedBreakpoint = Infinity;\n    let columns = breakpointColsObject.default || DEFAULT_COLUMNS;\n\n    for (let breakpoint in breakpointColsObject) {\n      const optBreakpoint = parseInt(breakpoint);\n      const isCurrentBreakpoint = optBreakpoint > 0 && windowWidth <= optBreakpoint;\n\n      if (isCurrentBreakpoint && optBreakpoint < matchedBreakpoint) {\n        matchedBreakpoint = optBreakpoint;\n        columns = breakpointColsObject[breakpoint];\n      }\n    }\n\n    columns = Math.max(1, parseInt(columns) || 1);\n\n    if (this.state.columnCount !== columns) {\n      this.setState({\n        columnCount: columns\n      });\n    }\n  }\n\n  itemsInColumns() {\n    const currentColumnCount = this.state.columnCount;\n    const itemsInColumns = new Array(currentColumnCount); // Force children to be handled as an array\n\n    const items = React.Children.toArray(this.props.children);\n\n    for (let i = 0; i < items.length; i++) {\n      const columnIndex = i % currentColumnCount;\n\n      if (!itemsInColumns[columnIndex]) {\n        itemsInColumns[columnIndex] = [];\n      }\n\n      itemsInColumns[columnIndex].push(items[i]);\n    }\n\n    return itemsInColumns;\n  }\n\n  renderColumns() {\n    const {\n      column,\n      columnAttrs = {},\n      columnClassName\n    } = this.props;\n    const childrenInColumns = this.itemsInColumns();\n    const columnWidth = `${100 / childrenInColumns.length}%`;\n    let className = columnClassName;\n\n    if (className && typeof className !== 'string') {\n      this.logDeprecated('The property \"columnClassName\" requires a string'); // This is a deprecated default and will be removed soon.\n\n      if (typeof className === 'undefined') {\n        className = 'my-masonry-grid_column';\n      }\n    }\n\n    const columnAttributes = _objectSpread(_objectSpread(_objectSpread({}, column), columnAttrs), {}, {\n      style: _objectSpread(_objectSpread({}, columnAttrs.style), {}, {\n        width: columnWidth\n      }),\n      className\n    });\n\n    return childrenInColumns.map((items, i) => {\n      return /*#__PURE__*/React.createElement(\"div\", _extends({}, columnAttributes, {\n        key: i\n      }), items);\n    });\n  }\n\n  logDeprecated(message) {\n    console.error('[Masonry]', message);\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      // ignored\n      children,\n      breakpointCols,\n      columnClassName,\n      columnAttrs,\n      column,\n      // used\n      className\n    } = _this$props,\n          rest = _objectWithoutProperties(_this$props, [\"children\", \"breakpointCols\", \"columnClassName\", \"columnAttrs\", \"column\", \"className\"]);\n\n    let classNameOutput = className;\n\n    if (typeof className !== 'string') {\n      this.logDeprecated('The property \"className\" requires a string'); // This is a deprecated default and will be removed soon.\n\n      if (typeof className === 'undefined') {\n        classNameOutput = 'my-masonry-grid';\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", _extends({}, rest, {\n      className: classNameOutput\n    }), this.renderColumns());\n  }\n\n}\n\nMasonry.defaultProps = defaultProps;\n\nexport default Masonry;\n"],"sourceRoot":""}