{"version":3,"sources":["webpack://insights-dashboard/./src/Icons/FinishedIcon.js","webpack://insights-dashboard/./src/SmartComponents/Policies/PoliciesCard.js"],"names":["className","datalist","key","title","href","actions","Button","isInline","variant","icon","aria-label","intl","useIntl","ExpandableCardTemplate","appName","formatMessage","messages","body","TemplateCard","Grid","hasGutter","DataList","isCompact","map","item","DataListItem","aria-labelledby","id","DataListItemRow","DataListItemCells","dataListCells","DataListCell","width","Flex","direction","default","spaceItems","Title","headingLevel","size","alignItems","component","UI_BASE"],"mappings":"kVAMA,QAFqB,kBAAM,kBAAC,UAAD,CAAiBA,UAAU,oC,2DCsGtD,QAxE2B,WACvB,IAAMC,EAAW,CAAC,CACdC,IAAK,EACLC,MAAO,uBAAGC,KAAK,KAAR,oBACPC,QACI,kBAAC,aAAD,KACI,kBAACC,EAAA,GAAD,CAAQC,UAAQ,EAACC,QAAQ,OAAOC,KAAM,kBAAC,KAAD,MAAmBC,aAAW,aACpE,kBAACJ,EAAA,GAAD,CAAQC,UAAQ,EAACC,QAAQ,OAAOC,KAAM,kBAAC,KAAD,MAAkBC,aAAW,aACnE,kBAACJ,EAAA,GAAD,CAAQC,UAAQ,EAACC,QAAQ,OAAOC,KAAM,kBAAC,UAAD,MAAcC,aAAW,aAC/D,kBAACJ,EAAA,GAAD,CAAQC,UAAQ,EAACC,QAAQ,OAAOC,KAAM,kBAAC,KAAD,MAAcC,aAAW,eAExE,CACCR,IAAK,EACLC,MAAO,uBAAGC,KAAK,KAAR,oBACPC,QACI,kBAAC,aAAD,KACI,kBAACC,EAAA,GAAD,CAAQC,UAAQ,EAACC,QAAQ,OAAOC,KAAM,kBAAC,KAAD,MAAmBC,aAAW,aACpE,kBAACJ,EAAA,GAAD,CAAQC,UAAQ,EAACC,QAAQ,OAAOC,KAAM,kBAAC,KAAD,MAAkBC,aAAW,gBAIzEC,GAAOC,SAEb,OAAO,kBAACC,EAAA,EAAD,CACHC,QAAQ,WACRd,UAAU,2BACVG,MAAQQ,EAAKI,cAAcC,wBAC3BC,KACI,kBAACC,EAAA,GAAD,CAAkBlB,UAAU,oCACxB,kBAACmB,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACC,EAAA,GAAD,CAAUrB,UAAU,uCAAuCsB,WAAS,GAC/DrB,EAASsB,KAAI,SAACC,GAAD,OACV,kBAACC,EAAA,EAAD,CACIvB,IAAMsB,EAAKtB,IACXwB,kBAAkB,mCAAqCF,EAAKtB,IAAM,IAClEyB,GAAK,kBAAoBH,EAAKtB,KAE9B,kBAAC0B,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIC,cAAgB,CACZ,kBAACC,EAAA,EAAD,CAAc7B,IAAI,kBAAkB8B,MAAQ,GACxC,kBAACC,EAAA,EAAD,CACIC,UAAY,CAAEC,QAAS,UACvBC,WAAa,CAAED,QAAS,mBAExB,kBAACE,EAAA,EAAD,CAAOC,aAAa,KAAKC,KAAK,KAC1BvC,UAAU,yBAAyB2B,GAAK,kBAAoBH,EAAKtB,KAC/DsB,EAAKrB,OAEX,kBAAC8B,EAAA,EAAD,CAAMO,WAAa,CAAEL,QAAS,qBAC1B,gDACA,kBAAC,EAAD,MACA,wDAUpC,kBAAC7B,EAAA,GAAD,CAAQmC,UAAU,IAAIrC,KAAI,UAAMsC,KAAN,aAA2BlC,QAAQ,OAAOD,UAAQ,GACvEI,EAAKI,cAAcC","file":"js/9434.5ae1b752131d567cbbe9.js","sourcesContent":["import React from 'react';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/js/icons/check-circle-icon';\nimport './Icons.scss';\n\nconst FinishedIcon = () => <CheckCircleIcon className=\"ins-c-dashboard__icon-finished\"/>;\n\nexport default FinishedIcon;\n","// components\nimport {\n    Button,\n    DataList,\n    DataListCell,\n    DataListItem,\n    DataListItemCells,\n    DataListItemRow,\n    Title\n} from '@patternfly/react-core/dist/esm/components';\n// layouts\nimport {\n    Flex,\n    Grid\n} from '@patternfly/react-core/dist/esm/layouts';\n\nimport BellIcon from '@patternfly/react-icons/dist/js/icons/bell-icon';\nimport CogsIcon from '@patternfly/react-icons/dist/js/icons/cogs-icon';\nimport EnvelopeIcon from '@patternfly/react-icons/dist/js/icons/envelope-icon';\n// expandable card\nimport { ExpandableCardTemplate } from '../../PresentationalComponents/Template/ExpandableCardTemplate';\n// icons\nimport FinishedIcon from '../../Icons/FinishedIcon';\nimport React from 'react';\nimport SlackHashIcon from '@patternfly/react-icons/dist/js/icons/slack-hash-icon';\n// template card\nimport { TemplateCardBody } from '../../PresentationalComponents/Template/TemplateCard';\nimport { UI_BASE } from '../../AppConstants';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\n\n/**\n * Custom policies card with a table\n */\nconst CustomPoliciesCard = () => {\n    const datalist = [{\n        key: 0,\n        title: <a href=\"#\">custom_policy_A1</a>,\n        actions:\n            <React.Fragment>\n                <Button isInline variant=\"link\" icon={<SlackHashIcon />} aria-label=\"Action 1\" />\n                <Button isInline variant=\"link\" icon={<EnvelopeIcon />} aria-label=\"Action 2\" />\n                <Button isInline variant=\"link\" icon={<BellIcon />} aria-label=\"Action 3\" />\n                <Button isInline variant=\"link\" icon={<CogsIcon />} aria-label=\"Action 4\" />\n            </React.Fragment>\n    }, {\n        key: 1,\n        title: <a href=\"#\">custom_policy_A2</a>,\n        actions:\n            <React.Fragment>\n                <Button isInline variant=\"link\" icon={<SlackHashIcon />} aria-label=\"Action 1\" />\n                <Button isInline variant=\"link\" icon={<EnvelopeIcon />} aria-label=\"Action 2\" />\n            </React.Fragment>\n    }];\n\n    const intl = useIntl();\n\n    return <ExpandableCardTemplate\n        appName='policies'\n        className='ins-m-toggle-right-on-md'\n        title={ intl.formatMessage(messages.policiesCardHeader) }\n        body={\n            <TemplateCardBody className=\"ins-c-custom-policies__card-body\">\n                <Grid hasGutter>\n                    <DataList className='ins-m-no-padding ins-m-no-top-border' isCompact>\n                        {datalist.map((item) =>\n                            <DataListItem\n                                key={ item.key }\n                                aria-labelledby={ 'aria-labelledby=\"data-list-cell-' + item.key + '\"' }\n                                id={ 'data-list-item-' + item.key }\n                            >\n                                <DataListItemRow>\n                                    <DataListItemCells\n                                        dataListCells={ [\n                                            <DataListCell key='primary content' width={ 1 }>\n                                                <Flex\n                                                    direction={ { default: 'column' } }\n                                                    spaceItems={ { default: 'spaceItemsNone' } }\n                                                >\n                                                    <Title headingLevel=\"h4\" size=\"md\"\n                                                        className='pf-u-font-weight-light' id={ 'data-list-cell-' + item.key }>\n                                                        { item.title }\n                                                    </Title>\n                                                    <Flex alignItems={ { default: 'alignItemsCenter' } }>\n                                                        <span>Last triggered</span>\n                                                        <FinishedIcon/>\n                                                        <span>5 mins ago</span>\n                                                    </Flex>\n                                                </Flex>\n                                            </DataListCell>\n                                        ] }\n                                    />\n                                </DataListItemRow>\n                            </DataListItem>\n                        )}\n                    </DataList>\n                    <Button component='a' href={ `${UI_BASE}/policies` } variant='link' isInline>\n                        {intl.formatMessage(messages.policiesCardCTA)}\n                    </Button>\n                </Grid>\n\n            </TemplateCardBody>\n        }\n    />;\n};\n\nexport default CustomPoliciesCard;\n"],"sourceRoot":""}