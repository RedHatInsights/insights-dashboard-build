{"version":3,"sources":["webpack://insights-dashboard/./src/PresentationalComponents/Template/ExpandableCardTemplate.js"],"names":["ExpandableCardTemplate","className","appName","title","header","body","hasDivider","props","useState","isExpanded","setIsExpanded","id","inset","md","onExpand","toggleButtonProps","headingLevel","size","propTypes","footer"],"mappings":"+RAaaA,EAAyB,SAAC,GAAsE,IAApEC,EAAoE,EAApEA,UAAWC,EAAyD,EAAzDA,QAASC,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,OAAQC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,WAAeC,GAAY,0EACrEC,eAAS,GAD4D,eAClGC,EADkG,KACtFC,EADsF,KAGzG,OACI,kBAAC,aAAD,KACI,kBAAC,KAAD,QACIT,UAAS,uDAAmDC,EAAnD,YAA8DD,GACvEU,GAAE,iCAA6BT,GAC/BO,WAAaA,GACRF,GAEHD,GACE,kBAAC,IAAD,CAASM,MAAQ,CAAEC,GAAI,aAE3B,kBAAC,IAAD,CACIC,SAAU,kBAAMJ,GAAeD,IAC/BM,kBAAmB,CACfJ,GAAI,gCAAF,OAAkCT,EAAlC,kBACF,aAAc,UACd,yDAAmDA,EAAnD,kBACA,gBAAiBO,IAEnBN,GACE,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOa,aAAa,KAAKC,KAAK,MACxBd,IAIZC,GAEN,kBAAC,IAAD,KACMC,MAOtBL,EAAuBkB,UAAY,CAC/BhB,QAASgB,WACTjB,UAAWiB,WACXf,MAAOe,WACPd,OAAQc,QACRb,KAAMa,QACNZ,WAAYY,QACZC,OAAQD","file":"js/8471.e822c0eb4bb58f705cc2.js","sourcesContent":["// components\nimport {\n    Card,\n    CardExpandableContent,\n    CardHeader,\n    CardTitle,\n    Divider,\n    Title\n} from '@patternfly/react-core/dist/esm/components';\nimport React, { useState } from 'react';\n\nimport propTypes from 'prop-types';\n\nexport const ExpandableCardTemplate = ({ className, appName, title, header, body, hasDivider, ...props }) => {\n    const [isExpanded, setIsExpanded] = useState(true);\n\n    return (\n        <React.Fragment>\n            <Card\n                className={ `ins-c-dashboard__card ins-c-dashboard__card--${appName} ${className}` }\n                id={ `ins-c-dashboard__card--${appName}` }\n                isExpanded={ isExpanded }\n                { ...props }\n            >\n                { hasDivider &&\n                    <Divider inset={ { md: 'insetLg' } } />\n                }\n                <CardHeader\n                    onExpand={() => setIsExpanded(!isExpanded)}\n                    toggleButtonProps={{\n                        id: `ins-c-dashboard__card-title--${appName}-toggle-button`,\n                        'aria-label': 'Details',\n                        'aria-labelledby': `ins-c-dashboard__card-title--${appName} toggle-button`,\n                        'aria-expanded': isExpanded }}\n                >\n                    { title &&\n                        <CardTitle>\n                            <Title headingLevel=\"h2\" size=\"lg\">\n                                { title }\n                            </Title>\n                        </CardTitle>\n                    }\n                    { header }\n                </CardHeader>\n                <CardExpandableContent>\n                    { body }\n                </CardExpandableContent>\n            </Card>\n        </React.Fragment>\n    );\n};\n\nExpandableCardTemplate.propTypes = {\n    appName: propTypes.string,\n    className: propTypes.string,\n    title: propTypes.string,\n    header: propTypes.any,\n    body: propTypes.any,\n    hasDivider: propTypes.any,\n    footer: propTypes.footer\n};\n"],"sourceRoot":""}