{"version":3,"sources":["webpack://insights-dashboard/./src/SmartComponents/PatchManager/PatchManagerCard.scss","webpack://insights-dashboard/./src/SmartComponents/PatchManager/PatchManagerCard.js","webpack://insights-dashboard/./src/SmartComponents/PatchManager/PatchManagerCard.scss?220d"],"names":["___CSS_LOADER_EXPORT___","push","module","id","PatchManagerCard","systems","systemsStatus","fetchSystems","fetchSecurity","securityStatus","security","bugs","fetchBugs","bugsStatus","enhancements","fetchEnhancements","enhancementsStatus","selectedTags","workloads","SID","intl","useIntl","isLoaded","every","item","pieChartData","x","formatMessage","messages","count","y","fill","chart_color_blue_400","chart_color_blue_300","chart_color_blue_200","pieChartLegendData","map","name","symbol","type","colorScale","useEffect","options","sapFilter","length","tags","appName","className","subtitle","isSmall","title","Button","component","href","UI_BASE","PATCHMAN_ID","variant","isInline","ariaDesc","ariaTitle","constrainToVisibleArea","data","labels","datum","padding","bottom","left","right","top","height","width","legend","legendData","legendOrientation","legendHeight","legendWidth","propTypes","PropTypes","workloadsPropType","connect","DashboardStore","patchmanSystems","patchmanSystemsStatus","patchmanSecurity","patchmanSecurityStatus","patchmanBugs","patchmanBugsStatus","patchmanEnhancements","patchmanEnhancementsStatus","dispatch","patchmanFetchSystems","patchmanFetchSecurity","patchmanFetchBugs","patchmanFetchEnhancements","update","hot","invalidate","oldLocals","accept","a","b","isNamedExport","p","isEqualLocals","dispose"],"mappings":"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","file":"js/4208.d08d91f4a848916e9caa.js","sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".dashboard .ins-c-patch__chart .pf-c-chart{margin-right:var(--pf-global--spacer--md);top:var(--pf-global--spacer--sm)}.dashboard .ins-c-pie-chart__legend .pf-c-chart{top:var(--pf-global--spacer--sm);left:var(--pf-global--spacer--md)}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/SmartComponents/PatchManager/PatchManagerCard.scss\"],\"names\":[],\"mappings\":\"AAAA,2CACgC,yCAAyC,CAAC,gCAAgC,CAD1G,gDACgJ,gCAAgC,CAAC,iCAAiC\",\"sourcesContent\":[\".dashboard{\\n.ins-c-patch__chart .pf-c-chart{margin-right:var(--pf-global--spacer--md);top:var(--pf-global--spacer--sm)}.ins-c-pie-chart__legend .pf-c-chart{top:var(--pf-global--spacer--sm);left:var(--pf-global--spacer--md)}\\n\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import './PatchManagerCard.scss';\n\nimport { PATCHMAN_ID, UI_BASE } from '../../AppConstants';\nimport React, { useEffect } from 'react';\nimport { TemplateCard, TemplateCardBody, TemplateCardHeader } from '../../PresentationalComponents/Template/TemplateCard';\nimport { patchmanFetchBugs, patchmanFetchEnhancements, patchmanFetchSecurity, patchmanFetchSystems } from '../../AppActions';\nimport { sapFilter, workloadsPropType } from '../../Utilities/Common';\n\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport FailState from '../../PresentationalComponents/FailState/FailState';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport { PieChart } from '../../ChartTemplates/PieChart/PieChartTemplate';\nimport PropTypes from 'prop-types';\nimport chart_color_blue_200 from '@patternfly/react-tokens/dist/js/chart_color_blue_200';\nimport chart_color_blue_300 from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport chart_color_blue_400 from '@patternfly/react-tokens/dist/js/chart_color_blue_400';\nimport { connect } from 'react-redux';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\n\n/**\n * Operating systems card for showing the ratio of operating systems used.\n */\nconst PatchManagerCard = ({ systems, systemsStatus, fetchSystems, fetchSecurity, securityStatus,\n    security, bugs, fetchBugs, bugsStatus, enhancements, fetchEnhancements, enhancementsStatus,\n    selectedTags, workloads, SID }) => {\n    const intl = useIntl();\n    const isLoaded = [systemsStatus, securityStatus, bugsStatus, enhancementsStatus].every(item => item === 'fulfilled');\n    const pieChartData = [\n        { x: intl.formatMessage(messages.securityAdvisories, { count: security }), y: security, fill: chart_color_blue_400.value },\n        { x: intl.formatMessage(messages.bugfixAdvisories, { count: bugs }), y: bugs, fill: chart_color_blue_300.value },\n        { x: intl.formatMessage(messages.enhancementAdvisories, { count: enhancements }), y: enhancements, fill: chart_color_blue_200.value }\n    ];\n    const pieChartLegendData = pieChartData.map(item => ({ name: `${item.y} ${item.x}`, symbol: { fill: `${item.fill}`, type: 'circle' } }));\n    const pieChartPadding = { bottom: 0, left: 0, right: 0, top: 0 };\n    const colorScale = [\n        chart_color_blue_400.value,\n        chart_color_blue_300.value,\n        chart_color_blue_200.value\n    ];\n\n    useEffect(() => {\n        const options = { ...sapFilter(workloads, SID), ...selectedTags?.length > 0 && { tags: selectedTags } };\n        fetchSystems(options);\n        fetchSecurity(options);\n        fetchBugs(options);\n        fetchEnhancements(options);\n    }, [fetchSystems, fetchSecurity, fetchBugs, fetchEnhancements, workloads, SID, selectedTags]);\n\n    if (systemsStatus === 'rejected') {\n        return (\n            <TemplateCard appName='PatchManager' className={ 'ins-c-dashboard__card--Patch' }>\n                <TemplateCardHeader subtitle={ intl.formatMessage(messages.patchTitle) } />\n                <TemplateCardBody><FailState appName='Patch' isSmall /></TemplateCardBody>\n            </TemplateCard>\n        );\n    }\n\n    return <TemplateCard appName='PatchManager' className={ 'ins-c-dashboard__card--Patch' }>\n        <TemplateCardHeader\n            title={ intl.formatMessage(messages.patchTitle) }\n            subtitle={\n                <Button\n                    component=\"a\"\n                    href={ `${UI_BASE}/${PATCHMAN_ID}/systems` }\n                    variant=\"link\"\n                    isInline\n                >\n                    <span>{intl.formatMessage(messages.systemsAffected, { count: systems })}</span>\n                </Button>\n            }\n        />\n\n        <TemplateCardBody>\n            {!isLoaded ? <Loading /> :\n                <React.Fragment>\n                    <div className=\"ins-c-patch__chart\">\n                        <PieChart\n                            ariaDesc=\"Patch systems chart\"\n                            ariaTitle=\"Patch systems chart\"\n                            constrainToVisibleArea={ true }\n                            data={ pieChartData }\n                            labels={ ({ datum }) => `${datum.x}: ${datum.y}` }\n                            padding={ pieChartPadding }\n                            height={ 65 }\n                            width={ 65 }\n                            colorScale={ colorScale }\n                            legend=\"true\"\n                            legendData={ pieChartLegendData }\n                            legendOrientation=\"vertical\"\n                            legendHeight={ 75 }\n                            legendWidth={ 200 }\n                        />\n                    </div>\n                </React.Fragment>\n            }\n        </TemplateCardBody>\n    </TemplateCard>;\n};\n\nPatchManagerCard.propTypes = {\n    systems: PropTypes.number,\n    systemsStatus: PropTypes.string,\n    fetchSystems: PropTypes.func,\n    fetchSecurity: PropTypes.func,\n    security: PropTypes.number,\n    securityStatus: PropTypes.string,\n    fetchBugs: PropTypes.func,\n    bugs: PropTypes.number,\n    bugsStatus: PropTypes.string,\n    fetchEnhancements: PropTypes.func,\n    enhancements: PropTypes.number,\n    enhancementsStatus: PropTypes.string,\n    selectedTags: PropTypes.arrayOf(PropTypes.string),\n    workloads: workloadsPropType,\n    SID: PropTypes.arrayOf(PropTypes.string)\n};\n\nexport default connect(\n    ({ DashboardStore }) => ({\n        systems: DashboardStore.patchmanSystems,\n        systemsStatus: DashboardStore.patchmanSystemsStatus,\n        security: DashboardStore.patchmanSecurity,\n        securityStatus: DashboardStore.patchmanSecurityStatus,\n        bugs: DashboardStore.patchmanBugs,\n        bugsStatus: DashboardStore.patchmanBugsStatus,\n        enhancements: DashboardStore.patchmanEnhancements,\n        enhancementsStatus: DashboardStore.patchmanEnhancementsStatus,\n        selectedTags: DashboardStore.selectedTags,\n        workloads: DashboardStore.workloads,\n        SID: DashboardStore.SID\n    }),\n    dispatch => ({\n        fetchSystems: (options) => dispatch(patchmanFetchSystems(options)),\n        fetchSecurity: (options) => dispatch(patchmanFetchSecurity(options)),\n        fetchBugs: (options) => dispatch(patchmanFetchBugs(options)),\n        fetchEnhancements: (options) => dispatch(patchmanFetchEnhancements(options))\n    })\n)(PatchManagerCard);\n","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./PatchManagerCard.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./PatchManagerCard.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};"],"sourceRoot":""}