{"version":3,"sources":["webpack:///./src/ChartTemplates/StackChart/_StackChartTemplate.scss","webpack:///./src/ChartTemplates/StackChart/_StackChartTemplate.scss?b8ea","webpack:///./src/Utilities/Common.js","webpack:///./src/ChartTemplates/StackChart/StackChartTemplate.js","webpack:///./src/SmartComponents/Advisor/Constants.js","webpack:///./src/SmartComponents/Advisor/Advisor.js"],"names":["exports","___CSS_LOADER_API_IMPORT___","push","module","i","api","content","__esModule","default","options","update","locals","hot","invalidate","oldLocals","accept","a","b","p","isEqualLocals","dispose","capitalize","string","toUpperCase","substring","StackChart","props","colorScale","global_palette_red_200","value","global_palette_orange_300","global_palette_gold_400","global_palette_gold_200","legendData","data","map","item","name","y","symbol","type","rawData","length","filter","el","dataMin","reduce","acc","curr","Math","min","LegendLabel","index","rest","href","legendClick","className","ChartLabel","Fragment","Chart","ariaDesc","ariaTitle","padding","bottom","left","right","top","width","height","maxWidth","ChartAxis","axisComponent","ChartStack","horizontal","ChartBar","key","barWidth","labelComponent","ChartTooltip","style","fontSize","dx","orientation","x","label","datum","aria-label","tabIndex","d","ChartLegend","responsive","legendHeight","legendWidth","gutter","labels","fill","c_button_m_control_active_after_BorderBottomColor","events","target","eventHandlers","onMouseOver","mutation","Object","assign","global_primary_color_200","textDecoration","onMouseOut","onClick","propTypes","number","array","any","SEVERITY_MAP","critical","important","moderate","low","Advisor","recStats","recStatsStatus","advisorFetchStatsRecs","advisorFetchStatsSystems","advisorIncidents","advisorIncidentsStatus","advisorFetchIncidents","systemsStats","systemsStatsStatus","intl","useIntl","useState","chartData","setChartData","useEffect","formatMessage","messages","total_risk","risk","toLowerCase","UI_BASE","TemplateCard","appName","data-ouia-safe","title","FailState","Loading","NumberDescription","meta","count","dataSize","layout","linkDescription","incidentsDetected","incidents","link","StackChartTemplate","advisorChartDescription","Button","component","variant","isInline","recsImpactingSystems","totalRecs","total","systems","PropTypes","func","object","connect","DashboardStore","advisorStatsRecs","advisorStatsRecsStatus","advisorStatsSystems","advisorStatsSystemsStatus","dispatch","url","AppActions"],"mappings":"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","file":"js/18.js","sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".stackChartLegend{left:-9px;position:relative}.pf-c-chart{height:unset !important}.visually-hidden{position:absolute !important;top:-40px;font-size:10px;height:1px;width:1px;overflow:hidden;clip:rect(1px 1px 1px 1px);clip:rect(1px, 1px, 1px, 1px);white-space:nowrap}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_StackChartTemplate.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_StackChartTemplate.scss\",\n      function () {\n        content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_StackChartTemplate.scss\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};","// For common helpers used throughout app\n\nexport const capitalize = (string) => string[0].toUpperCase() + string.substring(1);\n","/* eslint-disable camelcase */\nimport './_StackChartTemplate.scss';\n\nimport { Chart, ChartAxis, ChartBar, ChartLabel, ChartLegend, ChartStack, ChartTooltip } from '@patternfly/react-charts';\nimport {\n    c_button_m_control_active_after_BorderBottomColor,\n    global_palette_gold_200,\n    global_palette_gold_400,\n    global_palette_orange_300,\n    global_palette_red_200,\n    global_primary_color_200\n} from '@patternfly/react-tokens';\n\nimport React from 'react';\nimport { capitalize } from '../../Utilities/Common';\nimport propTypes from 'prop-types';\n\nexport const StackChart = ({ ...props }) => {\n\n    const colorScale = [\n        global_palette_red_200.value,\n        global_palette_orange_300.value,\n        global_palette_gold_400.value,\n        global_palette_gold_200.value\n    ];\n    const barWidth = 25;\n    const chartLegendFontSize = 12;\n    const legendData = props.data.map(item => ({ name: `${item.y} ${capitalize(item.name)}`, symbol: { type: null } }));\n    const stackChartPadding = { bottom: 0, left: 0, right: 0, top: 0 };\n    const rawData = props.data.length && props.data.filter(item => item.y > 0).map(el => el.y);\n    const dataMin = rawData.length && rawData.reduce((acc, curr) => Math.min(acc, curr));\n\n    // eslint-disable-next-line react/prop-types\n    const LegendLabel = ({ index, ...rest }) =>\n        <a href={ props.legendClick[index] } className=\"pf-c-button pf-m-link pf-m-inline\"><ChartLabel { ...rest } /></a>;\n\n    return <React.Fragment>\n        <Chart\n            ariaDesc={ props.ariaDesc }\n            ariaTitle={ props.ariaTitle }\n            padding={ stackChartPadding }\n            width={ props.width }\n            height={ props.height }\n            maxWidth={ props.maxWidth }>\n            <ChartAxis axisComponent={ <React.Fragment /> } />\n            <ChartStack horizontal\n                colorScale={ colorScale }>\n                {props.data.map(item => <ChartBar key={ item }\n                    barWidth={ barWidth } labelComponent={ <ChartTooltip\n                        style={ { fontSize: '12px', padding: '10' } }\n                        dx={ dataMin ? (-(item.y / dataMin) * 5) : 0 } orientation='top' /> }\n                    data={ [{ name: item.name, y: item.y, x: 1, label: ({ datum }) => `${capitalize(datum.name)}: ${datum.y}` }] }\n                />)}\n            </ChartStack>\n        </Chart>\n        <span className='stackChartLegend' aria-label=\"Chart legend\">\n            <table tabIndex=\"0\" className=\"visually-hidden\" aria-label={ props.ariaTitle + ` data` }>\n                {props.data.map((d, index) => {\n                    return [\n                        <tr key={ index }>\n                            <td>{d.y}</td>\n                            <td>{d.name}</td>\n                        </tr>\n                    ];\n                })}\n            </table>\n            <ChartLegend\n                data={ legendData }\n                responsive={ false }\n                height={ props.legendHeight }\n                width={ props.legendWidth }\n                fontSize={ chartLegendFontSize }\n                className='pf-m-redhat-font'\n                labelComponent={ <LegendLabel /> }\n                orientation='horizontal'\n                gutter={ 0 }\n                style={ {\n                    labels: {\n                        fill: c_button_m_control_active_after_BorderBottomColor.value\n                    }\n                } }\n                events={ [{\n                    target: 'labels',\n                    eventHandlers: {\n                        onMouseOver: () => {\n                            return [{\n                                mutation: (props) => {\n                                    return {\n                                        style: Object.assign({}, props.style, { fill: global_primary_color_200.value, textDecoration: 'underline' })\n                                    };\n                                }\n                            }];\n                        },\n                        onMouseOut: () => {\n                            return [{\n                                mutation: () => {\n                                    return null;\n                                }\n                            }];\n                        },\n                        onClick: () => {\n                            return [{\n                                mutation: (props) => {\n                                    return {\n                                        style: Object.assign({}, props.style, { fill: global_primary_color_200.value, textDecoration: 'underline' })\n                                    };\n                                }\n                            }];\n                        }\n                    }\n                }] }\n                colorScale={ colorScale } />\n        </span>\n    </React.Fragment>;\n};\n\nStackChart.propTypes = {\n    maxWidth: propTypes.number,\n    ariaDesc: propTypes.string,\n    ariaTitle: propTypes.string,\n    data: propTypes.array,\n    height: propTypes.number,\n    width: propTypes.number,\n    legendHeight: propTypes.number,\n    legendWidth: propTypes.number,\n    legendClick: propTypes.any,\n    style: propTypes.any\n};\n\nexport default StackChart;\n","export const INCIDENT_URL = `/advisor/recommendations?reports_shown=undefined&impacting=true&offset=0&limit=10&sort=-publish_date&incident=true`;\nexport const NEW_REC_URL = `/advisor/recommendations?reports_shown=undefined&impacting=true&offset=0&limit=10&sort=-publish_date`;\n\nexport const SEVERITY_MAP = {\n    critical: 4,\n    important: 3,\n    moderate: 2,\n    low: 1\n};\n","import * as AppActions from '../../AppActions';\n\nimport { INCIDENT_URL, NEW_REC_URL } from './Constants';\nimport React, { useEffect, useState } from 'react';\nimport { TemplateCard, TemplateCardBody, TemplateCardHeader } from '../../PresentationalComponents/Template/TemplateCard';\n\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport FailState from '../../PresentationalComponents/FailState/FailState';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport { NumberDescription } from '../../PresentationalComponents/NumberDescription/NumberDescription';\nimport PropTypes from 'prop-types';\nimport { SEVERITY_MAP } from './Constants';\nimport StackChartTemplate from '../../ChartTemplates/StackChart/StackChartTemplate';\nimport { UI_BASE } from '../../AppConstants';\nimport { connect } from 'react-redux';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\n\n/**\n * Advisor Card for showing count/severity of rec hits\n */\nconst Advisor = ({ recStats, recStatsStatus, advisorFetchStatsRecs, advisorFetchStatsSystems,\n    advisorIncidents, advisorIncidentsStatus, advisorFetchIncidents, systemsStats, systemsStatsStatus }) => {\n\n    const intl = useIntl();\n    const [chartData, setChartData] = useState([]);\n\n    useEffect(() => {\n        advisorFetchStatsRecs();\n        advisorFetchStatsSystems();\n        advisorFetchIncidents();\n    }, [advisorFetchIncidents, advisorFetchStatsRecs, advisorFetchStatsSystems]);\n\n    useEffect(() => {\n        recStatsStatus === 'fulfilled' && setChartData([\n            { name: intl.formatMessage(messages.critical), y: recStats.total_risk[SEVERITY_MAP.critical] },\n            { name: intl.formatMessage(messages.important), y: recStats.total_risk[SEVERITY_MAP.important] },\n            { name: intl.formatMessage(messages.moderate), y: recStats.total_risk[SEVERITY_MAP.moderate] },\n            { name: intl.formatMessage(messages.low), y: recStats.total_risk[SEVERITY_MAP.low] }\n        ]);\n    }, [intl, recStats, recStatsStatus]);\n\n    const legendClick = chartData.map((data) => {\n        const risk = data.name.toLowerCase();\n        return `${UI_BASE}/advisor/recommendations?total_risk=${SEVERITY_MAP[risk]}&reports_shown=true&impacting=true&offset=0&limit=10`;\n    });\n\n    return <TemplateCard appName='Advisor' data-ouia-safe>\n        <TemplateCardHeader title='Advisor recommendations' />\n        {advisorIncidentsStatus === 'rejected' ?\n            <TemplateCardBody><FailState appName='Advisor' /></TemplateCardBody>\n            : <TemplateCardBody>\n                {advisorIncidentsStatus !== 'fulfilled' ? <Loading /> :\n                    <NumberDescription\n                        data={ advisorIncidents.meta.count }\n                        dataSize=\"md\"\n                        layout=\"horizontal\"\n                        linkDescription={ intl.formatMessage(messages.incidentsDetected, { incidents: advisorIncidents.meta.count }) }\n                        critical={ advisorIncidents.meta.count > 50 ? 'true' : 'false' }\n                        link={ `${UI_BASE}${INCIDENT_URL}` }\n                    />\n                }\n                {recStatsStatus !== 'fulfilled' ? <Loading /> :\n                    <StackChartTemplate\n                        ariaDesc={ intl.formatMessage(messages.advisorChartDescription) }\n                        ariaTitle=\"Advisor recommendations chart\"\n                        height={ 40 }\n                        width={ 600 }\n                        maxWidth={ 600 }\n                        legendHeight={ 36 }\n                        legendWidth={ 600 }\n                        data={ chartData }\n                        legendClick={ legendClick }\n                    />\n                }\n                {systemsStatsStatus !== 'fulfilled' ? <Loading /> :\n                    <Button component=\"a\" href={ `${UI_BASE}${NEW_REC_URL}` } variant=\"link\" isInline>\n                        {intl.formatMessage(messages.recsImpactingSystems, { totalRecs: recStats.total, systems: systemsStats.total })}\n                    </Button>}\n            </TemplateCardBody>\n        }\n\n    </TemplateCard>;\n};\n\nAdvisor.propTypes = {\n    advisorFetchStatsRecs: PropTypes.func,\n    recStats: PropTypes.object,\n    recStatsStatus: PropTypes.string,\n    advisorFetchStatsSystems: PropTypes.func,\n    systemsStats: PropTypes.object,\n    systemsStatsStatus: PropTypes.string,\n    advisorIncidents: PropTypes.object,\n    advisorIncidentsStatus: PropTypes.string,\n    advisorFetchIncidents: PropTypes.func\n};\n\nexport default connect(\n    ({ DashboardStore }) => ({\n        recStats: DashboardStore.advisorStatsRecs,\n        recStatsStatus: DashboardStore.advisorStatsRecsStatus,\n        systemsStats: DashboardStore.advisorStatsSystems,\n        systemsStatsStatus: DashboardStore.advisorStatsSystemsStatus,\n        advisorIncidents: DashboardStore.advisorIncidents,\n        advisorIncidentsStatus: DashboardStore.advisorIncidentsStatus\n    }),\n    dispatch => ({\n        advisorFetchStatsRecs: (url) => dispatch(AppActions.advisorFetchStatsRecs(url)),\n        advisorFetchStatsSystems: (url) => dispatch(AppActions.advisorFetchStatsSystems(url)),\n        advisorFetchIncidents: (url) => dispatch(AppActions.advisorFetchIncidents(url))\n    })\n)(Advisor);\n"],"sourceRoot":""}