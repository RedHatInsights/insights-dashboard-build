{"version":3,"file":"js/6481.426237031318c5950231.js","mappings":"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","sources":["webpack:///./src/PresentationalComponents/IconList/IconList.js","webpack:///./src/PresentationalComponents/IconList/IconListItem.js","webpack:///./src/PresentationalComponents/MarketingBanner/MarketingBanner.js","webpack:///./src/PresentationalComponents/ZeroState/ZeroState.js"],"sourcesContent":["import './_icon-list.scss';\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport propTypes from 'prop-types';\n\nconst IconList = ({ iconListStyle, className, children }) => {\n    const IconListClasses = classNames(className, 'insd-c-icon-list');\n\n    return <ul className={ IconListClasses } style={ iconListStyle }>\n        {children}\n    </ul>;\n};\n\nexport default IconList;\n\nIconList.propTypes = {\n    children: propTypes.any.isRequired,\n    iconListStyle: propTypes.string,\n    className: propTypes.string\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport propTypes from 'prop-types';\n\nconst IconListItem = ({ className, iconListItemStyle, children }) => {\n    const IconListItemClasses = classNames(className, 'insd-c-icon-list__item');\n\n    return <li className={ IconListItemClasses } style={ iconListItemStyle }>\n        {children}\n    </li>;\n};\n\nexport default IconListItem;\n\nIconListItem.propTypes = {\n    className: propTypes.string,\n    iconListItemStyle: propTypes.string,\n    children: propTypes.any.isRequired\n};\n","import './_marketing-banner.scss';\n\nimport { PageSection } from '@patternfly/react-core';\nimport React from 'react';\nimport classNames from 'classnames';\nimport propTypes from 'prop-types';\n\nconst MarketingBanner = ({ className, hasGraphic, graphicRight, dark1000, fullBleed, style, children }) => {\n\n    const MarketingBannerSectionClasses = classNames(\n        className,\n        'insd-c-marketing-banner',\n        { [`insd-m-with-graphic`]: hasGraphic },\n        { [`insd-m-graphic-right`]: graphicRight },\n        { [`insd-m-dark-1000 pf-m-dark-1000`]: dark1000 },\n        { [`insd-m-full-bleed`]: fullBleed }\n    );\n\n    return <PageSection\n        className={ MarketingBannerSectionClasses }\n        style={ style }\n        isWidthLimited>\n        {children}\n    </PageSection>;\n};\n\nexport default MarketingBanner;\n\nMarketingBanner.propTypes = {\n    children: propTypes.any.isRequired,\n    className: propTypes.string,\n    style: propTypes.any,\n    graphicRight: propTypes.bool,\n    hasGraphic: propTypes.bool,\n    dark1000: propTypes.bool,\n    fullBleed: propTypes.bool,\n    isWidthLimited: propTypes.bool\n};\n","import './_zero-state.scss';\n\nimport {\n    Button,\n    Card,\n    CardBody,\n    CardHeader,\n    List,\n    ListItem,\n    PageSection,\n    TextContent,\n    Title,\n    Grid,\n    GridItem,\n    Flex,\n    FlexItem\n} from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport {\n    SortByDirection,\n    sortable,\n    TableBody,\n    TableHeader,\n    Table\n} from '@patternfly/react-table';\n\nimport API from '../../Utilities/Api';\nimport IconList from '../IconList/IconList';\nimport IconListItem from '../IconList/IconListItem';\nimport ImgInsSmartMgmt from '../../images/img__ins-and-sm.png';\nimport MarketingBanner from '../MarketingBanner/MarketingBanner';\nimport { UI_BASE, VULNERABILITIES_CVES_URL } from '../../AppConstants';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport { ArrowRightIcon } from '@patternfly/react-icons';\nimport InsightsLink from '@redhat-cloud-services/frontend-components/InsightsLink/InsightsLink';\n\n// eslint-disable-next-line no-unused-vars\nconst SortableTable = () => {\n    const columns = [\n        { title: 'CVE ID', transforms: [sortable] },\n        { title: 'Publish Date', transforms: [sortable] },\n        { title: 'Impact', transforms: [sortable] },\n        { title: 'CVSS Base Score', transforms: [sortable] }\n    ];\n    const [rows, setRows] = useState([]);\n    const [sortBy, setSort] = useState({});\n    const dateFormatter = (date) => {\n        const newDate = (new Date(date)).toString().split(' ');\n        return `${newDate[2]} ${newDate[1]} ${newDate[3]}`;\n    };\n\n    const rowBuilder = data => data.map(row => [{\n        title: <a href={ ` https://access.redhat.com/security/cve/${row.id}` }\n            target='_blank' rel='noreferrer'>{row.id}</a>\n    },\n    { title: <span>{dateFormatter(row.attributes.public_date)}</span> },\n    { title: <span>{row.attributes.impact}</span> },\n    { title: <span>{row.attributes.cvss3_score}</span> }]);\n\n    useEffect(() => {\n        const fetchCves = async () => {\n            try {\n                const cves = (await API.get(VULNERABILITIES_CVES_URL, {}, { sort: '-public_date', limit: 4 })).data;\n                setRows(rowBuilder(cves.data));\n            } catch (error) {\n                throw `${error}`;\n            }\n        };\n\n        fetchCves();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const onSort = (_event, index, direction) => {\n        const sortedRows = rows.sort((a, b) => (a[index] < b[index] ? -1 : a[index] > b[index] ? 1 : 0));\n        setSort({ index, direction });\n        setRows(direction === SortByDirection.asc ? sortedRows : sortedRows.reverse());\n    };\n\n    return <Table aria-label='Sortable Table' sortBy={ sortBy } onSort={ onSort } cells={ columns } rows={ rows }>\n        <TableHeader />\n        <TableBody />\n    </Table>;\n};\n\nconst ZeroState = () => {\n    const intl = useIntl();\n    const { hideGlobalFilter } = useChrome();\n\n    useEffect(() => {\n        hideGlobalFilter?.();\n\n        return () => {\n            hideGlobalFilter?.(false);\n        };\n    }, [hideGlobalFilter]);\n\n    return <div className='insd-c-marketing-page'>\n        <MarketingBanner\n            hasGraphic\n            graphicRight\n            dark1000\n            fullBleed\n            isWidthLimited\n            style={ {\n                '--ins-c-marketing-banner--graphic--width-on-md': '200px',\n                '--ins-c-marketing-banner--graphic--width-on-xl': '400px'\n            } }>\n            <Grid>\n                <GridItem>\n                    <Flex direction={ { default: 'column' } }>\n                        <FlexItem>\n                            <Title headingLevel='h1' size='2xl'>\n                                {intl.formatMessage(messages.noSystemsTitle)}\n                            </Title>\n                        </FlexItem>\n                        <FlexItem spacer={ { default: 'spacer2xl' } }>\n                            <div className='insd-c-width-limiter' style={ { '--insd-c-width-limiter--MaxWidth': '600px' } }>\n                                <p className='ins-c-text--black-400'>{intl.formatMessage(messages.singleConsistent)}</p>\n                            </div>\n                        </FlexItem>\n                        <FlexItem>\n                            <InsightsLink app='registration' to=\"/\">\n                                <Button\n                                    size=\"lg\"\n                                    component='a'\n                                    variant='primary'\n                                    style={{ color: 'white' }}\n                                    href={ `${UI_BASE}/registration` }>\n                                    {intl.formatMessage(messages.registerYourSystems)}\n                                </Button>\n                            </InsightsLink>\n                        </FlexItem>\n                        <FlexItem>\n                            <Button\n                                className='pf-m-plain'\n                                component='a'\n                                variant='secondary'\n                                target='_blank'\n                                rel='noreferrer'\n                                href='https://www.redhat.com/en/technologies/management/insights'>\n                                {intl.formatMessage(messages.learnmoreRHI)}&nbsp;&nbsp;&nbsp;\n                                <ArrowRightIcon />\n                            </Button>\n                        </FlexItem>\n                    </Flex>\n                </GridItem>\n            </Grid>\n        </MarketingBanner>\n        <PageSection isWidthLimited>\n            <Grid lg={ 6 } hasGutter>\n                <GridItem>\n                    <Card style={ { height: '100%' } }>\n                        <CardHeader>\n                            <TextContent>\n                                <Title headingLevel='h2'>{intl.formatMessage(messages.zslblTitle)}</Title>\n                                <p>{intl.formatMessage(messages.zslblBody)}</p>\n                            </TextContent>\n                        </CardHeader>\n                        <CardBody>\n                            <IconList>\n                                <IconListItem>{intl.formatMessage(messages.zslblb1)}</IconListItem>\n                                <IconListItem>{intl.formatMessage(messages.zslblb2)}</IconListItem>\n                                <IconListItem>{intl.formatMessage(messages.zslblb3)}</IconListItem>\n                                <IconListItem>{intl.formatMessage(messages.zslblb4)}</IconListItem>\n                                <IconListItem>{intl.formatMessage(messages.zslblb5)}</IconListItem>\n                            </IconList>\n                        </CardBody>\n                    </Card>\n                </GridItem>\n                <GridItem>\n                    <Card style={ { height: '100%' } }>\n                        <CardHeader>\n                            <TextContent>\n                                <Title headingLevel='h2'>{intl.formatMessage(messages.zsrblTitle)}</Title>\n                                <p>{intl.formatMessage(messages.zsrblBody)}</p>\n                            </TextContent>\n                        </CardHeader>\n                        <CardBody>\n                            <IconList>\n                                <IconListItem>{intl.formatMessage(messages.zsrblb1)}</IconListItem>\n                                <IconListItem>{intl.formatMessage(messages.zsrblb2)}</IconListItem>\n                                <IconListItem>{intl.formatMessage(messages.zsrblb3)}</IconListItem>\n                                <IconListItem>{intl.formatMessage(messages.zsrblb4)}</IconListItem>\n                                <IconListItem>{intl.formatMessage(messages.zsrblb5)}</IconListItem>\n                            </IconList>\n                        </CardBody>\n                    </Card>\n                </GridItem>\n            </Grid>\n        </PageSection>\n        <MarketingBanner\n            isWidthLimited='true'\n            hasGraphic\n            graphicRight\n            dark1000\n            fullBleed\n            style={ {\n                '--ins-c-marketing-banner--graphic--width': '400px'\n            } }>\n            <Flex direction={ { default: 'column' } }>\n                <FlexItem spacer={ { default: 'spacerLg' } }>\n                    <Title headingLevel='h3' size='lg'>\n                        {intl.formatMessage(messages.dataPrivacyAndControlsTitle)}\n                    </Title>\n                </FlexItem>\n                <FlexItem spacer={ { default: 'spacerXl' } }>\n                    <p className='insd-c-width-limiter ins-c-text--black-400'\n                        style={ { '--insd-c-width-limiter--MaxWidth': '70ch' } }>\n                        {intl.formatMessage(messages.dataPrivacyAndControls)}\n                    </p>\n                </FlexItem>\n                <FlexItem>\n                    <Button\n                        component='a'\n                        target='_blank'\n                        rel='noreferrer'\n                        href={ `./security/insights` }>\n                        {intl.formatMessage(messages.securityRedirect)}\n                    </Button>\n                </FlexItem>\n            </Flex>\n        </MarketingBanner>\n        <PageSection isWidthLimited>\n            <Flex direction={ { default: 'column' } }>\n                <FlexItem spacer={ { default: 'spacerXl' } }>\n                    <TextContent>\n                        <Title headingLevel='h3'>\n                            {intl.formatMessage(messages.insightsandsatellite)}\n                        </Title>\n                        <div className='insd-c-width-limiter' style={ { '--insd-c-width-limiter--MaxWidth': '900px' } }>\n                            <p>{intl.formatMessage(messages.satellite)}</p>\n                        </div>\n                    </TextContent>\n                </FlexItem>\n                <FlexItem>\n                    <Grid hasGutter>\n                        <GridItem md={ 6 } lg={ 5 } mdRowSpan={ 3 }>\n                            <img src={ ImgInsSmartMgmt } alt='Insights Satellite' />\n                        </GridItem>\n                        <GridItem md={ 6 } lg={ 7 }>\n                            <div className='insd-c-width-limiter pf-v5-u-pt-lg-on-lg' style={ { '--insd-c-width-limiter--MaxWidth': '600px' } }>\n                                <List>\n                                    <ListItem>{intl.formatMessage(messages.rhm1)}</ListItem>\n                                    <ListItem>{intl.formatMessage(messages.rhm2)}</ListItem>\n                                    <ListItem>{intl.formatMessage(messages.rhm3)}</ListItem>\n                                </List>\n                            </div>\n                        </GridItem>\n                        <GridItem md={ 6 } lg={ 7 } className='pf-v5-u-pl-lg'>\n                            <Flex>\n                                <FlexItem>\n                                    <Button\n                                        className='pf-m-secondary'\n                                        component='a'\n                                        target='_blank'\n                                        rel='noreferrer'\n                                        href='https://www.redhat.com/en/technologies/management/satellite'>\n                                        {intl.formatMessage(messages.learnmore)}\n                                    </Button>\n                                </FlexItem>\n                                <FlexItem>\n                                    <Button\n                                        className='pf-m-secondary'\n                                        component='a'\n                                        target='_blank'\n                                        rel='noreferrer'\n                                        href='https://www.redhat.com/en/contact'>\n                                        {intl.formatMessage(messages.contactsales)}\n                                    </Button>\n                                </FlexItem>\n                            </Flex>\n                        </GridItem>\n                    </Grid>\n                </FlexItem>\n            </Flex>\n        </PageSection>\n    </div>;\n};\n\nexport default ZeroState;\n"],"names":["IconList","_ref","iconListStyle","className","children","IconListClasses","classNames","React","style","propTypes","isRequired","IconListItem","iconListItemStyle","IconListItemClasses","MarketingBanner","hasGraphic","graphicRight","dark1000","fullBleed","MarketingBannerSectionClasses","_defineProperty","PageSection","isWidthLimited","intl","useIntl","hideGlobalFilter","useChrome","useEffect","Grid","GridItem","Flex","direction","default","FlexItem","Title","headingLevel","size","formatMessage","messages","noSystemsTitle","spacer","singleConsistent","InsightsLink","app","to","Button","component","variant","color","href","concat","UI_BASE","registerYourSystems","target","rel","learnmoreRHI","ArrowRightIcon","lg","hasGutter","Card","height","CardHeader","TextContent","zslblTitle","zslblBody","CardBody","zslblb1","zslblb2","zslblb3","zslblb4","zslblb5","zsrblTitle","zsrblBody","zsrblb1","zsrblb2","zsrblb3","zsrblb4","zsrblb5","dataPrivacyAndControlsTitle","dataPrivacyAndControls","securityRedirect","insightsandsatellite","satellite","md","mdRowSpan","src","ImgInsSmartMgmt","alt","List","ListItem","rhm1","rhm2","rhm3","learnmore","contactsales"],"sourceRoot":""}