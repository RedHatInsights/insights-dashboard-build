{"version":3,"sources":["webpack:///./src/PresentationalComponents/DashboardIcon/DashboardIcon.js","webpack:///./src/PresentationalComponents/Template/DataListItemTemplate.js","webpack:///./src/SmartComponents/NewRules/NewRules.js"],"names":["DashboardIcon","type","version","xmlnsCc","xmlnsDc","xmlnsRdf","xmlnsSvg","xmlns","xmlnsXlink","x","y","fill","height","width","viewBox","aria-hidden","role","d","points","propTypes","PropTypes","DataListItemTemplate","dataListItemTemplateContent","dataListItemTemplateDate","dataListItemTemplateSeverity","dataListItemTemplateKey","dataListItemTemplateName","dataListItemTemplateIsExpanded","props","useState","isExpanded","setIsExpanded","intl","useIntl","DataListItem","aria-labelledby","className","key","DataListItemRow","onClick","id","aria-controls","Button","variant","ButtonVariant","aria-expanded","formatMessage","messages","DataListItemCells","dataListCells","DataListCell","Flex","alignItems","default","alignSelf","Label","icon","capitalize","color","DateFormat","date","Title","headingLevel","size","description","defaultMessage","DataListContent","aria-label","isHidden","children","JSON","parse","localStorage","getItem","vulnerabilities","useSelector","DashboardStore","newRules","recent_rules","severityColor","1","2","3","4","pieChartPadding","bottom","left","right","top","DataList","gridBreakpoint","spaceItems","flexWrap","setItem","map","item","index","name","severity","public_date","direction","md","flex","FlexItem","spacer","TextContent","style","DescriptionList","DescriptionListGroup","DescriptionListTerm","associated_cves","cve","DescriptionListDescription","href","UI_BASE","xl","component","isSmall","node_id","rel","target","ariaDesc","ariaTitle","data","system_count","systems_affected","labels","datum","padding","colorScale"],"mappings":"6ZAMaA,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAAc,kBAAC,aAAD,KAC7B,gBAATA,GACD,yBAAKC,QAAQ,MAAMC,QAAQ,iCAAiCC,QAAQ,mCAAmCC,SAAS,8CAA8CC,SAAS,6BAA6BC,MAAM,6BAA6BC,WAAW,+BAA+BC,EAAE,MAAMC,EAAE,MAAMC,KAAK,eAAeC,OAAO,MAAMC,MAAM,MAAMC,QAAQ,cAAcC,cAAY,OAAOC,KAAK,OAAM,0BAAMC,EAAE,4XAEhY,qBAAThB,GACD,yBAAKC,QAAQ,MAAMC,QAAQ,iCAAiCC,QAAQ,mCAAmCC,SAAS,8CAA8CC,SAAS,6BAA6BC,MAAM,6BAA6BC,WAAW,+BAA+BC,EAAE,MAAMC,EAAE,MAAMC,KAAK,eAAeC,OAAO,MAAMC,MAAM,MAAMC,QAAQ,cAAcC,cAAY,OAAOC,KAAK,OAAM,0BAAMC,EAAE,4OAEhY,sBAAThB,GACD,yBAAKC,QAAQ,MAAMC,QAAQ,iCAAiCC,QAAQ,mCAAmCC,SAAS,8CAA8CC,SAAS,6BAA6BC,MAAM,6BAA6BC,WAAW,+BAA+BC,EAAE,MAAMC,EAAE,MAAMC,KAAK,eAAeC,OAAO,MAAMC,MAAM,MAAMC,QAAQ,cAAcC,cAAY,OAAOC,KAAK,OAAM,0BAAMC,EAAE,+XAEhY,qBAAThB,GACD,yBAAKC,QAAQ,MAAMC,QAAQ,iCAAiCC,QAAQ,mCAAmCC,SAAS,8CAA8CC,SAAS,6BAA6BC,MAAM,6BAA6BC,WAAW,+BAA+BC,EAAE,MAAMC,EAAE,MAAMC,KAAK,eAAeC,OAAO,MAAMC,MAAM,OAAOC,QAAQ,YAAYC,cAAY,OAAOC,KAAK,OAAM,6BAASE,OAAO,wCAIrZlB,EAAcmB,UAAY,CACtBlB,KAAMmB,YAGV,U,kOCDaC,EAAuB,SAAC,GAQ/B,IAPFC,EAOE,EAPFA,4BACAC,EAME,EANFA,yBACAC,EAKE,EALFA,6BACAC,EAIE,EAJFA,wBACAC,EAGE,EAHFA,yBACAC,EAEE,EAFFA,+BACGC,GACD,YACF,GAAoCC,cAASF,GAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACMC,GAAOC,SAEb,OAAO,kBAACC,EAAA,GAAD,QACHC,kBAAA,0BAAoCV,GACpCK,WAAYA,EACZM,UAAS,6BACTC,IAAKZ,GACDG,GAEJ,kBAACU,EAAA,EAAD,CAAiBF,UAAU,6CACvB,yBAAKA,UAAU,gCACX,yBAAKA,UAAU,yBACXG,QAAS,kBAAMR,GAAeD,IAC9BA,WAAYA,EACZU,GAAE,2BAAsBd,GACxBe,gBAAA,yBAAiCf,IACjC,kBAACgB,EAAA,GAAD,CAAQF,GAAE,yBAAoBd,EAApB,WAAuDiB,QAASC,WAAqBC,gBAAef,EAC1G7B,KAAK,SACLmC,UAAU,aACV,0BAAMA,UAAU,iEACXN,GAAcE,EAAKc,cAAcC,eAChCjB,GAAcE,EAAKc,cAAcC,aAEvC,yBAAKX,UAAU,+BACX,kBAAC,KAAD,UAKhB,kBAACY,EAAA,EAAD,CACIC,cAAe,CACX,kBAACC,EAAA,EAAD,CAAcb,IAAG,cAASZ,EAAT,kBAAkDW,UAAU,kDACzE,yBAAKA,UAAU,8BACX,kBAACe,EAAA,EAAD,CAAMC,WAAY,CAAEC,QAAS,oBAAsBC,UAAW,CAAED,QAAS,qBACnC,IAAjC7B,GACG,kBAAC+B,EAAA,EAAD,CAAOC,KAAM,kBAAC,EAAD,CAAevD,KAAK,kBAAmBwD,QAAWzB,EAAKc,cAAcC,WAEpD,IAAjCvB,GACG,kBAAC+B,EAAA,EAAD,CAAOG,MAAM,OAAOF,KAAM,kBAAC,EAAD,CAAevD,KAAK,uBACzCwD,QAAWzB,EAAKc,cAAcC,gBAGL,IAAjCvB,GACG,kBAAC+B,EAAA,EAAD,CAAOG,MAAM,SAASF,KAAM,kBAAC,EAAD,CAAevD,KAAK,wBAC3CwD,QAAWzB,EAAKc,cAAcC,iBAGL,IAAjCvB,GACG,kBAAC+B,EAAA,EAAD,CAAOG,MAAM,MAAMF,KAAM,kBAAC,EAAD,CAAevD,KAAK,uBACxCwD,QAAWzB,EAAKc,cAAcC,kBAK/C,0BAAMX,UAAU,qEACXqB,QAAWzB,EAAKc,cAAcC,wBADnC,IAEU,kBAAC,EAAAY,WAAD,CAAY1D,KAAK,WAAW2D,KAAMrC,KAE5C,kBAACsC,EAAA,EAAD,CAAOC,aAAa,KAAKC,KAAK,KAC1B3B,UAAU,4CAA4CI,GAAE,0BAAqBf,IAC7E,+BACKgC,QAAWzB,EAAKc,cAAc,CAC3BN,GAAI,YACJwB,YAAa,YACbC,eAAgBvC,YAQ5C,kBAACwC,EAAA,EAAD,CAAiBC,aAAW,0BAA0B3B,GAAG,aAAa4B,UAAWtC,GAC5ER,KAKbD,EAAqBF,UAAY,CAC7BG,4BAA6BH,QAC7BI,yBAA0BJ,WAC1BK,6BAA8BL,WAC9BM,wBAAyBN,QACzBO,yBAA0BP,WAC1BQ,+BAAgCR,SAChCkD,SAAUlD,S,gDCyCd,QAlIiB,WACb,IAAMa,GAAOC,SACb,GAAoCJ,cAASyC,KAAKC,MAAMC,aAAaC,QAAQ,2BAA6B,SAA1G,eAAO3C,EAAP,KAAmBC,EAAnB,KACM2C,GAAkBC,kBAAY,qBAAGC,eAAoCF,mBACvDG,EAAaH,EAA3BI,aACAC,EAAgB,CAClBC,EAAG,CAAC,UAAW,QACfC,EAAG,CAAC,UAAW,WACfC,EAAG,CAAC,UAAW,WACfC,EAAG,CAAC,UAAW,YAEbC,EAAkB,CAAEC,OAAQ,EAAGC,KAAM,EAAGC,MAAO,EAAGC,IAAK,GAE7D,OAAO,kBAACC,EAAA,GAAD,CAAUrD,UAAU,kFACvBsD,eAAe,QACf,kBAACxD,EAAA,EAAD,CAAcC,kBAAgB,oBAAoBL,WAAYA,GAC1D,kBAACQ,EAAA,EAAD,CAAiBF,UAAU,wCACvB,kBAACY,EAAA,EAAD,CACIC,cAAe,CACX,kBAACC,EAAA,EAAD,CAAcb,IAAI,mBACd,kBAACc,EAAA,EAAD,CAAMwC,WAAY,CAAEtC,QAAS,gBAAkBD,WAAY,CAAEC,QAAS,oBAClEuC,SAAU,CAAEvC,QAAS,WACrB,kBAAC,KAAD,CAAyBjB,UAAU,6CACnC,0BAAMI,GAAG,oBAAoBJ,UAAU,yBAAyBJ,EAAKc,cAAcC,0BAKnG,yBAAKX,UAAU,gCACX,yBAAKA,UAAU,yBACXG,QAAS,WAAQiC,aAAaqB,QAAQ,yBAArB,WAAmD/D,IAAeC,GAAeD,IAClGA,WAAYA,EACZU,GAAE,mBACFC,gBAAA,kBACA,kBAACC,EAAA,GAAD,CAAQF,GAAE,wBAA2BG,QAASC,WAAqBC,gBAAef,EAC9E7B,KAAK,SACLmC,UAAU,aACV,0BAAMA,UAAU,iEACXN,GAAcE,EAAKc,cAAcC,kBAChCjB,GAAcE,EAAKc,cAAcC,aAEvC,yBAAKX,UAAU,+BACX,kBAAC,KAAD,YAOvBN,IAAc+C,aAAJ,EAAIA,EAAUiB,KAAI,SAACC,EAAMC,GAAP,OACzB,kBAAC3E,EAAD,CACIgB,IAAK0D,EAAK1D,IACVZ,wBAAyBsE,EAAK1D,IAC9BX,yBAA0BqE,EAAKE,KAC/BzE,6BAA8BuE,EAAKG,SACnC3E,yBAA0BwE,EAAKI,YAC/B7E,4BACI,kBAAC6B,EAAA,EAAD,CAAMiD,UAAW,CAAE/C,QAAS,SAAUgD,GAAI,OACtCjD,WAAY,CAAEiD,GAAI,uBAClBV,WAAY,CAAEU,GAAI,iBAClBT,SAAU,CAAEvC,QAAS,WACrB,kBAACF,EAAA,EAAD,CAAMiD,UAAW,CAAE/C,QAAS,UAAYiD,KAAM,CAAED,GAAI,WAChD,kBAACE,EAAA,EAAD,CAAUC,OAAQ,CAAEnD,QAAS,aACzB,kBAACQ,EAAA,EAAD,CAAOC,aAAa,KAAKC,KAAK,KAAK3B,UAAU,2BACzC,+BACKqB,QAAWzB,EAAKc,cAAc,CAC3BN,GAAI,YACJwB,YAAa,YACbC,eAAgB8B,EAAKE,WAIrC,kBAACQ,EAAA,EAAD,CAAarE,UAAU,sBACnBsE,MAAO,CACH,wCAAyC,OACzC,wCAAyC,OACzC,yCAA0C,OAC1C,yCAA0C,SAE9C,8BACKjD,QAAWzB,EAAKc,cAAc,CAC3BN,GAAI,mBAAF,OAAqBwD,GACvBhC,YAAa,mBAAF,OAAqBgC,GAChC/B,eAAgB8B,EAAK/B,iBAGjC,kBAAC2C,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,wBACCd,EAAKe,gBAAgBhB,KAAI,SAACiB,GAAD,OACtB,kBAACC,EAAA,EAAD,CAA4B3E,IAAK0E,EAAI1E,KACjC,uBAAG4E,KAAI,UAAKC,KAAL,+BAAmCH,IAAQA,SAIlE,kBAAC5D,EAAA,EAAD,CAAMmD,KAAM,CAAED,GAAI,SAAUc,GAAI,gBAC5B,kBAACzE,EAAA,GAAD,CAAQzC,KAAK,IAAIgH,KAAI,UAAKC,KAAL,+BAAmCnB,EAAKe,gBAAgB,IACzEM,UAAU,IAAIzE,QAAQ,YAAY0E,SAAO,GAAErF,EAAKc,cAAcC,kBACjEgD,EAAKuB,SAAW,uBAAGL,KAAI,yCAAoClB,EAAKuB,SAAWC,IAAI,aAAaC,OAAO,UAC/FxF,EAAKc,cAAcC,kBAIhC,kBAACI,EAAA,EAAD,CAAMmD,KAAM,CAAEjD,QAAS,UAAYD,WAAY,CAAEC,QAAS,qBACtD,kBAACF,EAAA,EAAD,CAAMC,WAAY,CAAEC,QAAS,oBAAsBuC,SAAU,CAAEvC,QAAS,WACpE,kBAACkD,EAAA,EAAD,KACI,kBAAC,IAAD,CACIkB,SAAS,KACTC,UAAU,KACVC,KAAM,CAAC,CAAElH,EAAG,gBAAiBC,EAAGgE,EAAgBkD,cAC5C,CAAEnH,EAAG,mBAAoBC,EAAGqF,EAAK8B,mBAErCC,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,gBAAkBA,EAAMtH,EAAxB,aAA8BsH,EAAMrH,IAC5CsH,QAAS5C,EACTxE,OAAQ,GACRC,MAAO,GACPoH,WAAYlD,EAAcgB,EAAKG,aAEvC,kBAAC/C,EAAA,EAAD,CAAMiD,UAAW,CAAE/C,QAAS,UAAYsC,WAAY,CAAEtC,QAAS,mBAC3D,yBAAKjB,UAAU,sBAAsB2D,EAAK8B,kBAC1C,6BAAM7F,EAAKc,cAAcC","file":"js/851.8d18ed7427a6bced3b21.js","sourcesContent":["/* eslint-disable max-len */\nimport './DashboardIcon.scss';\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nexport const DashboardIcon = ({ type }) => <React.Fragment>\n    {type === 'lowSeverity' &&\n    <svg version=\"1.1\" xmlnsCc=\"http://creativecommons.org/ns#\" xmlnsDc=\"http://purl.org/dc/elements/1.1/\" xmlnsRdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlnsSvg=\"http://www.w3.org/2000/svg\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" fill=\"currentColor\" height=\"1em\" width=\"1em\" viewBox=\"0 0 320 512\" aria-hidden=\"true\" role=\"img\"><path d=\"M143 256.3L7 120.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0L313 86.3c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.4 9.5-24.6 9.5-34 .1zm34 192l136-136c9.4-9.4 9.4-24.6 0-33.9l-22.6-22.6c-9.4-9.4-24.6-9.4-33.9 0L160 352.1l-96.4-96.4c-9.4-9.4-24.6-9.4-33.9 0L7 278.3c-9.4 9.4-9.4 24.6 0 33.9l136 136c9.4 9.5 24.6 9.5 34 .1z\"></path></svg>\n    }\n    {type === 'moderateSeverity' &&\n    <svg version=\"1.1\" xmlnsCc=\"http://creativecommons.org/ns#\" xmlnsDc=\"http://purl.org/dc/elements/1.1/\" xmlnsRdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlnsSvg=\"http://www.w3.org/2000/svg\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" fill=\"currentColor\" height=\"1em\" width=\"1em\" viewBox=\"0 0 448 512\" aria-hidden=\"true\" role=\"img\"><path d=\"M416 304H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32zm0-192H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z\"></path></svg>\n    }\n    {type === 'importantSeverity' &&\n    <svg version=\"1.1\" xmlnsCc=\"http://creativecommons.org/ns#\" xmlnsDc=\"http://purl.org/dc/elements/1.1/\" xmlnsRdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlnsSvg=\"http://www.w3.org/2000/svg\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" fill=\"currentColor\" height=\"1em\" width=\"1em\" viewBox=\"0 0 320 512\" aria-hidden=\"true\" role=\"img\"><path d=\"M177 255.7l136 136c9.4 9.4 9.4 24.6 0 33.9l-22.6 22.6c-9.4 9.4-24.6 9.4-33.9 0L160 351.9l-96.4 96.4c-9.4 9.4-24.6 9.4-33.9 0L7 425.7c-9.4-9.4-9.4-24.6 0-33.9l136-136c9.4-9.5 24.6-9.5 34-.1zm-34-192L7 199.7c-9.4 9.4-9.4 24.6 0 33.9l22.6 22.6c9.4 9.4 24.6 9.4 33.9 0l96.4-96.4 96.4 96.4c9.4 9.4 24.6 9.4 33.9 0l22.6-22.6c9.4-9.4 9.4-24.6 0-33.9l-136-136c-9.2-9.4-24.4-9.4-33.8 0z\"></path></svg>\n    }\n    {type === 'criticalSeverity' &&\n    <svg version=\"1.1\" xmlnsCc=\"http://creativecommons.org/ns#\" xmlnsDc=\"http://purl.org/dc/elements/1.1/\" xmlnsRdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlnsSvg=\"http://www.w3.org/2000/svg\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" fill=\"currentColor\" height=\"1em\" width=\".8em\" viewBox=\"0 0 10 10\" aria-hidden=\"true\" role=\"img\"><polygon points=\"10 10, 10 3, 5 0, 0 3, 0 10, 5 8\"></polygon></svg>\n    }\n</React.Fragment>;\n\nDashboardIcon.propTypes = {\n    type: PropTypes.string\n};\n\nexport default DashboardIcon;\n","import './DataListItemTemplate.scss';\n\nimport {\n    Button,\n    ButtonVariant,\n    DataListCell,\n    DataListContent,\n    DataListItem,\n    DataListItemCells,\n    DataListItemRow,\n    Label,\n    Title\n} from '@patternfly/react-core/dist/esm/components';\nimport React, { useState } from 'react';\n\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport DashboardIcon from '../DashboardIcon/DashboardIcon';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components';\nimport { Flex } from '@patternfly/react-core/dist/esm/layouts';\nimport { capitalize } from '../../Utilities/Common';\nimport messages from '../../Messages';\nimport propTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\n\nexport const DataListItemTemplate = ({\n    dataListItemTemplateContent,\n    dataListItemTemplateDate,\n    dataListItemTemplateSeverity,\n    dataListItemTemplateKey,\n    dataListItemTemplateName,\n    dataListItemTemplateIsExpanded,\n    ...props\n}) => {\n    const [isExpanded, setIsExpanded] = useState(dataListItemTemplateIsExpanded);\n    const intl = useIntl();\n\n    return <DataListItem\n        aria-labelledby={`itemDescription-${dataListItemTemplateKey}`}\n        isExpanded={isExpanded}\n        className={`ins-c-dashboard__list-item`}\n        key={dataListItemTemplateKey}\n        {...props}\n    >\n        <DataListItemRow className=\"ins-c-dashboard-data-list__controller-row\">\n            <div className='pf-c-data-list__item-control'>\n                <div className='pf-c-data-list__toggle'\n                    onClick={() => setIsExpanded(!isExpanded)}\n                    isExpanded={isExpanded}\n                    id={`data-list-toggle-${dataListItemTemplateName}`}\n                    aria-controls={`data-list-item-${dataListItemTemplateName}`}>\n                    <Button id={`data-list-item-${dataListItemTemplateName}-toggle`} variant={ButtonVariant.plain} aria-expanded={isExpanded}\n                        type='button'\n                        className='pf-m-link'                    >\n                        <span className='pf-c-data-list__toggle-text pf-c-button pf-m-inline pf-m-link'>\n                            {isExpanded && intl.formatMessage(messages.collapse)}\n                            {!isExpanded && intl.formatMessage(messages.expand)}\n                        </span>\n                        <div className='pf-c-data-list__toggle-icon'>\n                            <AngleRightIcon />\n                        </div>\n                    </Button>\n                </div>\n            </div>\n            <DataListItemCells\n                dataListCells={[\n                    <DataListCell key={`key-${dataListItemTemplateKey}-datalist-cell`} className=\"ins-c-dashboard-data-list__controller-row-cell\">\n                        <div className='ins-c-new-rules-severities'>\n                            <Flex alignItems={{ default: 'alignItemsCenter' }} alignSelf={{ default: 'alignSelfStretch' }}>\n                                {dataListItemTemplateSeverity === 1 &&\n                                    <Label icon={<DashboardIcon type='lowSeverity' />}>{capitalize(intl.formatMessage(messages.low))}</Label>\n                                }\n                                {dataListItemTemplateSeverity === 2 &&\n                                    <Label color=\"blue\" icon={<DashboardIcon type='moderateSeverity' />}>\n                                        {capitalize(intl.formatMessage(messages.moderate))}\n                                    </Label>\n                                }\n                                {dataListItemTemplateSeverity === 3 &&\n                                    <Label color=\"orange\" icon={<DashboardIcon type='importantSeverity' />}>\n                                        {capitalize(intl.formatMessage(messages.important))}\n                                    </Label>\n                                }\n                                {dataListItemTemplateSeverity === 4 &&\n                                    <Label color=\"red\" icon={<DashboardIcon type='criticalSeverity' />}>\n                                        {capitalize(intl.formatMessage(messages.critical))}\n                                    </Label>\n                                }\n                            </Flex>\n                        </div>\n                        <span className='ins-c-dashboard-data-list__date pf-u-color-200 pf-u-font-size-sm'>\n                            {capitalize(intl.formatMessage(messages.newRulesDateTitle))}\n                            &nbsp;<DateFormat type='onlyDate' date={dataListItemTemplateDate} />\n                        </span>\n                        <Title headingLevel='h4' size='md'\n                            className='pf-u-font-weight-light ins-c-title-toggle' id={`itemDescription-${dataListItemTemplateKey}`}>\n                            <span>\n                                {capitalize(intl.formatMessage({\n                                    id: 'itemTitle',\n                                    description: 'itemTitle',\n                                    defaultMessage: dataListItemTemplateName\n                                }))}\n                            </span>\n                        </Title>\n                    </DataListCell>\n                ]}\n            />\n        </DataListItemRow>\n        <DataListContent aria-label='Primary Content Details' id='ex-expand1' isHidden={!isExpanded}>\n            {dataListItemTemplateContent}\n        </DataListContent>\n    </DataListItem>;\n};\n\nDataListItemTemplate.propTypes = {\n    dataListItemTemplateContent: propTypes.any,\n    dataListItemTemplateDate: propTypes.string,\n    dataListItemTemplateSeverity: propTypes.number,\n    dataListItemTemplateKey: propTypes.any,\n    dataListItemTemplateName: propTypes.string,\n    dataListItemTemplateIsExpanded: propTypes.bool,\n    children: propTypes.any\n};\n","import './NewRules.scss';\n\nimport {\n    Button,\n    ButtonVariant,\n    DataList,\n    DataListCell,\n    DataListItem,\n    DataListItemCells,\n    DataListItemRow,\n    DescriptionList,\n    DescriptionListDescription,\n    DescriptionListGroup,\n    DescriptionListTerm,\n    TextContent,\n    Title\n} from '@patternfly/react-core/dist/esm/components';\nimport { Flex, FlexItem } from '@patternfly/react-core/dist/esm/layouts';\nimport React, { useState } from 'react';\n\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { DataListItemTemplate } from '../../PresentationalComponents/Template/DataListItemTemplate';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport { PieChart } from '../../ChartTemplates/PieChart/PieChartTemplate';\nimport { UI_BASE } from '../../AppConstants';\nimport { capitalize } from '../../Utilities/Common';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\n\nconst NewRules = () => {\n    const intl = useIntl();\n    const [isExpanded, setIsExpanded] = useState(JSON.parse(localStorage.getItem('dashboard_expanded_cta') || 'true'));\n    const vulnerabilities = useSelector(({ DashboardStore }) => DashboardStore.vulnerabilities);\n    let { recent_rules: newRules } = vulnerabilities;\n    const severityColor = {\n        1: ['#2b9af3', '#06c'],\n        2: ['#f4c145', '#c58c00'],\n        3: ['#ec7a08', '#8f4700'],\n        4: ['#c9190b', '#470000']\n    };\n    const pieChartPadding = { bottom: 0, left: 0, right: 0, top: 0 };\n\n    return <DataList className='ins-c-dashboard-data-list ins-m-toggle-right-on-md ins-m-no-border pf-m-compact'\n        gridBreakpoint='none'>\n        <DataListItem aria-labelledby='collapse-all-text' isExpanded={isExpanded}>\n            <DataListItemRow className='ins-c-dashboard-data-list__title-row'>\n                <DataListItemCells\n                    dataListCells={[\n                        <DataListCell key='primary content'>\n                            <Flex spaceItems={{ default: 'spaceItemsMd' }} alignItems={{ default: 'alignItemsCenter' }}\n                                flexWrap={{ default: 'nowrap' }}>\n                                <ExclamationTriangleIcon className='pf-u-font-size-xl pf-u-warning-color-100' />\n                                <span id='collapse-all-text' className='pf-u-font-weight-bold'>{intl.formatMessage(messages.latestCritical)}</span>\n                            </Flex>\n                        </DataListCell>\n                    ]}\n                />\n                <div className='pf-c-data-list__item-control'>\n                    <div className='pf-c-data-list__toggle'\n                        onClick={() => { localStorage.setItem('dashboard_expanded_cta', `${!isExpanded}`); setIsExpanded(!isExpanded); }}\n                        isExpanded={isExpanded}\n                        id={`data-list-toggle`}\n                        aria-controls={`data-list-item`}>\n                        <Button id={`data-list-item-toggle`} variant={ButtonVariant.plain} aria-expanded={isExpanded}\n                            type='button'\n                            className='pf-m-link'>\n                            <span className='pf-c-data-list__toggle-text pf-c-button pf-m-inline pf-m-link'>\n                                {isExpanded && intl.formatMessage(messages.collapseAll)}\n                                {!isExpanded && intl.formatMessage(messages.expand)}\n                            </span>\n                            <div className='pf-c-data-list__toggle-icon'>\n                                <AngleRightIcon />\n                            </div>\n                        </Button>\n                    </div>\n                </div>\n            </DataListItemRow>\n        </DataListItem>\n        {isExpanded && newRules?.map((item, index) =>\n            <DataListItemTemplate\n                key={item.key}\n                dataListItemTemplateKey={item.key}\n                dataListItemTemplateName={item.name}\n                dataListItemTemplateSeverity={item.severity}\n                dataListItemTemplateDate={item.public_date}\n                dataListItemTemplateContent={\n                    <Flex direction={{ default: 'column', md: 'row' }}\n                        alignItems={{ md: 'alignItemsFlexStart' }}\n                        spaceItems={{ md: 'spaceItems2xl' }}\n                        flexWrap={{ default: 'nowrap' }}>\n                        <Flex direction={{ default: 'column' }} flex={{ md: 'flex_3' }}>\n                            <FlexItem spacer={{ default: 'spacerXs' }}>\n                                <Title headingLevel='h4' size='xl' className='pf-u-font-weight-lights'>\n                                    <span>\n                                        {capitalize(intl.formatMessage({\n                                            id: 'itemTitle',\n                                            description: 'itemTitle',\n                                            defaultMessage: item.name\n                                        }))}</span>\n                                </Title>\n                            </FlexItem>\n                            <TextContent className='ins-c-width-limiter'\n                                style={{\n                                    '--ins-c-width-limiter--MaxWidth-on-lg': '50ch',\n                                    '--ins-c-width-limiter--MinWidth-on-lg': '50ch',\n                                    '--ins-c-width-limiter--MaxWidth-on-2xl': '70ch',\n                                    '--ins-c-width-limiter--MinWidth-on-2xl': '70ch'\n                                }}>\n                                <div>\n                                    {capitalize(intl.formatMessage({\n                                        id: `itemDescription-${index}`,\n                                        description: `itemDescription-${index}`,\n                                        defaultMessage: item.description\n                                    }))}</div>\n                            </TextContent>\n                            <DescriptionList>\n                                <DescriptionListGroup>\n                                    <DescriptionListTerm>Associated CVEs</DescriptionListTerm>\n                                    {item.associated_cves.map((cve) =>\n                                        <DescriptionListDescription key={cve.key}>\n                                            <a href={`${UI_BASE}/vulnerability/cves/${cve}`}>{cve}</a>\n                                        </DescriptionListDescription>\n                                    )}</DescriptionListGroup>\n                            </DescriptionList>\n                            <Flex flex={{ md: 'flex_1', xl: 'flexDefault' }}>\n                                <Button type='a' href={`${UI_BASE}/vulnerability/cves/${item.associated_cves[0]}`}\n                                    component='a' variant='secondary' isSmall>{intl.formatMessage(messages.viewDetails)}</Button>\n                                {item.node_id && <a href={`https://access.redhat.com/node/${item.node_id}`} rel='noreferrer' target='_blank'>\n                                    {intl.formatMessage(messages.moreAbout)}\n                                </a>}\n                            </Flex>\n                        </Flex>\n                        <Flex flex={{ default: 'flex_2' }} alignItems={{ default: 'alignItemsCenter' }}>\n                            <Flex alignItems={{ default: 'alignItemsCenter' }} flexWrap={{ default: 'nowrap' }}>\n                                <FlexItem>\n                                    <PieChart\n                                        ariaDesc='--'\n                                        ariaTitle='--'\n                                        data={[{ x: 'Total systems', y: vulnerabilities.system_count },\n                                            { x: 'Systems affected', y: item.systems_affected }\n                                        ]}\n                                        labels={({ datum }) => `${datum.x}: ${datum.y}`}\n                                        padding={pieChartPadding}\n                                        height={80}\n                                        width={80}\n                                        colorScale={severityColor[item.severity]} />\n                                </FlexItem>\n                                <Flex direction={{ default: 'column' }} spaceItems={{ default: 'spaceItemsNone' }}>\n                                    <div className='pf-u-font-size-2xl'>{item.systems_affected}</div>\n                                    <div>{intl.formatMessage(messages.systemsExposed)}</div>\n                                </Flex>\n                            </Flex>\n                        </Flex>\n                    </Flex>\n                } />\n        )}\n    </DataList>;\n};\n\nexport default NewRules;\n"],"sourceRoot":""}