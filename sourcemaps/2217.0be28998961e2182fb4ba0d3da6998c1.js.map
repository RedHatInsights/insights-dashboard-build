{"version":3,"file":"js/2217.1702466256758.ab59b71b0fffef791820.js","mappings":"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","sources":["webpack:///./src/ChartTemplates/PieChart/PieChartTemplate.js","webpack:///./src/PresentationalComponents/Template/CompoundCard.js","webpack:///./src/SmartComponents/Vulnerability/VulnerabilityCard.js","webpack:///./src/Utilities/Hooks.js"],"sourcesContent":["import './PieChartTemplate.scss';\n\nimport { ChartLabel } from '@patternfly/react-charts/dist/esm/components/ChartLabel/ChartLabel';\nimport { ChartLegend } from '@patternfly/react-charts/dist/esm/components/ChartLegend/ChartLegend';\nimport { ChartPie } from '@patternfly/react-charts/dist/esm/components/ChartPie/ChartPie';\nimport React from 'react';\nimport propTypes from 'prop-types';\n\nexport const PieChart = ({ ariaDesc, ariaTitle, constrainToVisibleArea, data, legendData, padding, height, width, legendOrientation,\n    colorScale, legend, legendWidth, legendHeight, legendClick }) => {\n    // eslint-disable-next-line react/prop-types\n    const LegendLabel = ({ index, ...rest }) => <a id={ `${ariaTitle.toLowerCase().replace(/\\s/g, '-')}-legend-${index + 1}` }\n        href={ legendClick[index] } className=\"pf-c-button pf-m-link pf-m-inline\"><ChartLabel { ...rest } /></a>;\n\n    return (\n        <div className=\"insd-c-pie-chart__row\">\n            <div style={ { width, height, position: 'relative' } }>\n                <ChartPie\n                    ariaDesc={ ariaDesc }\n                    ariaTitle={ ariaTitle }\n                    constrainToVisibleArea={ constrainToVisibleArea }\n                    data={ data }\n                    height={ height }\n                    labels={ ({ datum }) => `${datum.x}: ${datum.y}` }\n                    padding={ padding }\n                    width={ width }\n                    colorScale={ colorScale }\n                />\n                <table tabIndex=\"0\" className=\"visually-hidden\" aria-label={ ariaTitle + ` data` }>\n                    <tbody>\n                        {data.map((d, index) => {\n                            return [\n                                <tr key={ index }>\n                                    <td>{d.y}</td>\n                                    <td>{d.x}</td>\n                                </tr>\n                            ];\n                        })}\n                    </tbody>\n                </table>\n            </div>\n            {legend &&\n                <div className=\"insd-c-pie-chart__legend\" aria-label=\"Chart legend\" style={ { width: legendWidth, height: legendHeight } }>\n                    <ChartLegend\n                        height={ legendHeight }\n                        width={ legendWidth }\n                        fontSize={ 14 }\n                        data={ legendData }\n                        rowGutter={ { top: -5, bottom: -5 } }\n                        orientation={ legendOrientation }\n                        labelComponent={ legendClick && < LegendLabel /> }\n                    />\n                </div>\n            }\n        </div>\n    );\n};\n\nPieChart.propTypes = {\n    ariaDesc: propTypes.string,\n    ariaTitle: propTypes.string,\n    constrainToVisibleArea: propTypes.bool,\n    data: propTypes.array,\n    legendData: propTypes.array,\n    padding: propTypes.object,\n    height: propTypes.number,\n    width: propTypes.number,\n    legendOrientation: propTypes.string,\n    colorScale: propTypes.array,\n    legend: propTypes.bool,\n    legendWidth: propTypes.number,\n    legendHeight: propTypes.number,\n    legendClick: propTypes.any\n};\n\nexport default PieChart;\n","import './CompoundCard.scss';\n\nimport { Card } from '@patternfly/react-core/dist/esm/components/Card/Card';\nimport React from 'react';\nimport propTypes from 'prop-types';\n\nexport const CompoundCard = ({ className, children, ...props }) => <Card\n    className={`insd-c-dashboard-compound-card insd-c-dashboard__card ${className}`} {...props}>\n    {children}\n</Card>;\n\nCompoundCard.propTypes = {\n    children: propTypes.any,\n    className: propTypes.string\n};\n\n","import './VulnerabilityCard.scss';\n\nimport * as AppActions from '../../AppActions';\n\nimport {\n    Button,\n    TextContent,\n    Tooltip,\n    TooltipPosition\n} from '@patternfly/react-core/dist/esm/components';\nimport { Flex } from '@patternfly/react-core/dist/esm/layouts';\nimport React, { useEffect, useState } from 'react';\nimport { fitContent, Table, TableBody, TableHeader, TableText, textCenter } from '@patternfly/react-table';\nimport { TemplateCard, TemplateCardBody, TemplateCardHeader } from '../../PresentationalComponents/Template/TemplateCard';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { CompoundCard } from '../../PresentationalComponents/Template/CompoundCard';\nimport { ExpandableCardTemplate } from '../../PresentationalComponents/Template/ExpandableCardTemplate';\nimport FailState from '../../PresentationalComponents/FailState/FailState';\nimport InfoIcon from '../../Icons/InfoIcon';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport { PieChart } from '../../ChartTemplates/PieChart/PieChartTemplate';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/esm/global_disabled_color_100';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\nimport InsightsLink from '@redhat-cloud-services/frontend-components/InsightsLink/InsightsLink';\nimport { useFeatureFlag } from '../../Utilities/Hooks';\nimport Api from '../../Utilities/Api';\nimport { VULNERABILITIES_CVES_URL } from '../../AppConstants';\n\nconst VulnerabilityCard = () => {\n    const intl = useIntl();\n    const pieChartPadding = { bottom: 0, left: 0, right: 0, top: 0 };\n    let chartData = [];\n    let rows = [];\n    let legendLink = [];\n    const dispatch = useDispatch();\n    const vulnerabilities = useSelector(({ DashboardStore }) => DashboardStore.vulnerabilities);\n    const vulnerabilitiesFetchStatus = useSelector(({ DashboardStore }) => DashboardStore.vulnerabilitiesFetchStatus);\n    const selectedTags = useSelector(({ DashboardStore }) => DashboardStore.selectedTags);\n    const workloads = useSelector(({ DashboardStore }) => DashboardStore.workloads);\n    const SID = useSelector(({ DashboardStore }) => DashboardStore.SID);\n    const strong = str => <strong>{str}</strong>;\n    const [accountHasEdgeDevices, setAccountHasEdgeDevices] = useState(false);\n    const isEdgeParityEnabled = useFeatureFlag('vulnerability.edge_parity');\n\n    const iconTooltip = text => <Tooltip\n        key={text}\n        position={TooltipPosition.right}\n        content={<div>{text}</div>}>\n        <span aria-label='Action' className='insd-c-info-icon pf-u-ml-sm'>\n            <InfoIcon />\n        </span>\n    </Tooltip>;\n\n    const columns = [\n        {\n            title: 'CVSS score'\n        },\n        {\n            title: 'CVE totals',\n            transforms: [textCenter],\n            cellTransforms: [textCenter]\n        },\n        {\n            title: (\n                <span>Known exploits{iconTooltip(intl.formatMessage(messages.exploitedCveTooltip))}</span>\n            ),\n            transforms: [fitContent]\n        }];\n\n    useEffect(() => {\n        const options = {\n            ...workloads?.SAP?.isSelected && { sap_system: true },\n            ...workloads?.['Ansible Automation Platform']?.isSelected\n                && { ansible: 'true' },\n            ...workloads?.['Microsoft SQL']?.isSelected\n                && { mssql: 'true' },\n            ...SID?.length > 0 && { sap_sids: SID },\n            ...selectedTags?.length > 0 && { tags: selectedTags }\n        };\n        const fetchVulnerabilities = options => dispatch(AppActions.fetchVulnerabilities(options));\n\n        fetchVulnerabilities(options);\n    }, [workloads, SID, selectedTags, dispatch]);\n\n    useEffect(() => {\n        const checkEdgeDevices = () => {\n            Api.get(VULNERABILITIES_CVES_URL, {}, { limit: 1 }).\n            then(\n                ({ data } = {}) => setAccountHasEdgeDevices(data?.meta?.system_count_per_type?.edge > 0 || false)\n            );\n        };\n\n        checkEdgeDevices();\n    }, []);\n\n    const affectingFilterValue = accountHasEdgeDevices && isEdgeParityEnabled ? 'rpmdnf,edge' : 'true';\n\n    if (vulnerabilitiesFetchStatus === 'fulfilled') {\n        let { cves_by_severity: bySeverity } = vulnerabilities;\n\n        chartData = [{\n            x: 'CVSS 8.0 - 10',\n            from: 8.0,\n            to: 10.0,\n            y: bySeverity['8to10'].count,\n            fill: '#a30000',\n            data: bySeverity['8to10']\n        },\n        {\n            x: 'CVSS 4.0 - 7.9',\n            from: 4.0,\n            to: 7.9,\n            y: bySeverity['4to7.9'].count,\n            fill: '#ec7a08',\n            data: bySeverity['4to7.9']\n        },\n        {\n            x: 'CVSS 0.0 - 3.9',\n            from: 0.0,\n            to: 3.9,\n            y: bySeverity['0to3.9'].count,\n            fill: '#f0ab00',\n            data: bySeverity['0to3.9']\n        }];\n\n        legendLink = (from, to) => `/cves?cvss_from=${from}&cvss_to=${to}`;\n\n        rows = chartData.map(({ data, from, to, fill }) => [{\n            title: <TableText wrapModifier='nowrap' className='insd-c-legend__dot'\n                style={{ '--insd-c-legend__dot--BackgroundColor': `${fill}` }}>\n                <InsightsLink to={legendLink(from, to)} app='vulnerability'>{`${from}.0 - ${to}`}</InsightsLink>\n            </TableText>\n        }, {\n            title:\n                <InsightsLink\n                    app='vulnerability'\n                    to={legendLink(from, to)}\n                    className='pf-u-text-align-center'\n                >\n                    {data.count}\n                </InsightsLink>,\n            props: { textCenter: true }\n        }, {\n            title:\n                <InsightsLink\n                    app='vulnerability'\n                    to={legendLink(from, to) + '&known_exploit=true'}\n                    className='pf-u-text-align-center'\n                >\n                    {data.known_exploits === undefined ? 'N/A' : data.known_exploits}\n                </InsightsLink>,\n            props: { textCenter: true }\n        }]);\n    }\n\n    if (vulnerabilitiesFetchStatus === 'rejected') {\n        return <TemplateCard isFilled={false} className='ins-c-card__vulnerability' data-ouia-safe>\n            <TemplateCardHeader title={intl.formatMessage(messages.vulnerabilitiesTitle)} />\n            <TemplateCardBody><FailState appName='Vulnerability' /></TemplateCardBody>\n        </TemplateCard>;\n    }\n\n    return <CompoundCard className='insd-c-dashboard-card-parent insd-c-dashboard__card--compound--Vulnerabilities'\n        data-ouia-safe={vulnerabilitiesFetchStatus !== 'pending'}>\n        <ExpandableCardTemplate\n            appName='Vulnerabilities'\n            className='insd-m-toggle-right-on-md insd-m-short-header'\n            data-ouia-safe={vulnerabilitiesFetchStatus !== 'pending'}\n            title={intl.formatMessage(messages.vulnerabilitiesTitle)}\n            isExpanded={JSON.parse(localStorage.getItem('dashboard_expanded_vulnerability1') || 'true')}\n            isExpandedCallback={isExpanded => localStorage.setItem('dashboard_expanded_vulnerability1', isExpanded)}\n            body={vulnerabilitiesFetchStatus === 'fulfilled' ? <TemplateCardBody className='insd-c-dashboard__card--Vulnerabilities__card-body'>\n                <Flex\n                    direction={{ default: 'column' }}\n                    spaceItems={{ default: 'spaceItemsLg' }}\n                    flexWrap={{ default: 'nowrap' }}\n                >\n                    <TextContent\n                        className='insd-c-width-limiter'\n                        style={{ '--insd-c-width-limiter--MaxWidth': '54ch' }}>\n                        <p className='pf-u-font-size-sm'>\n                            {intl.formatMessage(messages.vulnerabilityMessage)}\n                        </p>\n                    </TextContent>\n                    <div className=\"insd-c-dashboard__card--Vulnerabilities--SplitMetrics\">\n                        <div className=\"insd-c-dashboard__card--Vulnerabilities--SplitMetrics__item\">\n                            <div className=\"insd-c-dashboard__card--Vulnerabilities--SplitMetrics__content\">\n                                <InsightsLink className='pf-u-font-size-2xl pf-u-color-100'\n                                    aria-label='Security rules link'\n                                    app='vulnerability'\n                                    to={`/cves?affecting=${affectingFilterValue}&rule_presence=true`}\n                                    rel='noreferrer'>\n                                    {vulnerabilities.rules_cves_total}\n                                </InsightsLink>\n                                <TextContent>\n                                    <p className='pf-u-font-size-sm'>\n                                        {intl.formatMessage(messages.cvesImpactingOneOrMoreSystems, {\n                                            cves: vulnerabilities.rules_cves_total,\n                                            strong: string => strong(string)\n                                        })}\n                                    </p>\n                                </TextContent>\n                            </div>\n                            <InsightsLink\n                                aria-label='Security rules link'\n                                app='vulnerability'\n                                to={`/cves?affecting=${affectingFilterValue}&rule_presence=true`}\n                                rel='noreferrer'\n                            >\n                                <Button variant='secondary' isSmall>\n                                    {intl.formatMessage(messages.vulnerabilityCardCTAText)}\n                                </Button>\n                            </InsightsLink>\n                        </div>\n                        <div className=\"insd-c-dashboard__card--Vulnerabilities--SplitMetrics__item\">\n                            <div className=\"insd-c-dashboard__card--Vulnerabilities--SplitMetrics__content\">\n                                <InsightsLink\n                                    aria-label='Known exploit link'\n                                    className='pf-u-font-size-2xl pf-u-color-100'\n                                    app='vulnerability'\n                                    to={`/cves?known_exploit=true&affecting=${affectingFilterValue}`} rel='noreferrer'>\n                                    {vulnerabilities.exploited_cves_count}\n                                </InsightsLink>\n                                <TextContent>\n                                    <p className='pf-u-font-size-sm'>\n                                        {intl.formatMessage(messages.knownExploitsOneOrMoreSystems, {\n                                            cves: vulnerabilities.exploited_cves_count,\n                                            strong: string => strong(string),\n                                            tooltip: () => iconTooltip(intl.formatMessage(messages.exploitedCveTooltip))\n                                        })}\n                                    </p>\n                                </TextContent>\n                            </div>\n                            <InsightsLink\n                                aria-label='Known exploit link'\n                                app='vulnerability'\n                                to={`/cves?known_exploit=true&affecting=${affectingFilterValue}`}\n                                rel='noreferrer'\n                            >\n                                <Button rel='noreferrer'variant='secondary' isSmall>\n                                    {intl.formatMessage(messages.vulnerabilityCardKnownExploitsCTAText)}\n                                </Button>\n                            </InsightsLink>\n                        </div>\n                    </div>\n                </Flex>\n            </TemplateCardBody>\n                : <Loading />\n            } />\n        <ExpandableCardTemplate\n            appName='CVESbyCVSS'\n            className='insd-m-toggle-right-on-md'\n            data-ouia-safe={vulnerabilitiesFetchStatus !== 'pending'}\n            title={intl.formatMessage(messages.cveByCvssScoreTitle)}\n            isExpanded={JSON.parse(localStorage.getItem('dashboard_expanded_vulnerability2') || 'true')}\n            isExpandedCallback={isExpanded => localStorage.setItem('dashboard_expanded_vulnerability2', isExpanded)}\n            hasDivider\n            body={vulnerabilitiesFetchStatus === 'fulfilled' ? <TemplateCardBody className='ins-c-cves-by-cvss-card-body pf-u-pt-sm'>\n                <div className=\"insd-c-dashboard__card-chart-container\">\n                    <div className=\"insd-c-dashboard__card-pie-chart\">\n                        <PieChart\n                            ariaDesc={intl.formatMessage(messages.cvesImpactingSystems,\n                                { cves: vulnerabilities.cves_total })}\n                            ariaTitle='Vulnerabilities chart'\n                            constrainToVisibleArea={true}\n                            data={chartData}\n                            padding={pieChartPadding}\n                            colorScale={vulnerabilitiesFetchStatus === 'fulfilled' && vulnerabilities.cves_total === 0 ?\n                                [global_disabled_color_100.value] : ['#a30000', '#ec7a08', '#f0ab00']} />\n                    </div>\n                    <div className=\"insd-c-dashboard__card-pie-chart-legend\">\n                        <Table\n                            borders={false}\n                            aria-label='Simple Table'\n                            cells={columns}\n                            rows={rows}\n                            className='insd-m-no-styling'\n                            gridBreakPoint=''\n                        >\n                            <TableHeader />\n                            <TableBody />\n                        </Table>\n                    </div>\n                </div>\n            </TemplateCardBody>\n                : <Loading />\n            } />\n    </CompoundCard>;\n};\n\nexport default VulnerabilityCard;\n","import { useFlag, useFlagsStatus } from '@unleash/proxy-client-react';\n\nexport const useFeatureFlag = (flag) => {\n    const { flagsReady } = useFlagsStatus();\n    const isFlagEnabled = useFlag(flag);\n    return flagsReady ? isFlagEnabled : false;\n};\n"],"names":["PieChart","_ref","ariaDesc","ariaTitle","constrainToVisibleArea","data","legendData","padding","height","width","legendOrientation","colorScale","legend","legendWidth","legendHeight","legendClick","LegendLabel","_ref2","index","rest","_objectWithoutProperties","_excluded","React","id","concat","toLowerCase","replace","href","className","ChartLabel","style","position","ChartPie","labels","_ref3","datum","x","y","tabIndex","map","d","key","ChartLegend","fontSize","rowGutter","top","bottom","orientation","labelComponent","propTypes","CompoundCard","children","props","Card","_extends","flagsReady","isFlagEnabled","intl","useIntl","chartData","rows","legendLink","dispatch","useDispatch","vulnerabilities","useSelector","DashboardStore","vulnerabilitiesFetchStatus","selectedTags","workloads","_ref4","SID","_ref5","strong","str","_useState","useState","_useState2","_slicedToArray","accountHasEdgeDevices","setAccountHasEdgeDevices","isEdgeParityEnabled","useFlagsStatus","useFlag","iconTooltip","text","Tooltip","TooltipPosition","content","InfoIcon","columns","title","transforms","textCenter","cellTransforms","formatMessage","messages","fitContent","useEffect","_workloads$SAP","_workloads$AnsibleAu","_workloads$Microsoft","options","_objectSpread","SAP","isSelected","sap_system","ansible","mssql","length","sap_sids","tags","AppActions","Api","VULNERABILITIES_CVES_URL","limit","then","_data$meta","_data$meta$system_cou","_ref6","arguments","undefined","meta","system_count_per_type","edge","affectingFilterValue","bySeverity","cves_by_severity","from","to","count","fill","_ref7","TableText","wrapModifier","InsightsLink","app","known_exploits","TemplateCard","isFilled","TemplateCardHeader","TemplateCardBody","FailState","appName","ExpandableCardTemplate","isExpanded","JSON","parse","localStorage","getItem","isExpandedCallback","setItem","body","Flex","direction","default","spaceItems","flexWrap","TextContent","rel","rules_cves_total","cves","string","Button","variant","isSmall","exploited_cves_count","tooltip","Loading","hasDivider","cves_total","left","right","global_disabled_color_100","Table","borders","cells","gridBreakPoint","TableHeader","TableBody"],"sourceRoot":""}