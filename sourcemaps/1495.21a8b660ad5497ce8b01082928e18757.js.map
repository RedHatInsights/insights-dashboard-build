{"version":3,"file":"js/1495.1682078283391.1d6b19b95b9fdfac7e6d.js","mappings":"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","sources":["webpack:///./node_modules/@formatjs/fast-memoize/lib/index.js","webpack:///./src/PresentationalComponents/IconList/IconList.js","webpack:///./src/PresentationalComponents/IconList/IconListItem.js","webpack:///./src/PresentationalComponents/MarketingBanner/MarketingBanner.js","webpack:///./src/PresentationalComponents/RegisterSystemList.js","webpack:///./src/PresentationalComponents/ZeroState/ZeroStateBanner.js"],"sourcesContent":["//\n// Main\n//\nexport default function memoize(fn, options) {\n    var cache = options && options.cache ? options.cache : cacheDefault;\n    var serializer = options && options.serializer ? options.serializer : serializerDefault;\n    var strategy = options && options.strategy ? options.strategy : strategyDefault;\n    return strategy(fn, {\n        cache: cache,\n        serializer: serializer,\n    });\n}\n//\n// Strategy\n//\nfunction isPrimitive(value) {\n    return (value == null || typeof value === 'number' || typeof value === 'boolean'); // || typeof value === \"string\" 'unsafe' primitive for our needs\n}\nfunction monadic(fn, cache, serializer, arg) {\n    var cacheKey = isPrimitive(arg) ? arg : serializer(arg);\n    var computedValue = cache.get(cacheKey);\n    if (typeof computedValue === 'undefined') {\n        computedValue = fn.call(this, arg);\n        cache.set(cacheKey, computedValue);\n    }\n    return computedValue;\n}\nfunction variadic(fn, cache, serializer) {\n    var args = Array.prototype.slice.call(arguments, 3);\n    var cacheKey = serializer(args);\n    var computedValue = cache.get(cacheKey);\n    if (typeof computedValue === 'undefined') {\n        computedValue = fn.apply(this, args);\n        cache.set(cacheKey, computedValue);\n    }\n    return computedValue;\n}\nfunction assemble(fn, context, strategy, cache, serialize) {\n    return strategy.bind(context, fn, cache, serialize);\n}\nfunction strategyDefault(fn, options) {\n    var strategy = fn.length === 1 ? monadic : variadic;\n    return assemble(fn, this, strategy, options.cache.create(), options.serializer);\n}\nfunction strategyVariadic(fn, options) {\n    return assemble(fn, this, variadic, options.cache.create(), options.serializer);\n}\nfunction strategyMonadic(fn, options) {\n    return assemble(fn, this, monadic, options.cache.create(), options.serializer);\n}\n//\n// Serializer\n//\nvar serializerDefault = function () {\n    return JSON.stringify(arguments);\n};\n//\n// Cache\n//\nfunction ObjectWithoutPrototypeCache() {\n    this.cache = Object.create(null);\n}\nObjectWithoutPrototypeCache.prototype.get = function (key) {\n    return this.cache[key];\n};\nObjectWithoutPrototypeCache.prototype.set = function (key, value) {\n    this.cache[key] = value;\n};\nvar cacheDefault = {\n    create: function create() {\n        // @ts-ignore\n        return new ObjectWithoutPrototypeCache();\n    },\n};\nexport var strategies = {\n    variadic: strategyVariadic,\n    monadic: strategyMonadic,\n};\n","import './_icon-list.scss';\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport propTypes from 'prop-types';\n\nconst IconList = ({ iconListStyle, className, children }) => {\n    const IconListClasses = classNames(className, 'insd-c-icon-list');\n\n    return <ul className={ IconListClasses } style={ iconListStyle }>\n        {children}\n    </ul>;\n};\n\nexport default IconList;\n\nIconList.propTypes = {\n    children: propTypes.any.isRequired,\n    iconListStyle: propTypes.string,\n    className: propTypes.string\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport propTypes from 'prop-types';\n\nconst IconListItem = ({ className, iconListItemStyle, children }) => {\n    const IconListItemClasses = classNames(className, 'insd-c-icon-list__item');\n\n    return <li className={ IconListItemClasses } style={ iconListItemStyle }>\n        {children}\n    </li>;\n};\n\nexport default IconListItem;\n\nIconListItem.propTypes = {\n    className: propTypes.string,\n    iconListItemStyle: propTypes.string,\n    children: propTypes.any.isRequired\n};\n","import './_marketing-banner.scss';\n\nimport { PageSection } from '@patternfly/react-core';\nimport React from 'react';\nimport classNames from 'classnames';\nimport propTypes from 'prop-types';\n\nconst MarketingBanner = ({ className, hasGraphic, graphicRight, dark1000, fullBleed, style, children }) => {\n\n    const MarketingBannerSectionClasses = classNames(\n        className,\n        'insd-c-marketing-banner',\n        { [`insd-m-with-graphic`]: hasGraphic },\n        { [`insd-m-graphic-right`]: graphicRight },\n        { [`insd-m-dark-1000 pf-m-dark-1000`]: dark1000 },\n        { [`insd-m-full-bleed`]: fullBleed }\n    );\n\n    return <PageSection\n        className={ MarketingBannerSectionClasses }\n        style={ style }\n        isWidthLimited>\n        {children}\n    </PageSection>;\n};\n\nexport default MarketingBanner;\n\nMarketingBanner.propTypes = {\n    children: propTypes.any.isRequired,\n    className: propTypes.string,\n    style: propTypes.any,\n    graphicRight: propTypes.bool,\n    hasGraphic: propTypes.bool,\n    dark1000: propTypes.bool,\n    fullBleed: propTypes.bool,\n    isWidthLimited: propTypes.bool\n};\n","/* eslint-disable react/jsx-key */\nimport React from 'react';\nimport propTypes from 'prop-types';\nimport { ClipboardCopy } from '@patternfly/react-core';\n\nconst registerSystemsList = (item) => {\n    return (\n        <React.Fragment>\n            <p>{item.intructions}</p>\n            <ClipboardCopy\n                hoverTip=\"Copy\"\n                clickTip=\"Copied\"\n                isReadOnly\n                className='pf-u-p-sm'\n            >\n                {item.command}\n            </ClipboardCopy>\n        </React.Fragment>\n    );\n};\n\nexport default registerSystemsList;\n\nregisterSystemsList.propTypes = {\n    item: propTypes.object\n};\n","import '../ZeroState/_zero-state.scss';\n\nimport {\n    Button,\n    Title\n} from '@patternfly/react-core/dist/esm/components/index';\nimport { Flex, FlexItem } from '@patternfly/react-core/dist/esm/layouts/Flex/index';\nimport { Grid, GridItem } from '@patternfly/react-core/dist/esm/layouts/Grid/index';\nimport React, { useEffect, useState } from 'react';\n\nimport IconList from '../IconList/IconList';\nimport IconListItem from '../IconList/IconListItem';\nimport MarketingBanner from '../MarketingBanner/MarketingBanner';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport registerSystemsList from '../RegisterSystemList';\nimport propTypes from 'prop-types';\n\n//An array like this would be passed into the app\nconst testObject = [\n    { intructions: 'Install the client on the RHEL system', command: '[root@server] testing install insights-clint' },\n    { intructions: 'Install the client on the RHEL system', command: '[root@server] testing install insights-clint' },\n    { intructions: 'Install the client on the RHEL system', command: '[root@server] testing install insights-clint' }];\n\nconst testBullets = ['What problems do we solve', 'What solution do we provide'];\n\nconst ZeroStateBanner = ({ appName = 'Insights', description = messages.insightsDescription, commands = testObject, bulletPoints = testBullets }) => {\n    const intl = useIntl();\n    const { hideGlobalFilter } = useChrome();\n\n    useEffect(() => {\n        hideGlobalFilter?.();\n\n        return () => {\n            hideGlobalFilter?.(false);\n        };\n    }, [hideGlobalFilter]);\n\n    const [registerButton, setRegisterButton] = useState(false);\n    const updateRegisterButton = ()=> setRegisterButton(!registerButton);\n\n    return <div className='insd-c-marketing-page'>\n        <MarketingBanner\n            dark1000\n            style={ {\n                '--ins-c-marketing-banner--graphic--width-on-md': '200px',\n                '--ins-c-marketing-banner--graphic--width-on-xl': '400px'\n            } }>\n            <Grid lg={ 6 } hasGutter className='pf-u-pt-xl pf-u-pb-xl'>\n                <GridItem className='pf-u-pl-lg pf-u-pr-lg' >\n                    <Flex direction={ { default: 'column' } }>\n                        <FlexItem>\n                            <Title headingLevel='h1' size='4xl'>\n                                {appName}\n                            </Title>\n                        </FlexItem>\n                        <FlexItem spacer={ { default: 'spacerXl' } }>\n                            <div className='insd-c-width-limiter' style={ { '--insd-c-width-limiter--MaxWidth': '600px' } }>\n                                <p >{intl.formatMessage(description)}</p>\n                            </div>\n                        </FlexItem>\n                        <FlexItem>\n                            <IconList className='pf-u-pl-sm ' >\n                                {bulletPoints.map(item => (\n                                    <IconListItem key={item} >{item}</IconListItem>\n                                ))}\n                            </IconList>\n                        </FlexItem>\n                    </Flex>\n                </GridItem>\n\n                <GridItem style={{ backgroundColor: '#fff' }} >\n                    {registerButton ?\n                        <Flex className='pf-u-p-lg' direction={{ default: 'column' }} style={{ color: '#151515' }}>\n                            <a className='pf-u-pb-sm' onClick={updateRegisterButton} >Go Back</a>\n                            {commands.map(item => (\n                                registerSystemsList(item)\n                            ))}\n                        </Flex>\n                        : <Flex\n                            direction={ { default: 'column' } }\n                            alignItems={{ default: 'alignItemsCenter' }}\n                            alignSelf={{ default: 'alignSelfCenter' }} >\n                            <FlexItem className='pf-u-pt-lg'>\n                                <Title headingLevel='h1' size='2xl' style={{ color: '#151515' }}>\n                                    {intl.formatMessage(messages.startUsiningInisghts)}\n                                </Title>\n                            </FlexItem>\n                            <FlexItem>\n                                <div className='insd-c-width-limiter' style={ { '--insd-c-width-limiter--MaxWidth': '600px', color: '#151515' } }>\n                                    <p >{intl.formatMessage(messages.getStartedInsights)}</p>\n                                </div>\n                            </FlexItem>\n                            <FlexItem>\n                                <Button\n                                    onClick={updateRegisterButton}\n                                    className='pf-u-p-md pf-u-font-size-md'> Register your systems</Button>\n                            </FlexItem>\n                            <FlexItem>\n                                <a\n                                    component='a'\n                                    target='_blank'\n                                    rel='noreferrer'\n                                    href='https://www.redhat.com/en/technologies/management/insights' >{intl.formatMessage(messages.notMember)}</a>\n                            </FlexItem>\n                        </Flex>}\n                </GridItem>\n\n            </Grid>\n        </MarketingBanner>\n\n    </div>;\n};\n\nexport default ZeroStateBanner;\n\nZeroStateBanner.propTypes = {\n    appName: propTypes.string,\n    description: propTypes.object,\n    commands: propTypes.array,\n    bulletPoints: propTypes.array\n};\n"],"names":["memoize","fn","options","cache","cacheDefault","serializer","serializerDefault","strategy","strategyDefault","monadic","arg","value","cacheKey","computedValue","get","call","this","set","variadic","args","Array","prototype","slice","arguments","apply","assemble","context","serialize","bind","length","create","JSON","stringify","ObjectWithoutPrototypeCache","Object","key","strategies","IconList","iconListStyle","className","children","IconListClasses","classNames","style","propTypes","IconListItem","iconListItemStyle","IconListItemClasses","MarketingBanner","hasGraphic","graphicRight","dark1000","fullBleed","MarketingBannerSectionClasses","PageSection","isWidthLimited","registerSystemsList","item","intructions","ClipboardCopy","hoverTip","clickTip","isReadOnly","command","testObject","testBullets","ZeroStateBanner","appName","description","messages","commands","bulletPoints","intl","useIntl","hideGlobalFilter","useChrome","useEffect","useState","registerButton","setRegisterButton","updateRegisterButton","Grid","lg","hasGutter","GridItem","Flex","direction","default","FlexItem","Title","headingLevel","size","spacer","formatMessage","map","backgroundColor","color","onClick","alignItems","alignSelf","Button","component","target","rel","href"],"sourceRoot":""}