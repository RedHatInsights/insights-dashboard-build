{"version":3,"file":"js/8419.fd3b9acef8de89d0d6ec.js","mappings":"+XAgBaA,EAAW,SAAHC,GAA6E,IAAvEC,EAASD,EAATC,UAAWC,EAAOF,EAAPE,QAASC,EAAIH,EAAJG,KAAMC,EAAKJ,EAALI,MAAOC,EAAIL,EAAJK,KAAMC,EAAGN,EAAHM,IAAKC,EAAUP,EAAVO,WAAeC,GAAKC,EAAAA,EAAAA,GAAAT,EAAAU,GACvF,OACIC,IAAAA,cAAA,OAAAC,EAAAA,EAAAA,GAAA,CAAKX,UAAS,sCAAAY,OAAyCX,EAAO,KAAAW,OAAIZ,GAC9Da,GAAE,qBAAAD,OAAwBX,IACrBM,GAELG,IAAAA,cAAA,OAAKV,UAAU,0BACTE,GAENQ,IAAAA,cAACI,EAAAA,EAAI,CACDC,UAAY,CAAEC,QAAS,UACvBC,WAAa,CAAED,QAAS,mBAExBN,IAAAA,cAACQ,EAAAA,EAAK,CAACC,aAAa,KAAKC,KAAK,KAAKpB,UAAU,iBACvCG,GAENO,IAAAA,cAACW,EAAAA,EAAQ,CAACC,OAAS,CAAEN,QAAS,aAC1BN,IAAAA,cAAA,KAAGV,UAAU,0CAA2CI,IAE5DM,IAAAA,cAACa,EAAAA,GAAM,CAACC,QAAQ,OAAOC,KAAI,GAAAb,OAAMc,EAAAA,GAAO,KAAAd,OAAIP,GAAQsB,UAAQ,EAACzB,KAAMQ,IAAAA,cAACkB,EAAAA,GAAc,MAAKC,aAAa,SAChGnB,IAAAA,cAAA,YAAQJ,EAAa,CAAEA,WAAAA,GAAe,iBAK1D,EAEAR,EAASgC,UAAY,CACjB7B,QAAS6B,IAAAA,OACT9B,UAAW8B,IAAAA,OACX5B,KAAM4B,IAAAA,IACN3B,MAAO2B,IAAAA,OACP1B,KAAM0B,IAAAA,OACNzB,IAAKyB,IAAAA,OACLxB,WAAYwB,IAAAA,Q,kNCrCHC,EAAkB,SAAHhC,GAAwB,IAAlBiC,EAAWjC,EAAXiC,YACxBC,GAAaC,EAAAA,EAAAA,YAAWC,EAAAA,GACxBC,GAAOC,EAAAA,EAAAA,KAEb,OAAQJ,EAAWK,aAAcN,GAAkBC,EAAWM,cAAiBN,EAAWO,WA2BpF,GA1BF9B,IAAAA,cAAC+B,EAAAA,GAAW,CAACC,gBAAc,EAAC1C,UAAU,wCAAwCwB,QAASmB,EAAAA,GAAoBC,OACvGlC,IAAAA,cAACI,EAAAA,EAAI,CAACC,UAAW,CAAEC,QAAS,UAAYC,WAAY,CAAED,QAAS,iBAC3DN,IAAAA,cAACQ,EAAAA,EAAK,CAACC,aAAa,KAAKC,KAAK,MACzBgB,EAAKS,cAAcC,EAAAA,EAASC,cAEjCrC,IAAAA,cAAA,OAAKV,UAAU,sCACTiC,EAAWO,YACT9B,IAAAA,cAACZ,EAAQ,CACLG,QAAQ,aACRE,MAAOiC,EAAKS,cAAcC,EAAAA,EAASE,0BACnC5C,KAAMgC,EAAKS,cAAcC,EAAAA,EAASG,wBAClC5C,IAAG,GAAAO,OAAKc,EAAAA,GAAO,uBACfxB,KAAMQ,IAAAA,cAAA,OAAKwC,IAAKC,EAAgBC,IAAI,iCAEzCnB,EAAWM,cACV7B,IAAAA,cAACZ,EAAQ,CACLG,QAAQ,cACRE,MAAOiC,EAAKS,cAAcC,EAAAA,EAASO,4BACnCjD,KAAMgC,EAAKS,cAAcC,EAAAA,EAASQ,0BAClCjD,IAAG,GAAAO,OAAKc,EAAAA,GAAO,kBACfxB,KAAMQ,IAAAA,cAAA,OAAKwC,IAAKK,EAAkBH,IAAI,kCAOlE,EAEArB,EAAgBD,UAAY,CAAEE,YAAaF,IAAAA,MAE3C,S","sources":["webpack:///./src/PresentationalComponents/Template/AppBlockTemplate.js","webpack:///./src/SmartComponents/Footer/Footer.js"],"sourcesContent":["import './AppBlockTemplate.scss';\n\nimport {\n    Button,\n    Title\n} from '@patternfly/react-core/dist/esm/components';\nimport {\n    Flex,\n    FlexItem\n} from '@patternfly/react-core/dist/esm/layouts';\n\nimport ArrowRightIcon from '@patternfly/react-icons/dist/esm/icons/arrow-right-icon';\nimport React from 'react';\nimport { UI_BASE } from '../../AppConstants';\nimport propTypes from 'prop-types';\n\nexport const AppBlock = ({ className, appName, icon, title, body, url, buttonText, ...props }) => {\n    return (\n        <div className={ `insd-c-app-block insd-c-app-block--${appName} ${className}` }\n            id={ `insd-c-app-block--${appName}` }\n            { ...props }\n        >\n            <div className='insd-c-app-block__icon'>\n                { icon }\n            </div>\n            <Flex\n                direction={ { default: 'column' } }\n                spaceItems={ { default: 'spaceItemsNone' } }\n            >\n                <Title headingLevel='h3' size='xs' className='pf-v5-u-pt-sm'>\n                    { title }\n                </Title>\n                <FlexItem spacer={ { default: 'spacerSm' } }>\n                    <p className='pf-v5-u-color-200 pf-v5-u-font-size-sm'>{ body }</p>\n                </FlexItem>\n                <Button variant='link' href={ `${UI_BASE}/${url}` } isInline icon={<ArrowRightIcon />} iconPosition='right'>\n                    <span>{ buttonText ? { buttonText } : 'Get started' }</span>\n                </Button>\n            </Flex>\n        </div>\n    );\n};\n\nAppBlock.propTypes = {\n    appName: propTypes.string,\n    className: propTypes.string,\n    icon: propTypes.any,\n    title: propTypes.string,\n    body: propTypes.string,\n    url: propTypes.string,\n    buttonText: propTypes.string\n};\n","import { PageSection, PageSectionVariants, Title } from '@patternfly/react-core/dist/esm/components';\nimport React, { useContext } from 'react';\n\nimport { AppBlock } from '../../PresentationalComponents/Template/AppBlockTemplate';\nimport ComplianceIcon from '../../images/Icon-Red_Hat-Software_and_technologies-App_Secured-A-Red-RGB.svg';\nimport { Flex } from '@patternfly/react-core/dist/esm/layouts';\nimport { PermissionContext } from '../../App';\nimport RemediationsIcon from '../../images/Icon-Red_Hat-Software_and_Technologies-Automation-A-Red-RGB.svg';\nimport { UI_BASE } from '../../AppConstants';\nimport messages from '../../Messages';\nimport propTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\n\nexport const DashboardFooter = ({ supportsSap }) => {\n    const permission = useContext(PermissionContext);\n    const intl = useIntl();\n\n    return (permission.hasSystems && supportsSap) && (!permission.remediations || !permission.compliance) ?\n        <PageSection isWidthLimited className='insd-c-dashboard-footer pf-v5-u-pt-lg' variant={PageSectionVariants.light}>\n            <Flex direction={{ default: 'column' }} spaceItems={{ default: 'spaceItemsXl' }}>\n                <Title headingLevel=\"h2\" size=\"xl\">\n                    {intl.formatMessage(messages.footerTitle)}\n                </Title>\n                <div className=\"insd-l-columns insd-m-3-col-on-xl\">\n                    {!permission.compliance &&\n                        <AppBlock\n                            appName='compliance'\n                            title={intl.formatMessage(messages.complianceAppBlockHeader)}\n                            body={intl.formatMessage(messages.complianceAppBlockBody)}\n                            url={`${UI_BASE}/compliance/reports`}\n                            icon={<img src={ComplianceIcon} alt='Insights Remediation Icon' />}\n                        />\n                    }{!permission.remediations &&\n                        <AppBlock\n                            appName='remediation'\n                            title={intl.formatMessage(messages.remediationsAppBlockHeader)}\n                            body={intl.formatMessage(messages.remediationsAppBlockBody)}\n                            url={`${UI_BASE}/remediations/`}\n                            icon={<img src={RemediationsIcon} alt='Insights Remediation Icon' />}\n                        />\n                    }\n                </div>\n            </Flex>\n        </PageSection>\n        : '';\n};\n\nDashboardFooter.propTypes = { supportsSap: propTypes.bool };\n\nexport default DashboardFooter;\n"],"names":["AppBlock","_ref","className","appName","icon","title","body","url","buttonText","props","_objectWithoutProperties","_excluded","React","_extends","concat","id","Flex","direction","default","spaceItems","Title","headingLevel","size","FlexItem","spacer","Button","variant","href","UI_BASE","isInline","ArrowRightIcon","iconPosition","propTypes","DashboardFooter","supportsSap","permission","useContext","PermissionContext","intl","useIntl","hasSystems","remediations","compliance","PageSection","isWidthLimited","PageSectionVariants","light","formatMessage","messages","footerTitle","complianceAppBlockHeader","complianceAppBlockBody","src","ComplianceIcon","alt","remediationsAppBlockHeader","remediationsAppBlockBody","RemediationsIcon"],"sourceRoot":""}