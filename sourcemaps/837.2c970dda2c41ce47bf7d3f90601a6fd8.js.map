{"version":3,"file":"js/837.1682078283391.1d6b19b95b9fdfac7e6d.js","mappings":"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","sources":["webpack:///./src/PresentationalComponents/PageLoading/PageLoading.js","webpack:///./src/Routes.js","webpack:///./src/App.js","webpack:///./src/AppActions.js","webpack:///./src/AppConstants.js","webpack:///./src/PresentationalComponents/Loading/Loading.js","webpack:///./src/SmartComponents/Drift/utils.js","webpack:///./src/Store/index.js","webpack:///./src/AppReducer.js","webpack:///./src/Utilities/Api.js"],"sourcesContent":["import './PageLoading.scss';\n\nimport {\n    EmptyState,\n    EmptyStateIcon,\n    Title\n} from '@patternfly/react-core/dist/esm/components';\n\nimport React from 'react';\nimport { Spinner } from '@patternfly/react-core/dist/esm/components/Spinner';\n\nconst PageLoading = () => <EmptyState>\n    <EmptyStateIcon variant=\"container\" component={ Spinner } />\n    <Title size=\"lg\" headingLevel=\"h4\">\n        Loading\n    </Title>\n</EmptyState>;\n\nexport default PageLoading;\n","import React, { Suspense, lazy } from 'react';\n\nimport Loading from './PresentationalComponents/Loading/Loading';\nimport { Route, Switch } from 'react-router-dom';\n\nconst Dashboard = lazy(() => import(/* webpackChunkName: 'DashboardRoute' */ './PresentationalComponents/Dashboard/Dashboard'));\nconst ZeroState = lazy(() => import(/* webpackChunkName: \"ZeroStateRoute\" */ './PresentationalComponents/ZeroState/ZeroState'));\n\nexport const Routes = () => (\n    <Suspense fallback={<Loading />} >\n        <Switch>\n            <Route exact path='/start' component={ZeroState} />\n            <Route path=\"*\" component={Dashboard} />\n        </Switch>\n    </Suspense>\n);\n","import './App.scss';\n\nimport React, { createContext, useEffect, useState } from 'react';\nimport { batch, useDispatch } from 'react-redux';\nimport { setSIDs, setSelectedTags, setWorkloads } from './AppActions';\n\nimport API from './Utilities/Api';\nimport { INVENTORY_TOTAL_FETCH_URL } from './AppConstants';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport PageLoading from './PresentationalComponents/PageLoading/PageLoading';\nimport PropTypes from 'prop-types';\nimport { Routes } from './Routes';\n\nexport const PermissionContext = createContext();\n\nconst App = (props) => {\n    const chrome = useChrome();\n    const dispatch = useDispatch();\n    const [permissions, setPermissions] = useState({\n        customPolicies: false,\n        compliance: false,\n        drift: false,\n        advisor: false,\n        remediations: false,\n        patch: false,\n        vulnerability: false,\n        subscriptions: false,\n        ros: false,\n        notifications: false\n    });\n    const [arePermissionsReady, setArePermissionReady] = useState(false);\n    const [hasSystems, setHasSystems] = useState();\n\n    async function initChrome() {\n        chrome.identifyApp('dashboard');\n\n        chrome?.globalFilterScope?.('insights');\n        if (chrome?.globalFilterScope) {\n            chrome.on('GLOBAL_FILTER_UPDATE', ({ data }) => {\n                const [workloads, SID, selectedTags] = chrome?.mapGlobalFilter?.(data, false, true);\n                batch(() => {\n                    dispatch(setWorkloads(workloads));\n                    dispatch(setSIDs(SID));\n                    dispatch(setSelectedTags(selectedTags));\n                });\n            });\n        }\n\n        // TODO: Update this function to query multiple apps instead of empty request (limited by API)\n        chrome.getUserPermissions('', true).then(\n            dashboardPermissions => {\n                const permissionList = dashboardPermissions.length && dashboardPermissions.map(permissions => permissions.permission);\n                if (permissionList.length) {\n                    setPermissions({\n                        customPolicies: permissionList.includes('custom-policies:*:*'),\n                        compliance: permissionList.includes('compliance:*:*'),\n                        drift: permissionList.includes('drift:*:*'),\n                        advisor: permissionList.includes('insights:*:*') ||\n                            permissionList.includes('advisor:*:*'),\n                        remediations: permissionList.includes('remediations:*:*') ||\n                            permissionList.includes('remediations:remediation:*') ||\n                            permissionList.includes('remediations:remediation:read') ||\n                            permissionList.includes('remediations:*:read'),\n                        patch: permissionList.includes('patch:*:*'),\n                        vulnerability: permissionList.includes('vulnerability:*:*') ||\n                            permissionList.includes('vulnerability:vulnerability_results:read'),\n                        subscriptions: permissionList.includes('subscriptions:*:*') ||\n                            permissionList.includes('subscriptions:reports:read'),\n                        ros: permissionList.includes('ros:*:*') ||\n                            permissionList.includes('ros:*:read'),\n                        notifications: permissionList.includes('notifications:*:*') ||\n                            permissionList.includes('notifications:events:read')\n                    });\n                }\n\n                setArePermissionReady(true);\n            }\n        );\n        try {\n            const { total } = (await API.get(`${INVENTORY_TOTAL_FETCH_URL}`))?.data || { total: 0 };\n            setHasSystems(total > 0);\n            total === 0 && chrome.hideGlobalFilter();\n        } catch (e) {\n            chrome.hideGlobalFilter();\n        }\n    }\n\n    useEffect(() => {\n        initChrome();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        arePermissionsReady ?\n            <PermissionContext.Provider\n                value={ {\n                    customPolicies: permissions.customPolicies,\n                    compliance: permissions.compliance,\n                    drift: permissions.drift,\n                    advisor: permissions.advisor,\n                    remediations: permissions.remediations,\n                    patch: permissions.patch,\n                    vulnerability: permissions.vulnerability,\n                    subscriptions: permissions.subscriptions,\n                    ros: permissions.ros,\n                    notifications: permissions.notifications,\n                    hasSystems\n                } }>\n                <Routes childProps={ props } />\n            </PermissionContext.Provider>\n            : <PageLoading />\n    );\n};\n\nApp.propTypes = {\n    history: PropTypes.object\n};\n\nexport default App;\n","import * as ActionTypes from './AppConstants';\nimport API from './Utilities/Api';\n\nconst fetchData = async (url, headers, options) => {\n    return (await API.get(url, headers, options)).data;\n};\n\nexport const fetchComplianceSummary = (options) => ({\n    type: ActionTypes.COMPLIANCE_FETCH,\n    payload: fetchData(ActionTypes.COMPLIANCE_FETCH_URL, {}, options)\n});\n\nexport const fetchVulnerabilities = (options) => ({\n    type: ActionTypes.VULNERABILITIES_FETCH,\n    payload: fetchData(ActionTypes.VULNERABILITIES_FETCH_URL, {}, options)\n});\n\nexport const advisorFetchStatsRecs = (options) => ({\n    type: ActionTypes.ADVISOR_STATS_REC_FETCH,\n    payload: fetchData(ActionTypes.ADVISOR_STATS_REC_FETCH_URL, {}, options)\n});\n\nexport const advisorFetchStatsSystems = (options) => ({\n    type: ActionTypes.ADVISOR_STATS_SYSTEMS_FETCH,\n    payload: fetchData(ActionTypes.ADVISOR_STATS_SYSTEMS_FETCH_URL, {}, options)\n});\n\nexport const advisorFetchIncidents = (options) => ({\n    type: ActionTypes.ADVISOR_INCIDENTS_FETCH,\n    payload: fetchData(ActionTypes.ADVISOR_INCIDENTS_FETCH_URL, {}, options)\n});\n\nexport const patchmanFetchSystems = (options) => ({\n    type: ActionTypes.PATCHMAN_SYSTEMS_FETCH,\n    payload: fetchData(ActionTypes.PATCHMAN_SYSTEMS_FETCH_URL, {}, options)\n});\n\nexport const patchmanFetchAdvisories = (options) => ({\n    type: ActionTypes.PATCHMAN_ADVISORIES_FETCH,\n    payload: fetchData(ActionTypes.PATCHMAN_ADVISORIES_FETCH_URL, {}, options)\n});\n\nexport const subscriptionsUtilizedProductOneFetch = (id, options) => ({\n    type: ActionTypes.SUBSCRIPTIONS_UTILIZED_PRODUCT_ONE_FETCH,\n    payload: Promise.all([\n        fetchData(`${ActionTypes.SUBSCRIPTIONS_UTILIZED_REPORT_FETCH_URL}${id}`, {}, options),\n        fetchData(`${ActionTypes.SUBSCRIPTIONS_UTILIZED_CAPACITY_FETCH_URL}${id}`, {}, options)\n    ])\n});\n\nexport const subscriptionsUtilizedProductTwoFetch = (id, options) => ({\n    type: ActionTypes.SUBSCRIPTIONS_UTILIZED_PRODUCT_TWO_FETCH,\n    payload: Promise.all([\n        fetchData(`${ActionTypes.SUBSCRIPTIONS_UTILIZED_REPORT_FETCH_URL}${id}`, {}, options),\n        fetchData(`${ActionTypes.SUBSCRIPTIONS_UTILIZED_CAPACITY_FETCH_URL}${id}`, {}, options)\n    ])\n});\n\nexport const fetchInventorySummary = (options) => ({\n    type: ActionTypes.INVENTORY_FETCH,\n    payload: fetchData(ActionTypes.INVENTORY_FETCH_URL, {}, options)\n});\n\nexport const fetchInventoryTotalSummary = (options) => ({\n    type: ActionTypes.INVENTORY_TOTAL_FETCH,\n    payload: fetchData(ActionTypes.INVENTORY_TOTAL_FETCH_URL, {}, options)\n});\n\nexport const fetchInventoryStaleSummary = (options) => ({\n    type: ActionTypes.INVENTORY_STALE_FETCH,\n    payload: fetchData(ActionTypes.INVENTORY_STALE_FETCH_URL, {}, options)\n});\n\nexport const fetchInventoryWarningSummary = (options) => ({\n    type: ActionTypes.INVENTORY_WARNING_FETCH,\n    payload: fetchData(ActionTypes.INVENTORY_WARNING_FETCH_URL, {}, options)\n});\n\nexport const fetchRemediations = (options) => ({\n    type: ActionTypes.REMEDIATIONS_FETCH,\n    payload: fetchData(ActionTypes.REMEDIATIONS_FETCH_URL, {}, options)\n});\n\nexport const fetchRosIsConfigured = (options) => ({\n    type: ActionTypes.ROS_IS_CONFIGURED_FETCH,\n    payload: fetchData(ActionTypes.ROS_IS_CONFIGURED_FETCH_URL, {}, options)\n});\n\nexport const fetchDrift = (options) => ({\n    type: ActionTypes.DRIFT_EVENTS_PAYLOAD_FETCH,\n    payload: fetchData(ActionTypes.DRIFT_EVENTS_PAYLOAD_FETCH_URL, {}, options)\n});\n\nexport const setSelectedTags = (tags) => ({\n    type: ActionTypes.SELECTED_TAGS_SET,\n    payload: tags\n});\n\nexport const setWorkloads = (data) => ({\n    type: ActionTypes.WORKLOADS_SET,\n    payload: data\n});\n\nexport const setSIDs = (data) => ({\n    type: ActionTypes.SID_SET,\n    payload: data\n});\n","/* eslint-disable max-len */\n\nconst BASE_URL = '/api';\nexport const UI_BASE = './insights';\nexport const UI_BASE_OPENSHIFT = './openshift';\nexport const SELECTED_TAGS_SET = 'SELECTED_TAGS_SET';\nexport const WORKLOADS_SET = 'WORKLOADS_SET';\nexport const SID_SET = 'SID_SET';\nexport const SEVERITY_MAP = {\n    critical: 4,\n    important: 3,\n    moderate: 2,\n    low: 1\n};\n\n// Compliance App Constants\nexport const COMPLIANCE_FETCH = 'COMPLIANCE_SUMMARY_FETCH';\nexport const COMPLIANCE_SEARCH = encodeURIComponent('(has_policy_test_results=true AND external=false) OR (has_policy=false AND has_test_results=true)');\nexport const COMPLIANCE_FETCH_URL = `${BASE_URL}/compliance/profiles?search=${COMPLIANCE_SEARCH}`;\n\n// Vulnerability App Constants\nconst VULN_BASE = '/vulnerability/v1';\nexport const VULNERABILITIES_FETCH = 'VULNERABILITIES_FETCH';\nexport const VULNERABILITIES_FETCH_URL = (`${BASE_URL}${VULN_BASE}/dashboard`);\nexport const VULNERABILITIES_CVES_URL = `${BASE_URL}/vulnerability/v1/vulnerabilities/cves`;\n\n// Advisor App Constants\nconst ADV_BASE = '/insights/v1';\nexport const ADVISOR_STATS_REC_FETCH_URL = `${BASE_URL}${ADV_BASE}/stats/rules/`;\nexport const ADVISOR_STATS_REC_FETCH = 'ADVISOR_STATS_REC_FETCH';\nexport const ADVISOR_STATS_SYSTEMS_FETCH_URL = `${BASE_URL}${ADV_BASE}/stats/systems/`;\nexport const ADVISOR_STATS_SYSTEMS_FETCH = 'ADVISOR_STATS_SYSTEMS_FETCH';\nexport const ADVISOR_INCIDENTS_FETCH = 'ADVISOR_INCIDENTS_FETCH';\nexport const ADVISOR_INCIDENTS_FETCH_URL = `${BASE_URL}/insights/v1/rule/?impacting=true&limit=1&incident=true`;\n\n// Patchman App Constants\nexport const PATCHMAN_ID = 'patch';\nexport const PATCHMAN_VER = 'v2';\nexport const PATCHMAN_SYSTEMS_FETCH_URL = `${BASE_URL}/${PATCHMAN_ID}/${PATCHMAN_VER}/systems/?limit=1`;\nexport const PATCHMAN_SYSTEMS_FETCH = 'PATCHMAN_SYSTEMS_FETCH';\nexport const PATCHMAN_ADVISORIES_FETCH_URL = `${BASE_URL}/${PATCHMAN_ID}/${PATCHMAN_VER}/advisories/?limit=1`;\nexport const PATCHMAN_ADVISORIES_FETCH = 'PATCHMAN_ADVISORIES_FETCH';\n\n// Subscriptions Utilized Constants\nexport const SUBSCRIPTIONS_UTILIZED_PRODUCT_ONE_FETCH = 'SUBSCRIPTIONS_UTILIZED_PRODUCT_ONE_FETCH';\nexport const SUBSCRIPTIONS_UTILIZED_PRODUCT_TWO_FETCH = 'SUBSCRIPTIONS_UTILIZED_PRODUCT_TWO_FETCH';\nexport const SUBSCRIPTIONS_UTILIZED_REPORT_FETCH_URL = `${BASE_URL}/rhsm-subscriptions/v1/tally/products/`;\nexport const SUBSCRIPTIONS_UTILIZED_CAPACITY_FETCH_URL = `${BASE_URL}/rhsm-subscriptions/v1/capacity/products/`;\n\n// Inventory Constants\nexport const INVENTORY_BASE = '/inventory/v1';\nconst INVENTORY_PER_PAGE = 'per_page=1';\nexport const INVENTORY_TOTAL_FETCH = 'INVENTORY_TOTAL_FETCH';\nexport const INVENTORY_TOTAL_FETCH_URL = `${BASE_URL}${INVENTORY_BASE}/hosts?${INVENTORY_PER_PAGE}`;\nexport const INVENTORY_FETCH = 'INVENTORY_FETCH';\nexport const INVENTORY_FETCH_URL = `${BASE_URL}${INVENTORY_BASE}/hosts?registered_with=puptoo&${INVENTORY_PER_PAGE}`;\nexport const INVENTORY_STALE_FETCH = 'INVENTORY_STALE_FETCH';\nexport const INVENTORY_STALE_FETCH_URL = `${BASE_URL}${INVENTORY_BASE}/hosts?staleness=stale&registered_with=puptoo&${INVENTORY_PER_PAGE}`;\nexport const INVENTORY_WARNING_FETCH = 'INVENTORY_WARNING_FETCH';\nexport const INVENTORY_WARNING_FETCH_URL = `${BASE_URL}${INVENTORY_BASE}/hosts?staleness=stale_warning&registered_with=puptoo&${INVENTORY_PER_PAGE}`;\n\n// Remediations App Constants\nconst REMEDIATIONS_BASE = '/remediations/v1';\nexport const REMEDIATIONS_FETCH = 'REMEDIATIONS_FETCH';\nexport const REMEDIATIONS_FETCH_URL = `${BASE_URL}${REMEDIATIONS_BASE}/remediations?sort=-updated_at&limit=4&offset=0&fields[data]=playbook_runs`;\n\n// Resource Optimization Constants\nconst ROS_BASE = '/ros/v1';\nexport const ROS_IS_CONFIGURED_FETCH = 'ROS_IS_CONFIGURED_FETCH';\nexport const ROS_IS_CONFIGURED_FETCH_URL = `${BASE_URL}${ROS_BASE}/is_configured`;\n\n// Workloads Constants\nexport const SAP_FETCH_URL = `${BASE_URL}/inventory/v1/system_profile/sap_system`;\n\n// Drift Constants\nexport const DRIFT_EVENTS_PAYLOAD_FETCH_URL = `${BASE_URL}/notifications/v1.0/notifications/events`;\nexport const DRIFT_EVENTS_PAYLOAD_FETCH = 'DRIFT_EVENTS_PAYLOAD_FETCH';\nexport const DRIFT_URL = `${UI_BASE}/drift`;\nexport const DRIFT_BASELINES_URL = `${DRIFT_URL}/baselines`;\nexport const TOP_BASELINES = 5;\nexport const SYSTEMS_LIMIT = 4;\n\n","import React from 'react';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/Skeleton';\n\nconst Loading = () => {\n    return (\n        <React.Fragment>\n            <Skeleton size='md' />\n            <br />\n            <Skeleton size='md' />\n        </React.Fragment>\n    );\n};\n\nexport default Loading;\n","import messages from '../../Messages';\nimport * as ActionTypes from '../../AppConstants';\n\nexport const groupPayload = (data) => {\n    return data.reduce((acc, curr) => {\n        // We'll use just events and inventoryId from context\n        const { events, context: { inventory_id: inventoryId } } = parsePayload(curr.payload);\n\n        // Let's iterate over all events (and use just the event)\n        events.forEach(({ payload: event }) => {\n        // Is there already baselineId?\n            const { systems } = acc.find(({ baselineId }) => baselineId === event.baseline_id) || {};\n            // either assign to list of systems, or create new record\n            if (systems) {\n                !systems.includes(inventoryId) && systems.push(inventoryId);\n            } else {\n                acc.push({\n                    baselineId: event.baseline_id,\n                    baselineName: event.baseline_name,\n                    systems: [inventoryId]\n                });\n            }\n        });\n\n        return acc;\n    }, []);\n};\n\nexport const parseDriftData = (data) => ({\n    numEvents: data.meta.count,\n    baselineDetail: groupPayload(data.data)\n    .sort(({ systems: aSystems }, { systems: bSystems }) => aSystems.length < bSystems.length ?\n        1 :\n        (aSystems.length > bSystems.length ? -1 : 0)\n    )\n});\n\nfunction parsePayload(item) {\n    return JSON.parse(item.replaceAll('\\\\', '').replaceAll('\"{', '{').replaceAll('}\"', '}'));\n}\n\nexport function formatDate(date) {\n    return new Date(date.getTime() - date.getTimezoneOffset() * 60 * 1000).toISOString().split('T')[0];\n}\n\nexport function getDate(ago) {\n    let d = new Date();\n    d.setDate(d.getDate() - ago);\n    return formatDate(d);\n}\n\nexport const translateDriftDropdownItems = (intl) => ([\n    {\n        id: 'days-30',\n        description: intl.formatMessage(messages.driftDropDown30days),\n        startDate: getDate(30),\n        endDate: getDate(0)\n    },\n    {\n        id: 'days-7',\n        description: intl.formatMessage(messages.driftDropDown7days),\n        startDate: getDate(7),\n        endDate: getDate(0)\n    },\n    {\n        id: 'hours-24',\n        description: intl.formatMessage(messages.driftDropDown24hours),\n        startDate: getDate(1),\n        endDate: getDate(0)\n    }\n]);\n\nexport const buildCompareUrl = (baseline_id, system_ids) => {\n\n    let finalUrl = `${ActionTypes.DRIFT_URL}/?baseline_ids=${baseline_id}`;\n\n    system_ids.slice(0, ActionTypes.SYSTEMS_LIMIT).forEach(system_id => {\n        finalUrl = finalUrl.concat(`&system_ids=${system_id}`);\n    });\n\n    finalUrl = finalUrl.concat('&filter[show]=baseline');\n    return finalUrl;\n};\n","import { DashboardStore } from '../AppReducer';\nimport { compose } from 'redux';\nimport { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport promiseMiddleware from 'redux-promise-middleware';\n\nlet registry;\n\nexport const init = (...middleware) => {\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    registry = getRegistry(\n        {},\n        [...middleware, promiseMiddleware],\n        composeEnhancers\n    );\n    registry.register({ DashboardStore });\n\n    return registry;\n};\n\nexport const getStore = () => registry.getStore();\n\nexport const register = (...args) => registry.register(...args);\n\n","import * as ActionTypes from './AppConstants';\nimport { parseDriftData } from './SmartComponents/Drift/utils';\n\nimport Immutable from 'seamless-immutable';\n\n// eslint-disable-next-line new-cap\nconst initialState = Immutable({\n    complianceSummary: {},\n    complianceFetchStatus: '',\n    vulnerabilities: {},\n    vulnerabilitiesFetchStatus: '',\n    advisorStatsRecs: {},\n    advisorStatsRecsStatus: '',\n    advisorStatsSystems: {},\n    advisorStatsSystemsStatus: '',\n    advisorIncidents: {},\n    advisorIncidentsStatus: '',\n    patchmanSystems: {},\n    patchmanSystemsStatus: '',\n    patchmanAdvisoriesStatus: '',\n    patchmanSecurity: '',\n    patchmanBugs: '',\n    patchmanEnhancements: '',\n    subscriptionsUtilizedProductOne: [],\n    subscriptionsUtilizedProductOneFetchStatus: '',\n    subscriptionsUtilizedProductTwo: [],\n    subscriptionsUtilizedProductTwoFetchStatus: '',\n    inventorySummary: {},\n    inventoryFetchStatus: '',\n    inventoryStaleSummary: {},\n    inventoryStaleFetchStatus: '',\n    inventoryWarningSummary: {},\n    inventoryWarningFetchStatus: '',\n    inventoryTotalSummary: {},\n    inventoryTotalFetchStatus: '',\n    remediations: {},\n    remediationsFetchStatus: '',\n    rosIsConfigured: {},\n    rosIsConfiguredFetchStatus: '',\n    driftEventFetchStatus: '',\n    driftEvents: '',\n    driftEventsRaw: '',\n    selectedTags: [],\n    workloads: {},\n    SID: {}\n});\n\nexport const DashboardStore = (state = initialState, action) => {\n    switch (action.type) {\n        // GLOBAL\n        case ActionTypes.SELECTED_TAGS_SET:\n            return Immutable.merge(state, {\n                selectedTags: action.payload\n            });\n\n        case ActionTypes.WORKLOADS_SET:\n            return Immutable.merge(state, {\n                workloads: action.payload\n            });\n\n        case ActionTypes.SID_SET:\n            return Immutable.merge(state, {\n                SID: action.payload\n            });\n\n        // COMPLIANCE\n        case `${ActionTypes.COMPLIANCE_FETCH}_PENDING`:\n            return state.set('complianceFetchStatus', 'pending');\n        case `${ActionTypes.COMPLIANCE_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                complianceSummary: action.payload,\n                complianceFetchStatus: 'fulfilled'\n            });\n        case `${ActionTypes.COMPLIANCE_FETCH}_REJECTED`:\n            return state.set('complianceFetchStatus', 'rejected');\n\n        // VULN\n        case `${ActionTypes.VULNERABILITIES_FETCH}_PENDING`:\n            return state.set('vulnerabilitiesFetchStatus', 'pending');\n        case `${ActionTypes.VULNERABILITIES_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                vulnerabilities: action.payload,\n                vulnerabilitiesFetchStatus: 'fulfilled'\n            });\n        case `${ActionTypes.VULNERABILITIES_FETCH}_REJECTED`:\n            return state.set('vulnerabilitiesFetchStatus', 'rejected');\n\n        // Advisor\n        case `${ActionTypes.ADVISOR_STATS_REC_FETCH}_PENDING`:\n            return state.set('advisorStatsRecsStatus', 'pending');\n        case `${ActionTypes.ADVISOR_STATS_REC_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                advisorStatsRecs: action.payload,\n                advisorStatsRecsStatus: 'fulfilled'\n            });\n        case `${ActionTypes.ADVISOR_STATS_REC_FETCH}_REJECTED`:\n            return state.set('advisorStatsRecsStatus', 'rejected');\n\n        case `${ActionTypes.ADVISOR_STATS_SYSTEMS_FETCH}_PENDING`:\n            return state.set('advisorStatsSystemsStatus', 'pending');\n        case `${ActionTypes.ADVISOR_STATS_SYSTEMS_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                advisorStatsSystems: action.payload,\n                advisorStatsSystemsStatus: 'fulfilled'\n            });\n        case `${ActionTypes.ADVISOR_STATS_SYSTEMS_FETCH}_REJECTED`:\n            return state.set('advisorStatsSystemsStatus', 'rejected');\n\n        case `${ActionTypes.ADVISOR_INCIDENTS_FETCH}_PENDING`:\n            return state.set('advisorIncidentsStatus', 'pending');\n        case `${ActionTypes.ADVISOR_INCIDENTS_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                advisorIncidents: action.payload,\n                advisorIncidentsStatus: 'fulfilled'\n            });\n        case `${ActionTypes.ADVISOR_INCIDENTS_FETCH}_REJECTED`:\n            return state.set('advisorIncidentsStatus', 'rejected');\n\n        // Patch\n        case `${ActionTypes.PATCHMAN_SYSTEMS_FETCH}_PENDING`:\n            return state.set('patchmanSystemsStatus', 'pending');\n        case `${ActionTypes.PATCHMAN_SYSTEMS_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                patchmanSystems: action.payload.meta.total_items,\n                patchmanSystemsStatus: 'fulfilled'\n            });\n        case `${ActionTypes.PATCHMAN_SYSTEMS_FETCH}_REJECTED`:\n            return state.set('patchmanSystemsStatus', 'rejected');\n\n        case `${ActionTypes.PATCHMAN_ADVISORIES_FETCH}_PENDING`:\n            return state.set('patchmanAdvisoriesStatus', 'pending');\n        case `${ActionTypes.PATCHMAN_ADVISORIES_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                patchmanAdvisories: action.payload.meta.subtotals,\n                patchmanAdvisoriesStatus: 'fulfilled'\n            });\n        case `${ActionTypes.PATCHMAN_ADVISORIES_FETCH}_REJECTED`:\n            return state.set('patchmanAdvisoriesStatus', 'rejected');\n\n        // SubsUtilized Product One\n        case `${ActionTypes.SUBSCRIPTIONS_UTILIZED_PRODUCT_ONE_FETCH}_PENDING`:\n            return state.set('subscriptionsUtilizedProductOneFetchStatus', 'pending');\n        case `${ActionTypes.SUBSCRIPTIONS_UTILIZED_PRODUCT_ONE_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                subscriptionsUtilizedProductOne: action.payload,\n                subscriptionsUtilizedProductOneFetchStatus: 'fulfilled'\n            });\n        case `${ActionTypes.SUBSCRIPTIONS_UTILIZED_PRODUCT_ONE_FETCH}_REJECTED`:\n            return Immutable.merge(state, {\n                subscriptionsUtilizedProductOne: action.payload.response,\n                subscriptionsUtilizedProductOneFetchStatus: 'rejected'\n            });\n\n        // SubsUtilized Product Two\n        case `${ActionTypes.SUBSCRIPTIONS_UTILIZED_PRODUCT_TWO_FETCH}_PENDING`:\n            return state.set('subscriptionsUtilizedProductTwoFetchStatus', 'pending');\n        case `${ActionTypes.SUBSCRIPTIONS_UTILIZED_PRODUCT_TWO_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                subscriptionsUtilizedProductTwo: action.payload,\n                subscriptionsUtilizedProductTwoFetchStatus: 'fulfilled'\n            });\n        case `${ActionTypes.SUBSCRIPTIONS_UTILIZED_PRODUCT_TWO_FETCH}_REJECTED`:\n            return Immutable.merge(state, {\n                subscriptionsUtilizedProductTwo: action.payload.response,\n                subscriptionsUtilizedProductTwoFetchStatus: 'rejected'\n            });\n\n        // Inventory\n        case `${ActionTypes.INVENTORY_FETCH}_PENDING`:\n            return state.set('inventoryFetchStatus', 'pending');\n        case `${ActionTypes.INVENTORY_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                inventorySummary: action.payload,\n                inventoryFetchStatus: 'fulfilled'\n            });\n        case `${ActionTypes.INVENTORY_FETCH}_REJECTED`:\n            return state.set('inventoryFetchStatus', 'rejected');\n\n        case `${ActionTypes.INVENTORY_STALE_FETCH}_PENDING`:\n            return state.set('inventoryStaleFetchStatus', 'pending');\n        case `${ActionTypes.INVENTORY_STALE_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                inventoryStaleSummary: action.payload,\n                inventoryStaleFetchStatus: 'fulfilled'\n            });\n        case `${ActionTypes.INVENTORY_STALE_FETCH}_REJECTED`:\n            return state.set('inventoryStaleFetchStatus', 'rejected');\n\n        case `${ActionTypes.INVENTORY_WARNING_FETCH}_PENDING`:\n            return state.set('inventoryWarningFetchStatus', 'pending');\n        case `${ActionTypes.INVENTORY_WARNING_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                inventoryWarningSummary: action.payload,\n                inventoryWarningFetchStatus: 'fulfilled'\n            });\n        case `${ActionTypes.INVENTORY_WARNING_FETCH}_REJECTED`:\n            return state.set('inventoryWarningFetchStatus', 'rejected');\n\n        case `${ActionTypes.INVENTORY_TOTAL_FETCH}_PENDING`:\n            return state.set('inventoryTotalFetchStatus', 'pending');\n        case `${ActionTypes.INVENTORY_TOTAL_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                inventoryTotalSummary: action.payload,\n                inventoryTotalFetchStatus: 'fulfilled'\n            });\n        case `${ActionTypes.INVENTORY_TOTAL_FETCH}_REJECTED`:\n            return state.set('inventoryTotalFetchStatus', 'rejected');\n\n        // REMEDIATIONS\n        case `${ActionTypes.REMEDIATIONS_FETCH}_PENDING`:\n            return state.set('remediationsFetchStatus', 'pending');\n        case `${ActionTypes.REMEDIATIONS_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                remediations: action.payload,\n                remediationsFetchStatus: 'fulfilled'\n            });\n        case `${ActionTypes.REMEDIATIONS_FETCH}_REJECTED`:\n            return state.set('remediationsFetchStatus', 'rejected');\n\n        // Resource Optimization\n        case `${ActionTypes.ROS_IS_CONFIGURED_FETCH}_PENDING`:\n            return state.set('rosIsConfiguredFetchStatus', 'pending');\n        case `${ActionTypes.ROS_IS_CONFIGURED_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                rosIsConfigured: action.payload,\n                rosIsConfiguredFetchStatus: 'fulfilled'\n            });\n        case `${ActionTypes.ROS_IS_CONFIGURED_FETCH}_REJECTED`:\n            return state.set('rosIsConfiguredFetchStatus', 'rejected');\n\n        // DRIFT\n        case `${ActionTypes.DRIFT_EVENTS_PAYLOAD_FETCH}_PENDING`:\n            return state.set('driftEventFetchStatus', 'pending');\n        case `${ActionTypes.DRIFT_EVENTS_PAYLOAD_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                driftEventsRaw: action.payload,\n                driftEvents: parseDriftData(action.payload),\n                driftEventFetchStatus: 'fulfilled'\n            });\n        case `${ActionTypes.DRIFT_EVENTS_PAYLOAD_FETCH}_REJECTED`:\n            return state.set('driftEventFetchStatus', 'rejected');\n\n        default:\n            return state;\n    }\n};\n","import Qs from 'qs';\nimport axios from 'axios';\n\naxios.defaults.headers.common = { 'x-rh-insights-use-path-prefix': 1 };\n\nexport default {\n    get(url, headers = {}, params = {}) {\n        return axios.get(url, {\n            headers,\n            params,\n            paramsSerializer (params) {\n                return Qs.stringify(params, { arrayFormat: 'repeat' });\n            }\n        });\n    },\n    put(url, data = {}, headers = {}) {\n        return axios.put(url, data, {\n            headers\n        });\n    },\n    post(url, data = {}, headers = {}) {\n        return axios.post(url, data, {\n            headers\n        });\n    }\n};\n"],"names":["EmptyState","EmptyStateIcon","variant","component","Spinner","Title","size","headingLevel","Dashboard","lazy","ZeroState","Routes","Suspense","fallback","Loading","Switch","Route","exact","path","PermissionContext","createContext","App","props","chrome","useChrome","dispatch","useDispatch","useState","customPolicies","compliance","drift","advisor","remediations","patch","vulnerability","subscriptions","ros","notifications","permissions","setPermissions","arePermissionsReady","setArePermissionReady","hasSystems","setHasSystems","identifyApp","globalFilterScope","on","data","mapGlobalFilter","workloads","SID","selectedTags","batch","setWorkloads","setSIDs","setSelectedTags","getUserPermissions","then","dashboardPermissions","permissionList","length","map","permission","includes","API","INVENTORY_TOTAL_FETCH_URL","total","hideGlobalFilter","useEffect","initChrome","Provider","value","childProps","propTypes","history","PropTypes","fetchData","url","headers","options","fetchComplianceSummary","type","ActionTypes","payload","fetchVulnerabilities","advisorFetchStatsRecs","advisorFetchStatsSystems","advisorFetchIncidents","patchmanFetchSystems","patchmanFetchAdvisories","subscriptionsUtilizedProductOneFetch","id","Promise","all","subscriptionsUtilizedProductTwoFetch","fetchInventorySummary","fetchInventoryTotalSummary","fetchInventoryStaleSummary","fetchInventoryWarningSummary","fetchRemediations","fetchRosIsConfigured","fetchDrift","tags","BASE_URL","UI_BASE","UI_BASE_OPENSHIFT","SELECTED_TAGS_SET","WORKLOADS_SET","SID_SET","SEVERITY_MAP","critical","important","moderate","low","COMPLIANCE_FETCH","COMPLIANCE_SEARCH","encodeURIComponent","COMPLIANCE_FETCH_URL","VULNERABILITIES_FETCH","VULNERABILITIES_FETCH_URL","ADV_BASE","ADVISOR_STATS_REC_FETCH_URL","ADVISOR_STATS_REC_FETCH","ADVISOR_STATS_SYSTEMS_FETCH_URL","ADVISOR_STATS_SYSTEMS_FETCH","ADVISOR_INCIDENTS_FETCH","ADVISOR_INCIDENTS_FETCH_URL","PATCHMAN_ID","PATCHMAN_SYSTEMS_FETCH_URL","PATCHMAN_SYSTEMS_FETCH","PATCHMAN_ADVISORIES_FETCH_URL","PATCHMAN_ADVISORIES_FETCH","SUBSCRIPTIONS_UTILIZED_PRODUCT_ONE_FETCH","SUBSCRIPTIONS_UTILIZED_PRODUCT_TWO_FETCH","SUBSCRIPTIONS_UTILIZED_REPORT_FETCH_URL","SUBSCRIPTIONS_UTILIZED_CAPACITY_FETCH_URL","INVENTORY_BASE","INVENTORY_PER_PAGE","INVENTORY_TOTAL_FETCH","INVENTORY_FETCH","INVENTORY_FETCH_URL","INVENTORY_STALE_FETCH","INVENTORY_STALE_FETCH_URL","INVENTORY_WARNING_FETCH","INVENTORY_WARNING_FETCH_URL","REMEDIATIONS_FETCH","REMEDIATIONS_FETCH_URL","ROS_IS_CONFIGURED_FETCH","ROS_IS_CONFIGURED_FETCH_URL","DRIFT_EVENTS_PAYLOAD_FETCH_URL","DRIFT_EVENTS_PAYLOAD_FETCH","DRIFT_URL","DRIFT_BASELINES_URL","TOP_BASELINES","SYSTEMS_LIMIT","groupPayload","reduce","acc","curr","item","JSON","parse","replaceAll","events","inventoryId","context","inventory_id","forEach","event","systems","find","baselineId","baseline_id","push","baselineName","baseline_name","parseDriftData","numEvents","meta","count","baselineDetail","sort","aSystems","bSystems","getDate","ago","date","d","Date","setDate","getTime","getTimezoneOffset","toISOString","split","translateDriftDropdownItems","intl","description","formatMessage","messages","startDate","endDate","buildCompareUrl","system_ids","finalUrl","slice","system_id","concat","registry","initialState","Immutable","complianceSummary","complianceFetchStatus","vulnerabilities","vulnerabilitiesFetchStatus","advisorStatsRecs","advisorStatsRecsStatus","advisorStatsSystems","advisorStatsSystemsStatus","advisorIncidents","advisorIncidentsStatus","patchmanSystems","patchmanSystemsStatus","patchmanAdvisoriesStatus","patchmanSecurity","patchmanBugs","patchmanEnhancements","subscriptionsUtilizedProductOne","subscriptionsUtilizedProductOneFetchStatus","subscriptionsUtilizedProductTwo","subscriptionsUtilizedProductTwoFetchStatus","inventorySummary","inventoryFetchStatus","inventoryStaleSummary","inventoryStaleFetchStatus","inventoryWarningSummary","inventoryWarningFetchStatus","inventoryTotalSummary","inventoryTotalFetchStatus","remediationsFetchStatus","rosIsConfigured","rosIsConfiguredFetchStatus","driftEventFetchStatus","driftEvents","driftEventsRaw","DashboardStore","state","action","set","total_items","patchmanAdvisories","subtotals","response","init","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","getRegistry","promiseMiddleware","register","axios","get","params","paramsSerializer","Qs","arrayFormat","put","post"],"sourceRoot":""}