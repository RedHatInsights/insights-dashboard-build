{"version":3,"file":"js/1844.1698318551905.74ba7183576f01505e4d.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/components/EmptyState/EmptyStateSecondaryActions.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/grip-vertical-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/search-icon.js","webpack:///./src/PresentationalComponents/FilterNotSupported.js","webpack:///./src/SmartComponents/Compliance/ComplianceCard.js"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/EmptyState/empty-state';\nexport const EmptyStateSecondaryActions = (_a) => {\n    var { children = null, className = '' } = _a, props = __rest(_a, [\"children\", \"className\"]);\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.emptyStateSecondary, className) }, props), children));\n};\nEmptyStateSecondaryActions.displayName = 'EmptyStateSecondaryActions';\n//# sourceMappingURL=EmptyStateSecondaryActions.js.map","import { createIcon } from '../createIcon';\n\nexport const GripVerticalIconConfig = {\n  name: 'GripVerticalIcon',\n  height: 512,\n  width: 320,\n  svgPath: 'M96 32H32C14.33 32 0 46.33 0 64v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM288 32h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const GripVerticalIcon = createIcon(GripVerticalIconConfig);\n\nexport default GripVerticalIcon;","import { createIcon } from '../createIcon';\n\nexport const SearchIconConfig = {\n  name: 'SearchIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const SearchIcon = createIcon(SearchIconConfig);\n\nexport default SearchIcon;","import './FilterNotSupported.scss';\n\nimport {\n    EmptyState,\n    EmptyStateBody,\n    EmptyStateIcon\n} from '@patternfly/react-core/dist/esm/components/EmptyState';\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport SearchIcon from '@patternfly/react-icons/dist/esm/icons/search-icon';\nimport { Title } from '@patternfly/react-core/dist/esm/components/Title/Title';\nimport messages from '../Messages';\nimport { useIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\n\nconst FilterNotSupported = ({ href, title, appName }) => {\n    const intl = useIntl();\n\n    return <EmptyState>\n        <EmptyStateIcon className='fontSizeOverride' icon={ SearchIcon } />\n        <Title headingLevel=\"h4\" size=\"md\">{title}</Title>\n        <EmptyStateBody>\n            {intl.formatMessage(appName !== 'Vulnerability' ? messages.functionalityNotSupported : messages.filteredResultsInApp, {\n                appname: <Link to={href} className='pf-c-button pf-m-link pf-m-inline'>\n                    {appName}\n                </Link>\n            })}\n        </EmptyStateBody>\n    </EmptyState>;\n};\n\nFilterNotSupported.propTypes = {\n    appName: PropTypes.string,\n    href: PropTypes.string,\n    title: PropTypes.string\n};\n\nexport default FilterNotSupported;\n\n","import './ComplianceCard.scss';\n\nimport * as AppActions from '../../AppActions';\n\nimport {\n    Button,\n    DataList,\n    DataListCell,\n    DataListItem,\n    DataListItemCells,\n    DataListItemRow,\n    EmptyState,\n    EmptyStateBody,\n    EmptyStateSecondaryActions,\n    EmptyStateVariant,\n    Title\n} from '@patternfly/react-core/dist/esm/components';\nimport { Flex, FlexItem } from '@patternfly/react-core/dist/esm/layouts';\nimport React, { useEffect } from 'react';\nimport { TemplateCardActions, TemplateCardBody } from '../../PresentationalComponents/Template/TemplateCard';\nimport { supportsGlobalFilter, workloadsPropType } from '../../Utilities/Common';\n\nimport { ExpandableCardTemplate } from '../../PresentationalComponents/Template/ExpandableCardTemplate';\nimport FailState from '../../PresentationalComponents/FailState/FailState';\nimport FilterNotSupported from '../../PresentationalComponents/FilterNotSupported';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport PropTypes from 'prop-types';\nimport { UI_BASE } from '../../AppConstants';\nimport { connect } from 'react-redux';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\nimport InsightsLink from '@redhat-cloud-services/frontend-components/InsightsLink';\n\nconst ComplianceCard = ({ fetchCompliance, complianceFetchStatus, complianceSummary, selectedTags, workloads, SID }) => {\n    useEffect(() => {\n        fetchCompliance();\n    }, [fetchCompliance]);\n\n    const intl = useIntl();\n\n    /*\n        * Returns the first two -- if there are at least two entries -- items as a shallow copy of\n        * complianceSummary\n        */\n    const getTopThreePolicies = function (compliance) {\n        const complianceTopThree = compliance.data.length > 1 ? compliance.data.slice(0, 3) :\n            compliance.data.slice();\n\n        return complianceTopThree;\n    };\n\n    return (\n        <ExpandableCardTemplate\n            appName='Compliance'\n            className='ins-c-card__compliance insd-m-toggle-right-on-md'\n            { ...complianceFetchStatus !== 'pending' ? {\n                'data-ouia-safe': true\n            } : { 'data-ouia-safe': false } }\n            title={ intl.formatMessage(messages.complianceTitle) }\n            isExpanded={JSON.parse(localStorage.getItem('dashboard_expanded_compliance') || 'true')}\n            isExpandedCallback={isExpanded => localStorage.setItem('dashboard_expanded_compliance', isExpanded)}\n            header={\n                <TemplateCardActions />\n            }\n            body={\n                <TemplateCardBody>\n                    {supportsGlobalFilter(selectedTags, workloads, SID) ?\n                        <React.Fragment>\n                            {complianceFetchStatus === 'fulfilled' &&\n                                (Array.isArray(complianceSummary.data) &&\n                                    (complianceSummary.data.length > 0 ? <React.Fragment>\n                                        <DataList className='insd-m-no-padding insd-m-no-top-border' isCompact>\n                                            {getTopThreePolicies(complianceSummary).map((policy, index) =>\n                                                <DataListItem key={ index }>\n                                                    <DataListItemRow>\n                                                        <DataListItemCells\n                                                            dataListCells={[\n                                                                <DataListCell key={ index }>\n                                                                    <Flex\n                                                                        direction={ { default: 'column' } }\n                                                                        spaceItems={ { default: 'spaceItemsNone' } }\n                                                                    >\n                                                                        <InsightsLink\n                                                                            app='compliance'\n                                                                            to={`/reports/${policy.id}`}\n                                                                            className='ins-c-compliance__policy-link\n                                                                            pf-c-button pf-m-link pf-m-inline'\n                                                                            id={ `compliance-link-${index + 1}` }\n                                                                        >\n                                                                            {policy.attributes.name}\n                                                                        </InsightsLink>\n                                                                        <Flex>\n                                                                            <FlexItem flex={ { default: 'flex_1' } }>\n                                                                                <p>RHEL { policy.attributes.os_version }</p>\n                                                                            </FlexItem>\n                                                                            <Flex flex={{ default: 'None' }}>\n                                                                                <FlexItem>\n                                                                                    {intl.formatMessage(messages.compliantHostCount,\n                                                                                        { count: policy.attributes.test_result_host_count }\n                                                                                    )}\n                                                                                </FlexItem>\n                                                                                <FlexItem>\n                                                                                    {intl.formatMessage(messages.compliantScore,\n                                                                                        {\n                                                                                            score: +(policy.attributes.test_result_host_count &&\n                                                                                                (100 * (\n                                                                                                    policy.attributes.compliant_host_count /\n                                                                                                    policy.attributes.test_result_host_count\n                                                                                                ))\n                                                                                            ).toFixed(1)\n                                                                                        }\n                                                                                    )}\n                                                                                </FlexItem>\n                                                                            </Flex>\n                                                                        </Flex>\n                                                                    </Flex>\n                                                                </DataListCell>\n                                                            ]}\n                                                        />\n                                                    </DataListItemRow>\n                                                </DataListItem>\n                                            )}\n                                        </DataList>\n                                        <InsightsLink app='compliance' to='/reports' className='pf-c-button pf-m-link pf-m-inline'>\n                                            {complianceFetchStatus === 'fulfilled' && Array.isArray(complianceSummary.data) &&\n                                                complianceSummary.data.length - 3 >= 1 &&\n                                                `${complianceSummary.data.length - 3} more reports`\n                                            }\n                                        </InsightsLink>\n                                    </React.Fragment> : (\n                                        <EmptyState className='ins-c-compliance__empty-state' variant={ EmptyStateVariant.full }>\n                                            <Title headingLevel='h5' size='md'>\n                                                {intl.formatMessage(messages.complianceEmptyStateTitle)}\n                                            </Title>\n                                            <EmptyStateBody>\n                                                {intl.formatMessage(messages.complianceEmptyStateBody)}\n                                            </EmptyStateBody>\n                                            <EmptyStateSecondaryActions>\n                                                <InsightsLink app='compliance' to='/scappolicies/new' className='pf-c-button pf-m-link'>\n                                                    {intl.formatMessage(messages.complianceEmptyStateAction1)}\n                                                </InsightsLink>\n                                                <Button\n                                                    variant='link'\n                                                    component='a'\n                                                    href='https://www.open-scap.org/getting-started/'\n                                                >\n                                                    {intl.formatMessage(messages.complianceEmptyStateAction2)}\n                                                </Button>\n                                            </EmptyStateSecondaryActions>\n                                        </EmptyState>\n                                    ))\n                                )\n                            }\n                            {complianceFetchStatus === 'pending' && (<Loading />)}\n                            {complianceFetchStatus === 'rejected' && <FailState appName='Compliance' />}\n                        </React.Fragment>\n                        : <FilterNotSupported\n                            href={ `${UI_BASE}/compliance/` }\n                            title={ intl.formatMessage(messages.filterNotApplicable) }\n                            appName={ intl.formatMessage(messages.complianceTitle) }\n                        />\n                    }\n                </TemplateCardBody>\n            }\n        />\n    );\n};\n\nComplianceCard.propTypes = {\n    fetchCompliance: PropTypes.func,\n    complianceSummary: PropTypes.object,\n    complianceFetchStatus: PropTypes.string,\n    intl: PropTypes.any,\n    selectedTags: PropTypes.array,\n    workloads: workloadsPropType,\n    SID: PropTypes.arrayOf(PropTypes.string)\n};\n\nconst mapStateToProps = ({ DashboardStore }) => ({\n    complianceSummary: DashboardStore.complianceSummary,\n    complianceFetchStatus: DashboardStore.complianceFetchStatus,\n    selectedTags: DashboardStore.selectedTags,\n    workloads: DashboardStore.workloads,\n    SID: DashboardStore.SID\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchCompliance: (url) => dispatch(AppActions.fetchComplianceSummary(url))\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ComplianceCard);\n"],"names":["EmptyStateSecondaryActions","_a","children","className","props","Object","assign","displayName","GripVerticalIconConfig","name","height","width","svgPath","yOffset","xOffset","GripVerticalIcon","SearchIconConfig","SearchIcon","FilterNotSupported","_ref","href","title","appName","intl","useIntl","React","EmptyState","EmptyStateIcon","icon","Title","headingLevel","size","EmptyStateBody","formatMessage","messages","appname","Link","to","propTypes","PropTypes","ComplianceCard","fetchCompliance","complianceFetchStatus","complianceSummary","selectedTags","workloads","SID","useEffect","compliance","ExpandableCardTemplate","_extends","isExpanded","JSON","parse","localStorage","getItem","isExpandedCallback","setItem","header","TemplateCardActions","body","TemplateCardBody","supportsGlobalFilter","Array","isArray","data","length","DataList","isCompact","slice","map","policy","index","DataListItem","key","DataListItemRow","DataListItemCells","dataListCells","DataListCell","Flex","direction","default","spaceItems","InsightsLink","app","concat","id","attributes","FlexItem","flex","os_version","count","test_result_host_count","score","compliant_host_count","toFixed","variant","EmptyStateVariant","Button","component","Loading","FailState","UI_BASE","workloadsPropType","connect","_ref2","DashboardStore","dispatch","url","AppActions"],"sourceRoot":""}