{"version":3,"file":"js/767.1651509651894.4dd9251b1604a75bcd40.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-tokens/dist/esm/global_disabled_color_100.js","webpack:///./src/ChartTemplates/PieChart/PieChartTemplate.js","webpack:///./src/PresentationalComponents/Template/CompoundCard.js","webpack:///./src/SmartComponents/Vulnerability/VulnerabilityCard.js"],"sourcesContent":["export const global_disabled_color_100 = {\n  \"name\": \"--pf-global--disabled-color--100\",\n  \"value\": \"#6a6e73\",\n  \"var\": \"var(--pf-global--disabled-color--100)\"\n};\nexport default global_disabled_color_100;","import './PieChartTemplate.scss';\n\nimport { ChartLabel } from '@patternfly/react-charts/dist/esm/components/ChartLabel/ChartLabel';\nimport { ChartLegend } from '@patternfly/react-charts/dist/esm/components/ChartLegend/ChartLegend';\nimport { ChartPie } from '@patternfly/react-charts/dist/esm/components/ChartPie/ChartPie';\nimport React from 'react';\nimport propTypes from 'prop-types';\n\nexport const PieChart = ({ ariaDesc, ariaTitle, constrainToVisibleArea, data, legendData, padding, height, width, legendOrientation,\n    colorScale, legend, legendWidth, legendHeight, legendClick }) => {\n    // eslint-disable-next-line react/prop-types\n    const LegendLabel = ({ index, ...rest }) => <a id={ `${ariaTitle.toLowerCase().replace(/\\s/g, '-')}-legend-${index + 1}` }\n        href={ legendClick[index] } className=\"pf-c-button pf-m-link pf-m-inline\"><ChartLabel { ...rest } /></a>;\n\n    return (\n        <div className=\"insd-c-pie-chart__row\">\n            <div style={ { width, height, position: 'relative' } }>\n                <ChartPie\n                    ariaDesc={ ariaDesc }\n                    ariaTitle={ ariaTitle }\n                    constrainToVisibleArea={ constrainToVisibleArea }\n                    data={ data }\n                    height={ height }\n                    labels={ ({ datum }) => `${datum.x}: ${datum.y}` }\n                    padding={ padding }\n                    width={ width }\n                    colorScale={ colorScale }\n                />\n                <table tabIndex=\"0\" className=\"visually-hidden\" aria-label={ ariaTitle + ` data` }>\n                    <tbody>\n                        {data.map((d, index) => {\n                            return [\n                                <tr key={ index }>\n                                    <td>{d.y}</td>\n                                    <td>{d.x}</td>\n                                </tr>\n                            ];\n                        })}\n                    </tbody>\n                </table>\n            </div>\n            {legend &&\n                <div className=\"insd-c-pie-chart__legend\" aria-label=\"Chart legend\" style={ { width: legendWidth, height: legendHeight } }>\n                    <ChartLegend\n                        height={ legendHeight }\n                        width={ legendWidth }\n                        fontSize={ 14 }\n                        data={ legendData }\n                        rowGutter={ { top: -5, bottom: -5 } }\n                        orientation={ legendOrientation }\n                        labelComponent={ legendClick && < LegendLabel /> }\n                    />\n                </div>\n            }\n        </div>\n    );\n};\n\nPieChart.propTypes = {\n    ariaDesc: propTypes.string,\n    ariaTitle: propTypes.string,\n    constrainToVisibleArea: propTypes.bool,\n    data: propTypes.array,\n    legendData: propTypes.array,\n    padding: propTypes.object,\n    height: propTypes.number,\n    width: propTypes.number,\n    legendOrientation: propTypes.string,\n    colorScale: propTypes.array,\n    legend: propTypes.bool,\n    legendWidth: propTypes.number,\n    legendHeight: propTypes.number,\n    legendClick: propTypes.any\n};\n\nexport default PieChart;\n","import './CompoundCard.scss';\n\nimport { Card } from '@patternfly/react-core/dist/esm/components/Card/Card';\nimport React from 'react';\nimport propTypes from 'prop-types';\n\nexport const CompoundCard = ({ className, children, ...props }) => <Card\n    className={`insd-c-dashboard-compound-card insd-c-dashboard__card ${className}`} {...props}>\n    {children}\n</Card>;\n\nCompoundCard.propTypes = {\n    children: propTypes.any,\n    className: propTypes.string\n};\n\n","import './VulnerabilityCard.scss';\n\nimport * as AppActions from '../../AppActions';\n\nimport {\n    Button,\n    TextContent,\n    Tooltip,\n    TooltipPosition\n} from '@patternfly/react-core/dist/esm/components';\nimport { Flex } from '@patternfly/react-core/dist/esm/layouts';\nimport React, { useEffect } from 'react';\nimport { fitContent, Table, TableBody, TableHeader, TableText, textCenter } from '@patternfly/react-table';\nimport { TemplateCard, TemplateCardBody, TemplateCardHeader } from '../../PresentationalComponents/Template/TemplateCard';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { CompoundCard } from '../../PresentationalComponents/Template/CompoundCard';\nimport { ExpandableCardTemplate } from '../../PresentationalComponents/Template/ExpandableCardTemplate';\nimport FailState from '../../PresentationalComponents/FailState/FailState';\nimport InfoIcon from '../../Icons/InfoIcon';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport { PieChart } from '../../ChartTemplates/PieChart/PieChartTemplate';\nimport { UI_BASE } from '../../AppConstants';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/esm/global_disabled_color_100';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\nimport { useChromePush } from '../../Utilities/hooks/useChromePush';\n\nconst VulnerabilityCard = () => {\n    const intl = useIntl();\n    const pieChartPadding = { bottom: 0, left: 0, right: 0, top: 0 };\n    let chartData = [];\n    let rows = [];\n    let legendLink = [];\n    const dispatch = useDispatch();\n    const vulnerabilities = useSelector(({ DashboardStore }) => DashboardStore.vulnerabilities);\n    const vulnerabilitiesFetchStatus = useSelector(({ DashboardStore }) => DashboardStore.vulnerabilitiesFetchStatus);\n    const selectedTags = useSelector(({ DashboardStore }) => DashboardStore.selectedTags);\n    const workloads = useSelector(({ DashboardStore }) => DashboardStore.workloads);\n    const SID = useSelector(({ DashboardStore }) => DashboardStore.SID);\n    const strong = str => <strong>{str}</strong>;\n\n    const navigateTo = useChromePush();\n\n    const iconTooltip = text => <Tooltip\n        key={text}\n        position={TooltipPosition.right}\n        content={<div>{text}</div>}>\n        <span aria-label='Action' className='insd-c-info-icon pf-u-ml-sm'>\n            <InfoIcon />\n        </span>\n    </Tooltip>;\n\n    const columns = [\n        {\n            title: 'CVSS score'\n        },\n        {\n            title: 'CVE totals',\n            transforms: [textCenter],\n            cellTransforms: [textCenter]\n        },\n        {\n            title: (\n                <span>Known exploits{iconTooltip(intl.formatMessage(messages.exploitedCveTooltip))}</span>\n            ),\n            transforms: [fitContent]\n        }];\n\n    useEffect(() => {\n        const options = {\n            ...workloads?.SAP?.isSelected && { sap_system: true },\n            ...workloads?.['Ansible Automation Platform']?.isSelected\n                && { ansible: 'not_nil' },\n            ...workloads?.['Microsoft SQL']?.isSelected\n                && { mssql: 'not_nil' },\n            ...SID?.length > 0 && { sap_sids: SID },\n            ...selectedTags?.length > 0 && { tags: selectedTags }\n        };\n        const fetchVulnerabilities = options => dispatch(AppActions.fetchVulnerabilities(options));\n\n        fetchVulnerabilities(options);\n    }, [workloads, SID, selectedTags, dispatch]);\n\n    if (vulnerabilitiesFetchStatus === 'fulfilled') {\n        let { cves_by_severity: bySeverity } = vulnerabilities;\n\n        chartData = [{\n            x: 'CVSS 8.0 - 10',\n            from: 8.0,\n            to: 10.0,\n            y: bySeverity['8to10'].count,\n            fill: '#a30000',\n            data: bySeverity['8to10']\n        },\n        {\n            x: 'CVSS 4.0 - 7.9',\n            from: 4.0,\n            to: 7.9,\n            y: bySeverity['4to7.9'].count,\n            fill: '#ec7a08',\n            data: bySeverity['4to7.9']\n        },\n        {\n            x: 'CVSS 0.0 - 3.9',\n            from: 0.0,\n            to: 3.9,\n            y: bySeverity['0to3.9'].count,\n            fill: '#f0ab00',\n            data: bySeverity['0to3.9']\n        }];\n\n        legendLink = (from, to) => `${UI_BASE}/vulnerability/cves?cvss_from=${from}&cvss_to=${to}`;\n\n        rows = chartData.map(({ data, from, to, fill }) => [{\n            title: <TableText wrapModifier='nowrap' className='insd-c-legend__dot'\n                style={{ '--insd-c-legend__dot--BackgroundColor': `${fill}` }}>\n                <a onClick={e => navigateTo(e, legendLink(from, to))} href={legendLink(from, to)}>{`${from}.0 - ${to}`}</a>\n            </TableText>\n        }, {\n            title:\n                <a\n                    onClick={e => navigateTo(e, legendLink(from, to))}\n                    href={legendLink(from, to)}\n                    className='pf-u-text-align-center'\n                >\n                    {data.count}\n                </a>,\n            props: { textCenter: true }\n        }, {\n            title:\n                <a\n                    onClick={e => navigateTo(e, legendLink(from, to) + '&known_exploit=true')}\n                    href={legendLink(from, to) + '&known_exploit=true'}\n                    className='pf-u-text-align-center'\n                >\n                    {data.known_exploits === undefined ? 'N/A' : data.known_exploits}\n                </a>,\n            props: { textCenter: true }\n        }]);\n    }\n\n    if (vulnerabilitiesFetchStatus === 'rejected') {\n        return <TemplateCard isFilled={false} className='ins-c-card__vulnerability' data-ouia-safe>\n            <TemplateCardHeader title={intl.formatMessage(messages.vulnerabilitiesTitle)} />\n            <TemplateCardBody><FailState appName='Vulnerability' /></TemplateCardBody>\n        </TemplateCard>;\n    }\n\n    return <CompoundCard className='insd-c-dashboard-card-parent insd-c-dashboard__card--compound--Vulnerabilities'\n        data-ouia-safe={vulnerabilitiesFetchStatus !== 'pending'}>\n        <ExpandableCardTemplate\n            appName='Vulnerabilities'\n            className='insd-m-toggle-right-on-md insd-m-short-header'\n            data-ouia-safe={vulnerabilitiesFetchStatus !== 'pending'}\n            title={intl.formatMessage(messages.vulnerabilitiesTitle)}\n            isExpanded={JSON.parse(localStorage.getItem('dashboard_expanded_vulnerability1') || 'true')}\n            isExpandedCallback={isExpanded => localStorage.setItem('dashboard_expanded_vulnerability1', isExpanded)}\n            body={vulnerabilitiesFetchStatus === 'fulfilled' ? <TemplateCardBody className='insd-c-dashboard__card--Vulnerabilities__card-body'>\n                <Flex\n                    direction={{ default: 'column' }}\n                    spaceItems={{ default: 'spaceItemsLg' }}\n                    flexWrap={{ default: 'nowrap' }}\n                >\n                    <TextContent\n                        className='insd-c-width-limiter'\n                        style={{ '--insd-c-width-limiter--MaxWidth': '54ch' }}>\n                        <p className='pf-u-font-size-sm'>\n                            {intl.formatMessage(messages.vulnerabilityMessage)}\n                        </p>\n                    </TextContent>\n                    <div className=\"insd-c-dashboard__card--Vulnerabilities--SplitMetrics\">\n                        <div className=\"insd-c-dashboard__card--Vulnerabilities--SplitMetrics__item\">\n                            <div className=\"insd-c-dashboard__card--Vulnerabilities--SplitMetrics__content\">\n                                <a className='pf-u-font-size-2xl pf-u-color-100'\n                                    onClick={e => navigateTo(e, `${UI_BASE}/vulnerability/cves?affecting=true&rule_presence=true`)}\n                                    href={`${UI_BASE}/vulnerability/cves?affecting=true&rule_presence=true`}\n                                    rel='noreferrer'>\n                                    {vulnerabilities.rules_cves_total}\n                                </a>\n                                <TextContent>\n                                    <p className='pf-u-font-size-sm'>\n                                        {intl.formatMessage(messages.cvesImpactingOneOrMoreSystems, {\n                                            cves: vulnerabilities.rules_cves_total,\n                                            strong: string => strong(string)\n                                        })}\n                                    </p>\n                                </TextContent>\n                            </div>\n                            <Button component='a' href={`${UI_BASE}/vulnerability/cves?affecting=true&rule_presence=true`}\n                                onClick={e => navigateTo(e, `${UI_BASE}/vulnerability/cves?affecting=true&rule_presence=true`)}\n                                rel='noreferrer'\n                                variant='secondary' isSmall>\n                                {intl.formatMessage(messages.vulnerabilityCardCTAText)}\n                            </Button>\n                        </div>\n                        <div className=\"insd-c-dashboard__card--Vulnerabilities--SplitMetrics__item\">\n                            <div className=\"insd-c-dashboard__card--Vulnerabilities--SplitMetrics__content\">\n                                <a className='pf-u-font-size-2xl pf-u-color-100'\n                                    onClick={e => navigateTo(e, `${UI_BASE}/vulnerability/cves?known_exploit=true&affecting=true`)}\n                                    href={`${UI_BASE}/vulnerability/cves?known_exploit=true&affecting=true`} rel='noreferrer'>\n                                    {vulnerabilities.exploited_cves_count}\n                                </a>\n                                <TextContent>\n                                    <p className='pf-u-font-size-sm'>\n                                        {intl.formatMessage(messages.knownExploitsOneOrMoreSystems, {\n                                            cves: vulnerabilities.exploited_cves_count,\n                                            strong: string => strong(string),\n                                            tooltip: () => iconTooltip(intl.formatMessage(messages.exploitedCveTooltip))\n                                        })}\n                                    </p>\n                                </TextContent>\n                            </div>\n                            <Button component='a' href={`${UI_BASE}/vulnerability/cves?known_exploit=true&affecting=true`}\n                                onClick={e => navigateTo(e, `${UI_BASE}/vulnerability/cves?known_exploit=true&affecting=true`)}\n                                rel='noreferrer'\n                                variant='secondary' isSmall>\n                                {intl.formatMessage(messages.vulnerabilityCardKnownExploitsCTAText)}\n                            </Button>\n                        </div>\n                    </div>\n                </Flex>\n            </TemplateCardBody>\n                : <Loading />\n            } />\n        <ExpandableCardTemplate\n            appName='CVESbyCVSS'\n            className='insd-m-toggle-right-on-md'\n            data-ouia-safe={vulnerabilitiesFetchStatus !== 'pending'}\n            title={intl.formatMessage(messages.cveByCvssScoreTitle)}\n            isExpanded={JSON.parse(localStorage.getItem('dashboard_expanded_vulnerability2') || 'true')}\n            isExpandedCallback={isExpanded => localStorage.setItem('dashboard_expanded_vulnerability2', isExpanded)}\n            hasDivider\n            body={vulnerabilitiesFetchStatus === 'fulfilled' ? <TemplateCardBody className='ins-c-cves-by-cvss-card-body pf-u-pt-sm'>\n                <div className=\"insd-c-dashboard__card-chart-container\">\n                    <div className=\"insd-c-dashboard__card-pie-chart\">\n                        <PieChart\n                            ariaDesc={intl.formatMessage(messages.cvesImpactingSystems,\n                                { cves: vulnerabilities.cves_total })}\n                            ariaTitle='Vulnerabilities chart'\n                            constrainToVisibleArea={true}\n                            data={chartData}\n                            padding={pieChartPadding}\n                            colorScale={vulnerabilitiesFetchStatus === 'fulfilled' && vulnerabilities.cves_total === 0 ?\n                                [global_disabled_color_100.value] : ['#a30000', '#ec7a08', '#f0ab00']} />\n                    </div>\n                    <div className=\"insd-c-dashboard__card-pie-chart-legend\">\n                        <Table\n                            borders={false}\n                            aria-label='Simple Table'\n                            cells={columns}\n                            rows={rows}\n                            className='insd-m-no-styling'\n                            gridBreakPoint=''\n                        >\n                            <TableHeader />\n                            <TableBody />\n                        </Table>\n                    </div>\n                </div>\n            </TemplateCardBody>\n                : <Loading />\n            } />\n    </CompoundCard>;\n};\n\nexport default VulnerabilityCard;\n"],"names":["global_disabled_color_100","PieChart","ariaDesc","ariaTitle","constrainToVisibleArea","data","legendData","padding","height","width","legendOrientation","colorScale","legend","legendWidth","legendHeight","legendClick","LegendLabel","index","rest","id","toLowerCase","replace","href","className","style","position","labels","datum","x","y","tabIndex","map","d","key","fontSize","rowGutter","top","bottom","orientation","labelComponent","propTypes","CompoundCard","children","props","intl","useIntl","chartData","rows","legendLink","dispatch","useDispatch","vulnerabilities","useSelector","DashboardStore","vulnerabilitiesFetchStatus","selectedTags","workloads","SID","strong","str","navigateTo","useChromePush","iconTooltip","text","TooltipPosition","content","columns","title","transforms","textCenter","cellTransforms","formatMessage","messages","fitContent","useEffect","options","SAP","isSelected","sap_system","ansible","mssql","length","sap_sids","tags","AppActions","bySeverity","cves_by_severity","from","to","count","fill","UI_BASE","TableText","wrapModifier","onClick","e","undefined","known_exploits","isFilled","appName","isExpanded","JSON","parse","localStorage","getItem","isExpandedCallback","setItem","body","direction","default","spaceItems","flexWrap","rel","rules_cves_total","cves","string","component","variant","isSmall","exploited_cves_count","tooltip","hasDivider","cves_total","left","right","Table","borders","cells","gridBreakPoint","TableHeader","TableBody"],"sourceRoot":""}