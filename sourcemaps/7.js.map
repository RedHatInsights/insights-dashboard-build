{"version":3,"sources":["webpack:///./src/SmartComponents/Cards/VulnerabilitiesCard.js"],"names":["_react","__webpack_require__","_insightsFrontendComponents","_reactRedux","_reactIcons","_reactCore","AppActions","VulnerabilitiesCard","props","_classCallCheck3","default","this","_this","_possibleConstructorReturn3","__proto__","Object","getPrototypeOf","call","fetchCriticalVulnerabilities","fetchLatestVulnerabilities","_props","criticalVulnerabilitiesFetchStatus","latestVulnerabilitiesFetchStatus","criticalVulnerabilities","latestVulnerabilities","_react2","createElement","Card","className","CardHeader","Title","size","CardBody","ExclamationCircleIcon","meta","total_items","href","_Loading2","FlagIcon","CardFooter","Component","propTypes","PropTypes","func","object","string","routerParams","connect","state","ownProps","_extends3","DashboardStore","dispatch","url"],"mappings":"2MAAAA,EAAAC,EAAA,cACAA,EAAA,IACAC,EAAAD,EAAA,KACAE,EAAAF,EAAA,KACAG,EAAAH,EAAA,IAEAI,EAAAJ,EAAA,KAKYK,0JAAZL,EAAA,UACAA,EAAA,yDAEAA,EAAA,KAIA,IAKMM,cAEF,SAAAA,EAAYC,IAAO,EAAAC,EAAAC,SAAAC,KAAAJ,GAAA,IAAAK,GAAA,EAAAC,EAAAH,SAAAC,MAAAJ,EAAAO,WAAAC,OAAAC,eAAAT,IAAAU,KAAAN,KACTH,IADS,OAEfI,EAAKJ,MAAQ,GAFEI,sFAMfD,KAAKH,MAAMU,+BACXP,KAAKH,MAAMW,8DAGN,IAAAC,EAMDT,KAAKH,MAJLa,EAFCD,EAEDC,mCACAC,EAHCF,EAGDE,iCACAC,EAJCH,EAIDG,wBACAC,EALCJ,EAKDI,sBAGJ,OACIC,EAAAf,QAAAgB,cAACrB,EAAAsB,KAAD,CAAMC,UAAU,+BACZH,EAAAf,QAAAgB,cAACrB,EAAAwB,WAAD,KACIJ,EAAAf,QAAAgB,cAACrB,EAAAyB,MAAD,CAAOF,UAAU,sBAAsBG,KAAM,MAA7C,oBAEJN,EAAAf,QAAAgB,cAACrB,EAAA2B,SAAD,KAC6C,cAAvCX,GACEI,EAAAf,QAAAgB,cAAA,OAAKE,UAAU,iBACXH,EAAAf,QAAAgB,cAACtB,EAAA6B,sBAAD,CAAuBL,UAAU,qDACjCH,EAAAf,QAAAgB,cAAA,QAAME,UAAU,2BAA4BL,EAAwBW,KAAKC,aACzEV,EAAAf,QAAAgB,cAAA,QAAME,UAAU,wBACZH,EAAAf,QAAAgB,cAAA,KAAGU,KAAA,qCAAH,cANhB,IASiD,YAAvCf,GAAqDI,EAAAf,QAAAgB,cAACW,EAAA3B,QAAD,MACpB,cAArCY,GACEG,EAAAf,QAAAgB,cAAA,OAAKE,UAAU,iBACXH,EAAAf,QAAAgB,cAACtB,EAAAkC,SAAD,CAAUV,UAAU,iDACpBH,EAAAf,QAAAgB,cAAA,QAAME,UAAU,2BAA4BJ,EAAsBU,KAAKC,aACvEV,EAAAf,QAAAgB,cAAA,QAAME,UAAU,wBAAhB,mCAIZH,EAAAf,QAAAgB,cAACrB,EAAAkC,WAAD,KACId,EAAAf,QAAAgB,cAAA,KAAGU,KAAA,qCAAH,qCA5CcI,aAmDlCjC,EAAoBkC,UAAY,CAC5BvB,6BAA8BwB,UAAUC,KACxCpB,wBAAyBmB,UAAUE,OACnCvB,mCAAoCqB,UAAUG,OAC9C1B,2BAA4BuB,UAAUC,KACtCnB,sBAAuBkB,UAAUE,OACjCtB,iCAAkCoB,UAAUG,mBAgBjC,EAAA3C,EAAA4C,eAAa,EAAA3C,EAAA4C,SAbJ,SAACC,EAAOC,GAAR,SAAAC,EAAAxC,SAAA,CACpBa,wBAAyByB,EAAMG,eAAe5B,wBAC9CF,mCAAoC2B,EAAMG,eAAe9B,mCACzDG,sBAAuBwB,EAAMG,eAAe3B,sBAC5CF,iCAAkC0B,EAAMG,eAAe7B,kCACpD2B,IAGoB,SAAAG,GAAA,MAAa,CACpClC,6BAA8B,SAACmC,GAAD,OAASD,EAAS9C,EAAWY,6BAA6BmC,KACxFlC,2BAA4B,SAACkC,GAAD,OAASD,EAAS9C,EAAWa,2BAA2BkC,OAG5D,CAG1B9C","file":"js/7.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { routerParams } from '@red-hat-insights/insights-frontend-components';\nimport { connect } from 'react-redux';\nimport { ExclamationCircleIcon, FlagIcon } from '@patternfly/react-icons';\n\nimport {\n    Card, CardBody, CardFooter, CardHeader,\n    Title\n} from '@patternfly/react-core';\n\nimport * as AppActions from '../../AppActions';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\n\nimport './_cards.scss';\n\n// expose RELEASE\n/*global RELEASE:true*/\nconst release = RELEASE;\n\n/**\n * Vulnerabilities Card for showing number of critical vulnerabilities\n */\nclass VulnerabilitiesCard extends Component {\n\n    constructor(props) {\n        super(props);\n        this.props = {};\n    }\n\n    componentDidMount () {\n        this.props.fetchCriticalVulnerabilities();\n        this.props.fetchLatestVulnerabilities();\n    }\n\n    render() {\n        const {\n            criticalVulnerabilitiesFetchStatus,\n            latestVulnerabilitiesFetchStatus,\n            criticalVulnerabilities,\n            latestVulnerabilities\n        } = this.props;\n\n        return (\n            <Card className='ins-c-card__vulnerabilities'>\n                <CardHeader>\n                    <Title className=\"pf-u-mt-0 pf-u-mb-0\" size={'lg'}>Vulnerabilities</Title>\n                </CardHeader>\n                <CardBody>\n                    { criticalVulnerabilitiesFetchStatus === 'fulfilled' && (\n                        <div className='ins-c-summary'>\n                            <ExclamationCircleIcon className='ins-c-summary__icon ins-c-summary__icon-critical' />\n                            <span className='ins-c-summary__emphasis'>{ criticalVulnerabilities.meta.total_items }</span>\n                            <span className='ins-c-summary__label'>\n                                <a href={ `/${release}/platform/vulnerability/` }>Critical</a>\n                            </span>\n                        </div>\n                    ) } { criticalVulnerabilitiesFetchStatus === 'pending' && (<Loading />) }\n                    { latestVulnerabilitiesFetchStatus === 'fulfilled' && (\n                        <div className='ins-c-summary'>\n                            <FlagIcon className='ins-c-summary__icon ins-c-summary__icon-flag' />\n                            <span className='ins-c-summary__emphasis'>{ latestVulnerabilities.meta.total_items }</span>\n                            <span className='ins-c-summary__label'>CVEs added in the last 7 days</span>\n                        </div>\n                    ) }\n                </CardBody>\n                <CardFooter>\n                    <a href={ `/${release}/platform/vulnerability/` }>View All Vulnerabilities</a>\n                </CardFooter>\n            </Card>\n        );\n    }\n}\n\nVulnerabilitiesCard.propTypes = {\n    fetchCriticalVulnerabilities: PropTypes.func,\n    criticalVulnerabilities: PropTypes.object,\n    criticalVulnerabilitiesFetchStatus: PropTypes.string,\n    fetchLatestVulnerabilities: PropTypes.func,\n    latestVulnerabilities: PropTypes.object,\n    latestVulnerabilitiesFetchStatus: PropTypes.string\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    criticalVulnerabilities: state.DashboardStore.criticalVulnerabilities,\n    criticalVulnerabilitiesFetchStatus: state.DashboardStore.criticalVulnerabilitiesFetchStatus,\n    latestVulnerabilities: state.DashboardStore.latestVulnerabilities,\n    latestVulnerabilitiesFetchStatus: state.DashboardStore.latestVulnerabilitiesFetchStatus,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchCriticalVulnerabilities: (url) => dispatch(AppActions.fetchCriticalVulnerabilities(url)),\n    fetchLatestVulnerabilities: (url) => dispatch(AppActions.fetchLatestVulnerabilities(url))\n});\n\nexport default routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(VulnerabilitiesCard));\n"],"sourceRoot":""}