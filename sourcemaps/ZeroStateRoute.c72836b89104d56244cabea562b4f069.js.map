{"version":3,"file":"js/ZeroStateRoute.1671192789469.5f75e3ffb62914289c53.js","mappings":"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","sources":["webpack:///./src/PresentationalComponents/IconList/IconList.js","webpack:///./src/PresentationalComponents/IconList/IconListItem.js","webpack:///./src/PresentationalComponents/MarketingBanner/MarketingBanner.js","webpack:///./src/PresentationalComponents/ZeroState/ZeroState.js"],"sourcesContent":["import './_icon-list.scss';\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport propTypes from 'prop-types';\n\nconst IconList = ({ iconListStyle, className, children }) => {\n    const IconListClasses = classNames(className, 'insd-c-icon-list');\n\n    return <ul className={ IconListClasses } style={ iconListStyle }>\n        {children}\n    </ul>;\n};\n\nexport default IconList;\n\nIconList.propTypes = {\n    children: propTypes.any.isRequired,\n    iconListStyle: propTypes.string,\n    className: propTypes.string\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport propTypes from 'prop-types';\n\nconst IconListItem = ({ className, iconListItemStyle, children }) => {\n    const IconListItemClasses = classNames(className, 'insd-c-icon-list__item');\n\n    return <li className={ IconListItemClasses } style={ iconListItemStyle }>\n        {children}\n    </li>;\n};\n\nexport default IconListItem;\n\nIconListItem.propTypes = {\n    className: propTypes.string,\n    iconListItemStyle: propTypes.string,\n    children: propTypes.any.isRequired\n};\n","import './_marketing-banner.scss';\n\nimport { PageSection } from '@patternfly/react-core';\nimport React from 'react';\nimport classNames from 'classnames';\nimport propTypes from 'prop-types';\n\nconst MarketingBanner = ({ className, hasGraphic, graphicRight, dark1000, fullBleed, style, children }) => {\n\n    const MarketingBannerSectionClasses = classNames(\n        className,\n        'insd-c-marketing-banner',\n        { [`insd-m-with-graphic`]: hasGraphic },\n        { [`insd-m-graphic-right`]: graphicRight },\n        { [`insd-m-dark-1000 pf-m-dark-1000`]: dark1000 },\n        { [`insd-m-full-bleed`]: fullBleed }\n    );\n\n    return <PageSection\n        className={ MarketingBannerSectionClasses }\n        style={ style }\n        isWidthLimited>\n        {children}\n    </PageSection>;\n};\n\nexport default MarketingBanner;\n\nMarketingBanner.propTypes = {\n    children: propTypes.any.isRequired,\n    className: propTypes.string,\n    style: propTypes.any,\n    graphicRight: propTypes.bool,\n    hasGraphic: propTypes.bool,\n    dark1000: propTypes.bool,\n    fullBleed: propTypes.bool,\n    isWidthLimited: propTypes.bool\n};\n","import './_zero-state.scss';\n\nimport {\n    Button,\n    Card,\n    CardBody,\n    CardHeader,\n    List,\n    ListItem,\n    PageSection,\n    TextContent,\n    Title\n} from '@patternfly/react-core/dist/esm/components/index';\nimport { Flex, FlexItem } from '@patternfly/react-core/dist/esm/layouts/Flex/index';\nimport { Grid, GridItem } from '@patternfly/react-core/dist/esm/layouts/Grid/index';\nimport React, { useEffect, useState } from 'react';\nimport {\n    SortByDirection,\n    Table,\n    TableBody,\n    TableHeader,\n    sortable\n} from '@patternfly/react-table/dist/esm/components/Table/index';\n\nimport API from '../../Utilities/Api';\nimport ArrowRightIcon from '@patternfly/react-icons/dist/esm/icons/arrow-right-icon';\nimport IconList from '../IconList/IconList';\nimport IconListItem from '../IconList/IconListItem';\nimport ImgInsSmartMgmt from '../../images/img__ins-and-sm.png';\nimport MarketingBanner from '../MarketingBanner/MarketingBanner';\nimport { UI_BASE } from '../../AppConstants';\nimport { VULNERABILITIES_CVES_URL } from '../../AppConstants';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\n\n// eslint-disable-next-line no-unused-vars\nconst SortableTable = () => {\n    const columns = [\n        { title: 'CVE ID', transforms: [sortable] },\n        { title: 'Publish Date', transforms: [sortable] },\n        { title: 'Impact', transforms: [sortable] },\n        { title: 'CVSS Base Score', transforms: [sortable] }\n    ];\n    const [rows, setRows] = useState([]);\n    const [sortBy, setSort] = useState({});\n    const dateFormatter = (date) => {\n        const newDate = (new Date(date)).toString().split(' ');\n        return `${newDate[2]} ${newDate[1]} ${newDate[3]}`;\n    };\n\n    const rowBuilder = data => data.map(row => [{\n        title: <a href={ ` https://access.redhat.com/security/cve/${row.id}` }\n            target='_blank' rel='noreferrer'>{row.id}</a>\n    },\n    { title: <span>{dateFormatter(row.attributes.public_date)}</span> },\n    { title: <span>{row.attributes.impact}</span> },\n    { title: <span>{row.attributes.cvss3_score}</span> }]);\n    // const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        const fetchCves = async () => {\n            try {\n                const cves = (await API.get(VULNERABILITIES_CVES_URL, {}, { sort: '-public_date', limit: 4 })).data;\n                setRows(rowBuilder(cves.data));\n            } catch (error) {\n                throw `${error}`;\n            }\n        };\n\n        fetchCves();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const onSort = (_event, index, direction) => {\n        const sortedRows = rows.sort((a, b) => (a[index] < b[index] ? -1 : a[index] > b[index] ? 1 : 0));\n        setSort({ index, direction });\n        setRows(direction === SortByDirection.asc ? sortedRows : sortedRows.reverse());\n    };\n\n    return <Table aria-label='Sortable Table' sortBy={ sortBy } onSort={ onSort } cells={ columns } rows={ rows }>\n        <TableHeader />\n        <TableBody />\n    </Table>;\n};\n\nconst ZeroState = () => {\n    const intl = useIntl();\n\n    return <div className='insd-c-marketing-page'>\n        <MarketingBanner\n            hasGraphic\n            graphicRight\n            dark1000\n            fullBleed\n            isWidthLimited\n            style={ {\n                '--ins-c-marketing-banner--graphic--width-on-md': '200px',\n                '--ins-c-marketing-banner--graphic--width-on-xl': '400px'\n            } }>\n            <Grid>\n                <GridItem>\n                    <Flex direction={ { default: 'column' } }>\n                        <FlexItem>\n                            <Title headingLevel='h1' size='2xl'>\n                                {intl.formatMessage(messages.noSystemsTitle)}\n                            </Title>\n                        </FlexItem>\n                        <FlexItem spacer={ { default: 'spacer2xl' } }>\n                            <div className='insd-c-width-limiter' style={ { '--insd-c-width-limiter--MaxWidth': '600px' } }>\n                                <p className='ins-c-text--black-400'>{intl.formatMessage(messages.singleConsistent)}</p>\n                            </div>\n                        </FlexItem>\n                        <FlexItem>\n                            <Button\n                                isLarge\n                                component='a'\n                                variant='primary'\n                                href={ `${UI_BASE}/registration` }>\n                                {intl.formatMessage(messages.registerYourSystems)}\n                            </Button>\n                        </FlexItem>\n                        <FlexItem>\n                            <Button\n                                className='pf-m-plain'\n                                component='a'\n                                variant='secondary'\n                                target='_blank'\n                                rel='noreferrer'\n                                href='https://www.redhat.com/en/technologies/management/insights'>\n                                {intl.formatMessage(messages.learnmoreRHI)}&nbsp;&nbsp;&nbsp;\n                                <ArrowRightIcon />\n                            </Button>\n                        </FlexItem>\n                    </Flex>\n                </GridItem>\n            </Grid>\n        </MarketingBanner>\n        <PageSection isWidthLimited>\n            <Grid lg={ 6 } hasGutter>\n                <GridItem>\n                    <Card style={ { height: '100%' } }>\n                        <CardHeader>\n                            <TextContent>\n                                <Title headingLevel='h2'>{intl.formatMessage(messages.zslblTitle)}</Title>\n                                <p>{intl.formatMessage(messages.zslblBody)}</p>\n                            </TextContent>\n                        </CardHeader>\n                        <CardBody>\n                            <IconList>\n                                <IconListItem>{intl.formatMessage(messages.zslblb1)}</IconListItem>\n                                <IconListItem>{intl.formatMessage(messages.zslblb2)}</IconListItem>\n                                <IconListItem>{intl.formatMessage(messages.zslblb3)}</IconListItem>\n                                <IconListItem>{intl.formatMessage(messages.zslblb4)}</IconListItem>\n                                <IconListItem>{intl.formatMessage(messages.zslblb5)}</IconListItem>\n                            </IconList>\n                        </CardBody>\n                    </Card>\n                </GridItem>\n                <GridItem>\n                    <Card style={ { height: '100%' } }>\n                        <CardHeader>\n                            <TextContent>\n                                <Title headingLevel='h2'>{intl.formatMessage(messages.zsrblTitle)}</Title>\n                                <p>{intl.formatMessage(messages.zsrblBody)}</p>\n                            </TextContent>\n                        </CardHeader>\n                        <CardBody>\n                            <IconList>\n                                <IconListItem>{intl.formatMessage(messages.zsrblb1)}</IconListItem>\n                                <IconListItem>{intl.formatMessage(messages.zsrblb2)}</IconListItem>\n                                <IconListItem>{intl.formatMessage(messages.zsrblb3)}</IconListItem>\n                                <IconListItem>{intl.formatMessage(messages.zsrblb4)}</IconListItem>\n                                <IconListItem>{intl.formatMessage(messages.zsrblb5)}</IconListItem>\n                            </IconList>\n                        </CardBody>\n                    </Card>\n                </GridItem>\n            </Grid>\n        </PageSection>\n        <MarketingBanner\n            isWidthLimited='true'\n            hasGraphic\n            graphicRight\n            dark1000\n            fullBleed\n            style={ {\n                '--ins-c-marketing-banner--graphic--width': '400px'\n            } }>\n            <Flex direction={ { default: 'column' } }>\n                <FlexItem spacer={ { default: 'spacerLg' } }>\n                    <Title headingLevel='h3' size='lg'>\n                        {intl.formatMessage(messages.dataPrivacyAndControlsTitle)}\n                    </Title>\n                </FlexItem>\n                <FlexItem spacer={ { default: 'spacerXl' } }>\n                    <p className='insd-c-width-limiter ins-c-text--black-400'\n                        style={ { '--insd-c-width-limiter--MaxWidth': '70ch' } }>\n                        {intl.formatMessage(messages.dataPrivacyAndControls)}\n                    </p>\n                </FlexItem>\n                <FlexItem>\n                    <Button\n                        component='a'\n                        target='_blank'\n                        rel='noreferrer'\n                        href={ `./security/insights` }>\n                        {intl.formatMessage(messages.securityRedirect)}\n                    </Button>\n                </FlexItem>\n            </Flex>\n        </MarketingBanner>\n        <PageSection isWidthLimited>\n            <Flex direction={ { default: 'column' } }>\n                <FlexItem spacer={ { default: 'spacerXl' } }>\n                    <TextContent>\n                        <Title headingLevel='h3'>\n                            {intl.formatMessage(messages.insightsandsmartmanagement)}\n                        </Title>\n                        <div className='insd-c-width-limiter' style={ { '--insd-c-width-limiter--MaxWidth': '900px' } }>\n                            <p>{intl.formatMessage(messages.smartManagement)}</p>\n                        </div>\n                    </TextContent>\n                </FlexItem>\n                <FlexItem>\n                    <Grid hasGutter>\n                        <GridItem md={ 6 } lg={ 5 } mdRowSpan={ 3 }>\n                            <img src={ ImgInsSmartMgmt } alt='Insights Smart Management' />\n                        </GridItem>\n                        <GridItem md={ 6 } lg={ 7 }>\n                            <div className='insd-c-width-limiter pf-u-pt-lg-on-lg' style={ { '--insd-c-width-limiter--MaxWidth': '600px' } }>\n                                <List>\n                                    <ListItem>{intl.formatMessage(messages.rhm1)}</ListItem>\n                                    <ListItem>{intl.formatMessage(messages.rhm2)}</ListItem>\n                                    <ListItem>{intl.formatMessage(messages.rhm3)}</ListItem>\n                                </List>\n                            </div>\n                        </GridItem>\n                        <GridItem md={ 6 } lg={ 7 } className='pf-u-pl-lg'>\n                            <Flex>\n                                <FlexItem>\n                                    <Button\n                                        className='pf-m-secondary'\n                                        component='a'\n                                        target='_blank'\n                                        rel='noreferrer'\n                                        href='https://www.redhat.com/en/technologies/management/smart-management'>\n                                        {intl.formatMessage(messages.learnmore)}\n                                    </Button>\n                                </FlexItem>\n                                <FlexItem>\n                                    <Button\n                                        className='pf-m-secondary'\n                                        component='a'\n                                        target='_blank'\n                                        rel='noreferrer'\n                                        href='https://www.redhat.com/en/contact'>\n                                        {intl.formatMessage(messages.contactsales)}\n                                    </Button>\n                                </FlexItem>\n                            </Flex>\n                        </GridItem>\n                    </Grid>\n                </FlexItem>\n            </Flex>\n        </PageSection>\n    </div>;\n};\n\nexport default ZeroState;\n"],"names":["IconList","iconListStyle","className","children","IconListClasses","classNames","style","propTypes","IconListItem","iconListItemStyle","IconListItemClasses","MarketingBanner","hasGraphic","graphicRight","dark1000","fullBleed","MarketingBannerSectionClasses","PageSection","isWidthLimited","intl","useIntl","Grid","GridItem","Flex","direction","default","FlexItem","Title","headingLevel","size","formatMessage","messages","spacer","Button","isLarge","component","variant","href","UI_BASE","target","rel","lg","hasGutter","Card","height","CardHeader","TextContent","CardBody","md","mdRowSpan","src","ImgInsSmartMgmt","alt","List","ListItem"],"sourceRoot":""}