{"version":3,"file":"js/9372.1671615966500.732cd9aa42e34816de8f.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-tokens/dist/esm/global_disabled_color_100.js","webpack:///./src/ChartTemplates/PieChart/PieChartTemplate.js","webpack:///./src/PresentationalComponents/Template/CompoundCard.js","webpack:///./node_modules/@patternfly/react-tokens/dist/esm/global_palette_blue_100.js","webpack:///./node_modules/@patternfly/react-tokens/dist/esm/global_palette_blue_200.js","webpack:///./node_modules/@patternfly/react-tokens/dist/esm/global_palette_blue_300.js","webpack:///./node_modules/@patternfly/react-tokens/dist/esm/global_palette_blue_400.js","webpack:///./src/SmartComponents/Advisor/Constants.js","webpack:///./src/SmartComponents/Advisor/Advisor.js"],"sourcesContent":["export const global_disabled_color_100 = {\n  \"name\": \"--pf-global--disabled-color--100\",\n  \"value\": \"#6a6e73\",\n  \"var\": \"var(--pf-global--disabled-color--100)\"\n};\nexport default global_disabled_color_100;","import './PieChartTemplate.scss';\n\nimport { ChartLabel } from '@patternfly/react-charts/dist/esm/components/ChartLabel/ChartLabel';\nimport { ChartLegend } from '@patternfly/react-charts/dist/esm/components/ChartLegend/ChartLegend';\nimport { ChartPie } from '@patternfly/react-charts/dist/esm/components/ChartPie/ChartPie';\nimport React from 'react';\nimport propTypes from 'prop-types';\n\nexport const PieChart = ({ ariaDesc, ariaTitle, constrainToVisibleArea, data, legendData, padding, height, width, legendOrientation,\n    colorScale, legend, legendWidth, legendHeight, legendClick }) => {\n    // eslint-disable-next-line react/prop-types\n    const LegendLabel = ({ index, ...rest }) => <a id={ `${ariaTitle.toLowerCase().replace(/\\s/g, '-')}-legend-${index + 1}` }\n        href={ legendClick[index] } className=\"pf-c-button pf-m-link pf-m-inline\"><ChartLabel { ...rest } /></a>;\n\n    return (\n        <div className=\"insd-c-pie-chart__row\">\n            <div style={ { width, height, position: 'relative' } }>\n                <ChartPie\n                    ariaDesc={ ariaDesc }\n                    ariaTitle={ ariaTitle }\n                    constrainToVisibleArea={ constrainToVisibleArea }\n                    data={ data }\n                    height={ height }\n                    labels={ ({ datum }) => `${datum.x}: ${datum.y}` }\n                    padding={ padding }\n                    width={ width }\n                    colorScale={ colorScale }\n                />\n                <table tabIndex=\"0\" className=\"visually-hidden\" aria-label={ ariaTitle + ` data` }>\n                    <tbody>\n                        {data.map((d, index) => {\n                            return [\n                                <tr key={ index }>\n                                    <td>{d.y}</td>\n                                    <td>{d.x}</td>\n                                </tr>\n                            ];\n                        })}\n                    </tbody>\n                </table>\n            </div>\n            {legend &&\n                <div className=\"insd-c-pie-chart__legend\" aria-label=\"Chart legend\" style={ { width: legendWidth, height: legendHeight } }>\n                    <ChartLegend\n                        height={ legendHeight }\n                        width={ legendWidth }\n                        fontSize={ 14 }\n                        data={ legendData }\n                        rowGutter={ { top: -5, bottom: -5 } }\n                        orientation={ legendOrientation }\n                        labelComponent={ legendClick && < LegendLabel /> }\n                    />\n                </div>\n            }\n        </div>\n    );\n};\n\nPieChart.propTypes = {\n    ariaDesc: propTypes.string,\n    ariaTitle: propTypes.string,\n    constrainToVisibleArea: propTypes.bool,\n    data: propTypes.array,\n    legendData: propTypes.array,\n    padding: propTypes.object,\n    height: propTypes.number,\n    width: propTypes.number,\n    legendOrientation: propTypes.string,\n    colorScale: propTypes.array,\n    legend: propTypes.bool,\n    legendWidth: propTypes.number,\n    legendHeight: propTypes.number,\n    legendClick: propTypes.any\n};\n\nexport default PieChart;\n","import './CompoundCard.scss';\n\nimport { Card } from '@patternfly/react-core/dist/esm/components/Card/Card';\nimport React from 'react';\nimport propTypes from 'prop-types';\n\nexport const CompoundCard = ({ className, children, ...props }) => <Card\n    className={`insd-c-dashboard-compound-card insd-c-dashboard__card ${className}`} {...props}>\n    {children}\n</Card>;\n\nCompoundCard.propTypes = {\n    children: propTypes.any,\n    className: propTypes.string\n};\n\n","export const global_palette_blue_100 = {\n  \"name\": \"--pf-global--palette--blue-100\",\n  \"value\": \"#bee1f4\",\n  \"var\": \"var(--pf-global--palette--blue-100)\"\n};\nexport default global_palette_blue_100;","export const global_palette_blue_200 = {\n  \"name\": \"--pf-global--palette--blue-200\",\n  \"value\": \"#73bcf7\",\n  \"var\": \"var(--pf-global--palette--blue-200)\"\n};\nexport default global_palette_blue_200;","export const global_palette_blue_300 = {\n  \"name\": \"--pf-global--palette--blue-300\",\n  \"value\": \"#2b9af3\",\n  \"var\": \"var(--pf-global--palette--blue-300)\"\n};\nexport default global_palette_blue_300;","export const global_palette_blue_400 = {\n  \"name\": \"--pf-global--palette--blue-400\",\n  \"value\": \"#06c\",\n  \"var\": \"var(--pf-global--palette--blue-400)\"\n};\nexport default global_palette_blue_400;","export const INCIDENT_URL = `/advisor/recommendations?reports_shown=true&impacting=true&offset=0&limit=10&sort=-publish_date&incident=true`;\n\nexport const SEVERITY_MAP = {\n    critical: 4,\n    important: 3,\n    moderate: 2,\n    low: 1\n};\n","/* eslint-disable react/display-name */\nimport './Advisor.scss';\n\nimport * as AppActions from '../../AppActions';\n\nimport {\n    Button,\n    Card,\n    CardBody,\n    CardTitle,\n    Divider,\n    TextContent,\n    Title,\n    Tooltip,\n    TooltipPosition\n} from '@patternfly/react-core/dist/esm/components';\nimport { Flex, FlexItem } from '@patternfly/react-core/dist/esm/layouts';\nimport React, { useEffect, useState } from 'react';\nimport { SEVERITY_MAP, UI_BASE } from '../../AppConstants';\nimport { capitalize, globalFilters } from '../../Utilities/Common';\nimport {\n    global_disabled_color_100,\n    global_palette_blue_100,\n    global_palette_blue_200,\n    global_palette_blue_300,\n    global_palette_blue_400\n} from '@patternfly/react-tokens/dist/esm/';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { CompoundCard } from '../../PresentationalComponents/Template/CompoundCard';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { ExpandableCardTemplate } from '../../PresentationalComponents/Template/ExpandableCardTemplate';\nimport FailState from '../../PresentationalComponents/FailState/FailState';\nimport { INCIDENT_URL } from './Constants';\nimport InfoIcon from '../../Icons/InfoIcon';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport { PieChart } from '../../ChartTemplates/PieChart/PieChartTemplate';\nimport { TemplateCardBody } from '../../PresentationalComponents/Template/TemplateCard';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\nimport { useChromePush } from '../../Utilities/hooks/useChromePush';\n\nconst Advisor = () => {\n    const colors = [global_palette_blue_100.value, global_palette_blue_200.value, global_palette_blue_300.value, global_palette_blue_400.value];\n    const intl = useIntl();\n    const [trData, setTRData] = useState([]);\n    const [categoryData, setCategoryData] = useState([]);\n    const [colorScale, setColorScale] = useState();\n    const dispatch = useDispatch();\n    const recStats = useSelector(({ DashboardStore }) => DashboardStore.advisorStatsRecs);\n    const recStatsStatus = useSelector(({ DashboardStore }) => DashboardStore.advisorStatsRecsStatus);\n    const advisorIncidents = useSelector(({ DashboardStore }) => DashboardStore.advisorIncidents);\n    const advisorIncidentsStatus = useSelector(({ DashboardStore }) => DashboardStore.advisorIncidentsStatus);\n    const selectedTags = useSelector(({ DashboardStore }) => DashboardStore.selectedTags);\n    const workloads = useSelector(({ DashboardStore }) => DashboardStore.workloads);\n    const SID = useSelector(({ DashboardStore }) => DashboardStore.SID);\n\n    const urlRest = `&reports_shown=true&impacting=true&offset=0&limit=10${selectedTags?.length ?\n        `&tags=${selectedTags?.join()}` : ''}${workloads?.SAP ? '&sap_system=true' : ''}${SID?.length ? `&sap_sids=${SID?.join()}` : ''}`;\n    const totalRiskUrl = risk => `${UI_BASE}/advisor/recommendations?total_risk=${risk}${urlRest}`;\n    const pieLegendData = categoryData.map(item => ({\n        name: `${item.y} ${item.x} `, fill: `${item.fill}`,\n        url: `${UI_BASE}/advisor/recommendations?category=${item.value}${urlRest}`\n    }));\n    const iconTooltip = text => <Tooltip\n        key={text}\n        position={TooltipPosition.top}\n        content={<div>{text}</div>}>\n        <span aria-label='Action' className='insd-c-info-icon'>\n            <InfoIcon />\n        </span>\n    </Tooltip>;\n    const pieChartPadding = { bottom: 0, left: 0, right: 0, top: 0 };\n\n    useEffect(() => {\n        const advisorFetchStatsRecs = options => dispatch(AppActions.advisorFetchStatsRecs(options));\n        const advisorFetchStatsSystems = options => dispatch(AppActions.advisorFetchStatsSystems(options));\n        const advisorFetchIncidents = options => dispatch(AppActions.advisorFetchIncidents(options));\n        const options = { ...globalFilters(workloads, SID), ...selectedTags?.length > 0 && { tags: selectedTags } };\n        advisorFetchStatsRecs(options);\n        advisorFetchStatsSystems(options);\n        advisorFetchIncidents(options);\n    }, [selectedTags, workloads, SID, dispatch]);\n\n    useEffect(() => {\n        if (recStatsStatus === 'fulfilled') {\n            const { total_risk, category } = recStats;\n            const categoryCount = category.Stability + category.Availability + category.Performance + category.Security;\n            setTRData([\n                {\n                    title: `${capitalize(intl.formatMessage(messages.critical))} `,\n                    risk: `${total_risk[SEVERITY_MAP.critical]}`,\n                    value: SEVERITY_MAP.critical\n                },\n                {\n                    title: `${capitalize(intl.formatMessage(messages.important))} `,\n                    risk: `${total_risk[SEVERITY_MAP.important]}`,\n                    value: SEVERITY_MAP.important\n                },\n                {\n                    title: `${capitalize(intl.formatMessage(messages.moderate))} `,\n                    risk: `${total_risk[SEVERITY_MAP.moderate]}`,\n                    value: SEVERITY_MAP.moderate\n                },\n                {\n                    title: `${capitalize(intl.formatMessage(messages.low))} `,\n                    risk: `${total_risk[SEVERITY_MAP.low]}`,\n                    value: SEVERITY_MAP.low\n                }\n            ]);\n\n            setCategoryData([\n                {\n                    x: intl.formatMessage(messages.availability, { count: category.Availability }), y: category.Availability,\n                    fill: colors[0], value: 1\n                },\n                {\n                    x: intl.formatMessage(messages.stability, { count: category.Stability }), y: category.Stability,\n                    fill: colors[1], value: 3\n                },\n                {\n                    x: intl.formatMessage(messages.performance, { count: category.Performance }), y: category.Performance,\n                    fill: colors[2], value: 4\n                },\n                {\n                    x: intl.formatMessage(messages.security, { count: category.Security }), y: category.Security,\n                    fill: colors[3], value: 2\n                }\n            ]);\n\n            setColorScale(categoryCount === 0 ? [global_disabled_color_100.value] : colors);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [recStats, recStatsStatus]);\n\n    const navigateTo = useChromePush();\n\n    return <CompoundCard className='insd-c-dashboard-card-parent insd-c-dashboard__card--compound--Advisor'>\n        {advisorIncidentsStatus === 'pending' || recStatsStatus === 'pending' && <Loading />}\n        {advisorIncidentsStatus === 'rejected' ?\n            <TemplateCardBody><FailState appName='Advisor' /></TemplateCardBody>\n            : <React.Fragment>\n                <ExpandableCardTemplate\n                    appName='Advisor'\n                    className='insd-m-toggle-right-on-md'\n                    title={intl.formatMessage(messages.advisorCardHeader1)}\n                    isExpanded={JSON.parse(localStorage.getItem('dashboard_expanded_advisor1') || 'true')}\n                    isExpandedCallback={isExpanded => localStorage.setItem('dashboard_expanded_advisor1', isExpanded)}\n                    body={<TemplateCardBody className='ins-c-advisor-recs__card-body pf-u-pb-2xl'>\n                        <Flex\n                            direction={{ default: 'column' }}\n                            alignItems={{ default: 'alignItemsCenter' }}>\n                            <FlexItem>\n                                <Flex\n                                    alignItems={{ default: 'alignItemsFlexCenter' }}\n                                    justifyContent={{ default: 'justifyContentCenter' }}>\n                                    {advisorIncidents?.meta?.count > 0 &&\n                                        <ExclamationCircleIcon className='pf-u-font-size-xl pf-u-danger-color-100' />}\n                                    <span className='pf-u-font-size-2xl pf-u-text-align-center pf-u-font-weight-normal'>\n                                        {intl.formatMessage(messages.incidents, { incidents: advisorIncidents?.meta?.count })}\n                                    </span>\n                                </Flex>\n                                <TextContent\n                                    className='insd-c-width-limiter pf-u-text-align-center'\n                                    style={{ '--insd-c-width-limiter--MaxWidth': '34ch' }}>\n                                    <p className='pf-u-font-size-md pf-u-text-center'>\n                                        {intl.formatMessage(messages.advisorCardMessage)}\n                                    </p>\n                                </TextContent>\n                            </FlexItem>\n                            <Button\n                                variant='secondary'\n                                isSmall component='a'\n                                onClick={e => navigateTo(e, `${UI_BASE}${INCIDENT_URL}`)}\n                                href={`${UI_BASE}${INCIDENT_URL}`}\n                            >\n                                {intl.formatMessage(messages.advisorCardCTA)}\n                            </Button>\n                        </Flex>\n                    </TemplateCardBody>\n                    } />\n                <Divider inset={{ md: 'insetLg' }} />\n                <ExpandableCardTemplate\n                    appName='advisor-recommendation-by-total-risk'\n                    className='insd-m-toggle-right-on-md'\n                    title={<Flex flexWrap={{ default: 'nowrap' }}>\n                        <h3>{intl.formatMessage(messages.advisorCardHeader2)}</h3>\n                        {iconTooltip(intl.formatMessage(messages.totalRiskDef, { strong: (str) => <strong>{str}</strong> }))}\n                    </Flex>}\n                    isExpanded={JSON.parse(localStorage.getItem('dashboard_expanded_advisor2') || 'true')}\n                    isExpandedCallback={isExpanded => localStorage.setItem('dashboard_expanded_advisor2', isExpanded)}\n                    body={<TemplateCardBody className='ins-c-advisor-recs__card-body pf-u-pb-0'>\n                        <Flex\n                            justifyContent={{ default: 'justifyContentCenter' }}\n                            spaceItems={{ default: 'spaceItemsLg', sm: 'spaceItems2xl' }}\n                        >\n                            {trData.map(({ title, risk, value }) =>\n                                <a key={title} onClick={e => navigateTo(e, totalRiskUrl(value))} href={totalRiskUrl(value)}>\n                                    <Flex\n                                        direction={{ default: 'column' }}\n                                        spaceItems={{ default: 'spaceItemsNone' }}\n                                        alignItems={{ default: 'alignItemsCenter' }}>\n                                        <span className='pf-u-font-size-2xl pf-u-color-100 pf-u-font-weight-normal'>\n                                            {risk}\n                                        </span>\n                                        <span className='pf-u-font-size-sm'>\n                                            {title}\n                                        </span>\n                                    </Flex>\n                                </a>)}\n                        </Flex>\n                        <Card component='div'>\n                            <CardTitle>\n                                <Title headingLevel='h4' size='lg'>\n                                    {intl.formatMessage(messages.advisorCardHeader3)}\n                                </Title>\n                            </CardTitle>\n                            <CardBody className='pf-u-pt-sm'>\n                                <Flex direction={{ default: 'column' }} spaceItems={{ default: 'spaceItemsLg' }}>\n                                    <div className=\"insd-c-dashboard__card-chart-container\">\n                                        <div className=\"insd-c-dashboard__card-pie-chart\">\n                                            <PieChart\n                                                ariaDesc='Advisor Category pie chart'\n                                                ariaTitle='Advisor Category pie chart'\n                                                constrainToVisibleArea={true}\n                                                data={categoryData}\n                                                colorScale={colorScale}\n                                                padding={pieChartPadding}\n                                            />\n                                        </div>\n                                        <div className=\"insd-c-dashboard__card-pie-chart-legend\">\n                                            <div className='insd-c-legend insd-m-2-col'>\n                                                {pieLegendData.map((item) =>\n                                                    <a\n                                                        key={item.url}\n                                                        onClick={e => navigateTo(e, item.url)}\n                                                        href={item.url}\n                                                        className='insd-c-legend__item'\n                                                    >\n                                                        <span className='insd-c-legend__dot'\n                                                            style={{ '--insd-c-legend__dot--BackgroundColor': `${item.fill}` }} />\n                                                        <span className='insd-c-legend__text'>{item.name}</span>\n                                                    </a>\n                                                )}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Flex>\n                            </CardBody>\n                        </Card>\n                    </TemplateCardBody>\n                    } />\n            </React.Fragment>}\n    </CompoundCard>;\n};\n\nexport default Advisor;\n"],"names":["global_disabled_color_100","PieChart","ariaDesc","ariaTitle","constrainToVisibleArea","data","legendData","padding","height","width","legendOrientation","colorScale","legend","legendWidth","legendHeight","legendClick","LegendLabel","index","rest","id","toLowerCase","replace","href","className","style","position","labels","datum","x","y","tabIndex","map","d","key","fontSize","rowGutter","top","bottom","orientation","labelComponent","propTypes","CompoundCard","children","props","global_palette_blue_100","global_palette_blue_200","global_palette_blue_300","global_palette_blue_400","INCIDENT_URL","colors","intl","useIntl","useState","trData","setTRData","categoryData","setCategoryData","setColorScale","dispatch","useDispatch","recStats","useSelector","DashboardStore","advisorStatsRecs","recStatsStatus","advisorStatsRecsStatus","advisorIncidents","advisorIncidentsStatus","selectedTags","workloads","SID","urlRest","length","join","SAP","totalRiskUrl","risk","UI_BASE","pieLegendData","item","name","fill","url","value","useEffect","options","globalFilters","tags","AppActions","advisorFetchStatsRecs","advisorFetchStatsSystems","advisorFetchIncidents","total_risk","category","categoryCount","Stability","Availability","Performance","Security","title","capitalize","formatMessage","messages","SEVERITY_MAP","count","text","navigateTo","useChromePush","Loading","TemplateCard","FailState","appName","ExpandableCardTemplate","isExpanded","JSON","parse","localStorage","getItem","isExpandedCallback","setItem","body","Flex","direction","default","alignItems","FlexItem","justifyContent","meta","incidents","TextContent","Button","variant","isSmall","component","onClick","e","Divider","inset","md","flexWrap","strong","str","Tooltip","TooltipPosition","content","InfoIcon","spaceItems","sm","Card","CardTitle","Title","headingLevel","size","CardBody","left","right"],"sourceRoot":""}