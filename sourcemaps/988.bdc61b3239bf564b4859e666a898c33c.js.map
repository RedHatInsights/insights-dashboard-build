{"version":3,"file":"js/988.1649776931453.b3d87eb9e700ab306f62.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-tokens/dist/esm/global_disabled_color_100.js","webpack:///./src/ChartTemplates/PieChart/PieChartTemplate.js","webpack:///./src/SmartComponents/PatchManager/PatchManagerCard.js"],"sourcesContent":["export const global_disabled_color_100 = {\n  \"name\": \"--pf-global--disabled-color--100\",\n  \"value\": \"#6a6e73\",\n  \"var\": \"var(--pf-global--disabled-color--100)\"\n};\nexport default global_disabled_color_100;","import './PieChartTemplate.scss';\n\nimport { ChartLabel } from '@patternfly/react-charts/dist/esm/components/ChartLabel/ChartLabel';\nimport { ChartLegend } from '@patternfly/react-charts/dist/esm/components/ChartLegend/ChartLegend';\nimport { ChartPie } from '@patternfly/react-charts/dist/esm/components/ChartPie/ChartPie';\nimport React from 'react';\nimport propTypes from 'prop-types';\n\nexport const PieChart = ({ ariaDesc, ariaTitle, constrainToVisibleArea, data, legendData, padding, height, width, legendOrientation,\n    colorScale, legend, legendWidth, legendHeight, legendClick }) => {\n    // eslint-disable-next-line react/prop-types\n    const LegendLabel = ({ index, ...rest }) => <a id={ `${ariaTitle.toLowerCase().replace(/\\s/g, '-')}-legend-${index + 1}` }\n        href={ legendClick[index] } className=\"pf-c-button pf-m-link pf-m-inline\"><ChartLabel { ...rest } /></a>;\n\n    return (\n        <div className=\"insd-c-pie-chart__row\">\n            <div style={ { width, height, position: 'relative' } }>\n                <ChartPie\n                    ariaDesc={ ariaDesc }\n                    ariaTitle={ ariaTitle }\n                    constrainToVisibleArea={ constrainToVisibleArea }\n                    data={ data }\n                    height={ height }\n                    labels={ ({ datum }) => `${datum.x}: ${datum.y}` }\n                    padding={ padding }\n                    width={ width }\n                    colorScale={ colorScale }\n                />\n                <table tabIndex=\"0\" className=\"visually-hidden\" aria-label={ ariaTitle + ` data` }>\n                    <tbody>\n                        {data.map((d, index) => {\n                            return [\n                                <tr key={ index }>\n                                    <td>{d.y}</td>\n                                    <td>{d.x}</td>\n                                </tr>\n                            ];\n                        })}\n                    </tbody>\n                </table>\n            </div>\n            {legend &&\n                <div className=\"insd-c-pie-chart__legend\" aria-label=\"Chart legend\" style={ { width: legendWidth, height: legendHeight } }>\n                    <ChartLegend\n                        height={ legendHeight }\n                        width={ legendWidth }\n                        fontSize={ 14 }\n                        data={ legendData }\n                        rowGutter={ { top: -5, bottom: -5 } }\n                        orientation={ legendOrientation }\n                        labelComponent={ legendClick && < LegendLabel /> }\n                    />\n                </div>\n            }\n        </div>\n    );\n};\n\nPieChart.propTypes = {\n    ariaDesc: propTypes.string,\n    ariaTitle: propTypes.string,\n    constrainToVisibleArea: propTypes.bool,\n    data: propTypes.array,\n    legendData: propTypes.array,\n    padding: propTypes.object,\n    height: propTypes.number,\n    width: propTypes.number,\n    legendOrientation: propTypes.string,\n    colorScale: propTypes.array,\n    legend: propTypes.bool,\n    legendWidth: propTypes.number,\n    legendHeight: propTypes.number,\n    legendClick: propTypes.any\n};\n\nexport default PieChart;\n","import './PatchManagerCard.scss';\n\nimport { Flex } from '@patternfly/react-core/dist/esm/layouts';\nimport { PATCHMAN_ID, UI_BASE } from '../../AppConstants';\nimport React, { useEffect } from 'react';\nimport { TemplateCard, TemplateCardBody, TemplateCardHeader } from '../../PresentationalComponents/Template/TemplateCard';\nimport { capitalize, globalFilters, workloadsPropType } from '../../Utilities/Common';\nimport { patchmanFetchBugs, patchmanFetchEnhancements, patchmanFetchSecurity, patchmanFetchSystems } from '../../AppActions';\n\nimport { Button } from '@patternfly/react-core/dist/esm/components';\nimport { ExpandableCardTemplate } from '../../PresentationalComponents/Template/ExpandableCardTemplate';\nimport FailState from '../../PresentationalComponents/FailState/FailState';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport { PieChart } from '../../ChartTemplates/PieChart/PieChartTemplate';\nimport PropTypes from 'prop-types';\nimport chart_color_blue_200 from '@patternfly/react-tokens/dist/esm/chart_color_blue_200';\nimport chart_color_blue_300 from '@patternfly/react-tokens/dist/esm/chart_color_blue_300';\nimport chart_color_blue_400 from '@patternfly/react-tokens/dist/esm/chart_color_blue_400';\nimport { connect } from 'react-redux';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/esm/global_disabled_color_100';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\nimport { useChromePush } from '../../Utilities/hooks/useChromePush';\n\n/**\n * Operating systems card for showing the ratio of operating systems used.\n */\nconst PatchManagerCard = ({ systems, systemsStatus, fetchSystems, fetchSecurity, securityStatus,\n    security, bugs, fetchBugs, bugsStatus, enhancements, fetchEnhancements, enhancementsStatus,\n    selectedTags, workloads, SID }) => {\n    const intl = useIntl();\n    const isLoaded = [systemsStatus, securityStatus, bugsStatus, enhancementsStatus].every(item => item === 'fulfilled');\n    const pieChartData = [\n        {\n            x: intl.formatMessage(messages.securityAdvisories, { count: security }), y: security, fill: chart_color_blue_400.value,\n            url: `${UI_BASE}/${PATCHMAN_ID}/advisories?offset=0&filter%5Badvisory_type_name%5D=security`\n        },\n        {\n            x: intl.formatMessage(messages.bugfixAdvisories, { count: bugs }), y: bugs, fill: chart_color_blue_300.value,\n            url: `${UI_BASE}/${PATCHMAN_ID}/advisories?offset=0&filter%5Badvisory_type_name%5D=bugfix`\n        },\n        {\n            x: intl.formatMessage(messages.enhancementAdvisories, { count: enhancements }), y: enhancements, fill: chart_color_blue_200.value,\n            url: `${UI_BASE}/${PATCHMAN_ID}/advisories?offset=0&filter%5Badvisory_type_name%5D=enhancement`\n        }\n    ];\n\n    const pieChartPadding = { bottom: 0, left: 0, right: 0, top: 0 };\n    const colorScale = [\n        chart_color_blue_200.value,\n        chart_color_blue_300.value,\n        chart_color_blue_400.value\n    ];\n\n    useEffect(() => {\n        const options = { ...globalFilters(workloads, SID), ...selectedTags?.length > 0 && { tags: selectedTags } };\n        fetchSystems(options);\n        fetchSecurity(options);\n        fetchBugs(options);\n        fetchEnhancements(options);\n    }, [fetchSystems, fetchSecurity, fetchBugs, fetchEnhancements, workloads, SID, selectedTags]);\n\n    const navigateTo = useChromePush();\n\n    if (systemsStatus === 'rejected') {\n        return (\n            <TemplateCard appName='PatchManager' className={'insd-c-dashboard__card--Patch'}>\n                <TemplateCardHeader subtitle={intl.formatMessage(messages.patchTitle)} />\n                <TemplateCardBody><FailState appName='Patch' isSmall /></TemplateCardBody>\n            </TemplateCard>\n        );\n    }\n\n    return <ExpandableCardTemplate appName='PatchManager'\n        isExpanded={JSON.parse(localStorage.getItem('dashboard_expanded_patch') || 'true')}\n        isExpandedCallback={isExpanded => localStorage.setItem('dashboard_expanded_patch', isExpanded)}\n        title={intl.formatMessage(messages.patchTitle)}\n        className={'insd-c-dashboard__card--Patch insd-m-toggle-right-on-md'}\n        body={<TemplateCardBody>\n            {!isLoaded ? <Loading /> :\n                <Flex direction={{ default: 'column' }}>\n                    <Button\n                        component='a'\n                        onClick={e => navigateTo(e, `${UI_BASE}/${PATCHMAN_ID}/systems`)}\n                        href={`${UI_BASE}/${PATCHMAN_ID}/systems`}\n                        variant='link'\n                        isInline>\n                        <span>{intl.formatMessage(messages.systemsAffected, { count: systems })}</span>\n                    </Button>\n                    <div className=\"insd-c-dashboard__card-chart-container\">\n                        <div className=\"insd-c-dashboard__card-pie-chart\">\n                            <PieChart\n                                colorScale={isLoaded && (security === 0 && bugs === 0 && enhancements === 0) ? [global_disabled_color_100.value]\n                                    : colorScale}\n                                ariaDesc='Patch systems chart'\n                                ariaTitle='Patch systems chart'\n                                constrainToVisibleArea={true}\n                                data={pieChartData}\n                                labels={({ datum }) => `${datum.x}: ${datum.y}`}\n                                padding={pieChartPadding}\n                            />\n                        </div>\n                        <div className='insd-c-dashboard__card-pie-chart-legend'>\n                            <div className=\"insd-c-legend\">\n                                {pieChartData.map((item, index) =>\n                                    <a key={item.url} onClick={e => navigateTo(e, item.url)} href={item.url} className='insd-c-legend__item'>\n                                        <span className='insd-c-legend__dot'\n                                            style={{ '--insd-c-legend__dot--BackgroundColor': `${colorScale[index]}` }} />\n                                        <span className='insd-c-legend__text'>{item.y} {capitalize(item.x)}</span>\n                                    </a>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                </Flex>\n            }\n        </TemplateCardBody>}\n    />;\n};\n\nPatchManagerCard.propTypes = {\n    systems: PropTypes.any,\n    systemsStatus: PropTypes.string,\n    fetchSystems: PropTypes.func,\n    fetchSecurity: PropTypes.func,\n    security: PropTypes.any,\n    securityStatus: PropTypes.string,\n    fetchBugs: PropTypes.func,\n    bugs: PropTypes.any,\n    bugsStatus: PropTypes.string,\n    fetchEnhancements: PropTypes.func,\n    enhancements: PropTypes.any,\n    enhancementsStatus: PropTypes.string,\n    selectedTags: PropTypes.arrayOf(PropTypes.string),\n    workloads: workloadsPropType,\n    SID: PropTypes.arrayOf(PropTypes.string)\n};\n\nexport default connect(\n    ({ DashboardStore }) => ({\n        systems: DashboardStore.patchmanSystems,\n        systemsStatus: DashboardStore.patchmanSystemsStatus,\n        security: DashboardStore.patchmanSecurity,\n        securityStatus: DashboardStore.patchmanSecurityStatus,\n        bugs: DashboardStore.patchmanBugs,\n        bugsStatus: DashboardStore.patchmanBugsStatus,\n        enhancements: DashboardStore.patchmanEnhancements,\n        enhancementsStatus: DashboardStore.patchmanEnhancementsStatus,\n        selectedTags: DashboardStore.selectedTags,\n        workloads: DashboardStore.workloads,\n        SID: DashboardStore.SID\n    }),\n    dispatch => ({\n        fetchSystems: (options) => dispatch(patchmanFetchSystems(options)),\n        fetchSecurity: (options) => dispatch(patchmanFetchSecurity(options)),\n        fetchBugs: (options) => dispatch(patchmanFetchBugs(options)),\n        fetchEnhancements: (options) => dispatch(patchmanFetchEnhancements(options))\n    })\n)(PatchManagerCard);\n"],"names":["global_disabled_color_100","PieChart","ariaDesc","ariaTitle","constrainToVisibleArea","data","legendData","padding","height","width","legendOrientation","colorScale","legend","legendWidth","legendHeight","legendClick","LegendLabel","index","rest","id","toLowerCase","replace","href","className","style","position","labels","datum","x","y","tabIndex","map","d","key","fontSize","rowGutter","top","bottom","orientation","labelComponent","propTypes","PatchManagerCard","systems","systemsStatus","fetchSystems","fetchSecurity","securityStatus","security","bugs","fetchBugs","bugsStatus","enhancements","fetchEnhancements","enhancementsStatus","selectedTags","workloads","SID","intl","useIntl","isLoaded","every","item","pieChartData","formatMessage","messages","count","fill","chart_color_blue_400","url","UI_BASE","PATCHMAN_ID","chart_color_blue_300","chart_color_blue_200","useEffect","options","globalFilters","length","tags","navigateTo","useChromePush","appName","subtitle","isSmall","isExpanded","JSON","parse","localStorage","getItem","isExpandedCallback","setItem","title","body","direction","default","component","onClick","e","variant","isInline","left","right","capitalize","PropTypes","workloadsPropType","connect","DashboardStore","patchmanSystems","patchmanSystemsStatus","patchmanSecurity","patchmanSecurityStatus","patchmanBugs","patchmanBugsStatus","patchmanEnhancements","patchmanEnhancementsStatus","dispatch","patchmanFetchSystems","patchmanFetchSecurity","patchmanFetchBugs","patchmanFetchEnhancements"],"sourceRoot":""}