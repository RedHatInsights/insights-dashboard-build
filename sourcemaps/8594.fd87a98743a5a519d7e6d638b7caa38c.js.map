{"version":3,"file":"js/8594.1680086334722.98628e0ab8b35f4c74d6.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/components/EmptyState/EmptyStateSecondaryActions.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Progress/Progress.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Progress/ProgressBar.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Progress/ProgressContainer.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/check-circle-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/search-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/times-circle-icon.js","webpack:///./node_modules/@patternfly/react-styles/css/components/Progress/progress.mjs","webpack:///./src/PresentationalComponents/FilterNotSupported.js","webpack:///./src/SmartComponents/SubscriptionsUtilized/Constants.js","webpack:///./src/SmartComponents/SubscriptionsUtilized/SubscriptionsUtilizedHelpers.js","webpack:///./src/ChartTemplates/Progress/ProgressTemplate.js","webpack:///./src/SmartComponents/SubscriptionsUtilized/SubscriptionsUtilizedCard.js"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/EmptyState/empty-state';\nexport const EmptyStateSecondaryActions = (_a) => {\n    var { children = null, className = '' } = _a, props = __rest(_a, [\"children\", \"className\"]);\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.emptyStateSecondary, className) }, props), children));\n};\nEmptyStateSecondaryActions.displayName = 'EmptyStateSecondaryActions';\n//# sourceMappingURL=EmptyStateSecondaryActions.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Progress/progress';\nimport { css } from '@patternfly/react-styles';\nimport { ProgressContainer, ProgressMeasureLocation } from './ProgressContainer';\nimport { getUniqueId } from '../../helpers/util';\nexport var ProgressSize;\n(function (ProgressSize) {\n    ProgressSize[\"sm\"] = \"sm\";\n    ProgressSize[\"md\"] = \"md\";\n    ProgressSize[\"lg\"] = \"lg\";\n})(ProgressSize || (ProgressSize = {}));\nexport class Progress extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.id = this.props.id || getUniqueId();\n    }\n    render() {\n        const _a = this.props, { \n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        id, size, \n        /* eslint-enable @typescript-eslint/no-unused-vars */\n        className, value, title, label, variant, measureLocation, min, max, valueText, isTitleTruncated, tooltipPosition, 'aria-label': ariaLabel, 'aria-labelledby': ariaLabelledBy } = _a, props = __rest(_a, [\"id\", \"size\", \"className\", \"value\", \"title\", \"label\", \"variant\", \"measureLocation\", \"min\", \"max\", \"valueText\", \"isTitleTruncated\", \"tooltipPosition\", 'aria-label', 'aria-labelledby']);\n        const progressBarAriaProps = {\n            'aria-valuemin': min,\n            'aria-valuenow': value,\n            'aria-valuemax': max\n        };\n        if (title || ariaLabelledBy) {\n            progressBarAriaProps['aria-labelledby'] = title ? `${this.id}-description` : ariaLabelledBy;\n        }\n        if (ariaLabel) {\n            progressBarAriaProps['aria-label'] = ariaLabel;\n        }\n        if (valueText) {\n            progressBarAriaProps['aria-valuetext'] = valueText;\n        }\n        if (!title && !ariaLabelledBy && !ariaLabel) {\n            /* eslint-disable no-console */\n            console.warn('One of aria-label or aria-labelledby properties should be passed when using the progress component without a title.');\n        }\n        const scaledValue = Math.min(100, Math.max(0, Math.floor(((value - min) / (max - min)) * 100))) || 0;\n        return (React.createElement(\"div\", Object.assign({}, props, { className: css(styles.progress, styles.modifiers[variant], ['inside', 'outside'].includes(measureLocation) && styles.modifiers[measureLocation], measureLocation === 'inside' ? styles.modifiers[ProgressSize.lg] : styles.modifiers[size], !title && styles.modifiers.singleline, className), id: this.id }),\n            React.createElement(ProgressContainer, { parentId: this.id, value: scaledValue, title: title, label: label, variant: variant, measureLocation: measureLocation, progressBarAriaProps: progressBarAriaProps, isTitleTruncated: isTitleTruncated, tooltipPosition: tooltipPosition })));\n    }\n}\nProgress.displayName = 'Progress';\nProgress.defaultProps = {\n    className: '',\n    measureLocation: ProgressMeasureLocation.top,\n    variant: null,\n    id: '',\n    title: '',\n    min: 0,\n    max: 100,\n    size: null,\n    label: null,\n    value: 0,\n    valueText: null,\n    isTitleTruncated: false,\n    tooltipPosition: 'top',\n    'aria-label': null,\n    'aria-labelledby': null\n};\n//# sourceMappingURL=Progress.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Progress/progress';\nimport { css } from '@patternfly/react-styles';\nexport const ProgressBar = (_a) => {\n    var { progressBarAriaProps, className = '', children = null, value } = _a, props = __rest(_a, [\"progressBarAriaProps\", \"className\", \"children\", \"value\"]);\n    return (React.createElement(\"div\", Object.assign({}, props, { className: css(styles.progressBar, className) }, progressBarAriaProps),\n        React.createElement(\"div\", { className: css(styles.progressIndicator), style: { width: `${value}%` } },\n            React.createElement(\"span\", { className: css(styles.progressMeasure) }, children))));\n};\nProgressBar.displayName = 'ProgressBar';\n//# sourceMappingURL=ProgressBar.js.map","import * as React from 'react';\nimport progressStyle from '@patternfly/react-styles/css/components/Progress/progress';\nimport { css } from '@patternfly/react-styles';\nimport { Tooltip } from '../Tooltip';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport TimesCircleIcon from '@patternfly/react-icons/dist/esm/icons/times-circle-icon';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport { ProgressBar } from './ProgressBar';\nexport var ProgressMeasureLocation;\n(function (ProgressMeasureLocation) {\n    ProgressMeasureLocation[\"outside\"] = \"outside\";\n    ProgressMeasureLocation[\"inside\"] = \"inside\";\n    ProgressMeasureLocation[\"top\"] = \"top\";\n    ProgressMeasureLocation[\"none\"] = \"none\";\n})(ProgressMeasureLocation || (ProgressMeasureLocation = {}));\nexport var ProgressVariant;\n(function (ProgressVariant) {\n    ProgressVariant[\"danger\"] = \"danger\";\n    ProgressVariant[\"success\"] = \"success\";\n    ProgressVariant[\"warning\"] = \"warning\";\n})(ProgressVariant || (ProgressVariant = {}));\nconst variantToIcon = {\n    danger: TimesCircleIcon,\n    success: CheckCircleIcon,\n    warning: ExclamationTriangleIcon\n};\nexport const ProgressContainer = ({ progressBarAriaProps, value, title = '', parentId, label = null, variant = null, measureLocation = ProgressMeasureLocation.top, isTitleTruncated = false, tooltipPosition }) => {\n    const StatusIcon = variantToIcon.hasOwnProperty(variant) && variantToIcon[variant];\n    const [tooltip, setTooltip] = React.useState('');\n    const onMouseEnter = (event) => {\n        if (event.target.offsetWidth < event.target.scrollWidth) {\n            setTooltip(title || event.target.innerHTML);\n        }\n        else {\n            setTooltip('');\n        }\n    };\n    const Title = (React.createElement(\"div\", { className: css(progressStyle.progressDescription, isTitleTruncated && typeof title === 'string' && progressStyle.modifiers.truncate), id: `${parentId}-description`, \"aria-hidden\": \"true\", onMouseEnter: isTitleTruncated && typeof title === 'string' ? onMouseEnter : null }, title));\n    return (React.createElement(React.Fragment, null,\n        tooltip ? (React.createElement(Tooltip, { position: tooltipPosition, content: tooltip, isVisible: true }, Title)) : (Title),\n        React.createElement(\"div\", { className: css(progressStyle.progressStatus), \"aria-hidden\": \"true\" },\n            (measureLocation === ProgressMeasureLocation.top || measureLocation === ProgressMeasureLocation.outside) && (React.createElement(\"span\", { className: css(progressStyle.progressMeasure) }, label || `${value}%`)),\n            variantToIcon.hasOwnProperty(variant) && (React.createElement(\"span\", { className: css(progressStyle.progressStatusIcon) },\n                React.createElement(StatusIcon, null)))),\n        React.createElement(ProgressBar, { role: \"progressbar\", progressBarAriaProps: progressBarAriaProps, value: value }, measureLocation === ProgressMeasureLocation.inside && `${value}%`)));\n};\nProgressContainer.displayName = 'ProgressContainer';\n//# sourceMappingURL=ProgressContainer.js.map","import { createIcon } from '../createIcon';\n\nexport const CheckCircleIconConfig = {\n  name: 'CheckCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const CheckCircleIcon = createIcon(CheckCircleIconConfig);\n\nexport default CheckCircleIcon;","import { createIcon } from '../createIcon';\n\nexport const SearchIconConfig = {\n  name: 'SearchIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const SearchIcon = createIcon(SearchIconConfig);\n\nexport default SearchIcon;","import { createIcon } from '../createIcon';\n\nexport const TimesCircleIconConfig = {\n  name: 'TimesCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const TimesCircleIcon = createIcon(TimesCircleIconConfig);\n\nexport default TimesCircleIcon;","import('./progress.css');\nexport default {\n  \"modifiers\": {\n    \"sm\": \"pf-m-sm\",\n    \"lg\": \"pf-m-lg\",\n    \"inside\": \"pf-m-inside\",\n    \"outside\": \"pf-m-outside\",\n    \"staticWidth\": \"pf-m-static-width\",\n    \"singleline\": \"pf-m-singleline\",\n    \"success\": \"pf-m-success\",\n    \"warning\": \"pf-m-warning\",\n    \"danger\": \"pf-m-danger\",\n    \"truncate\": \"pf-m-truncate\"\n  },\n  \"progress\": \"pf-c-progress\",\n  \"progressBar\": \"pf-c-progress__bar\",\n  \"progressDescription\": \"pf-c-progress__description\",\n  \"progressIndicator\": \"pf-c-progress__indicator\",\n  \"progressMeasure\": \"pf-c-progress__measure\",\n  \"progressStatus\": \"pf-c-progress__status\",\n  \"progressStatusIcon\": \"pf-c-progress__status-icon\",\n  \"themeDark\": \"pf-theme-dark\"\n};","import './FilterNotSupported.scss';\n\nimport {\n    EmptyState,\n    EmptyStateBody,\n    EmptyStateIcon\n} from '@patternfly/react-core/dist/esm/components/EmptyState';\n\nimport { Button } from '@patternfly/react-core/dist/esm/components/Button/Button';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport SearchIcon from '@patternfly/react-icons/dist/esm/icons/search-icon';\nimport { Title } from '@patternfly/react-core/dist/esm/components/Title/Title';\nimport messages from '../Messages';\nimport { useIntl } from 'react-intl';\n\nconst FilterNotSupported = ({ href, title, appName }) => {\n    const intl = useIntl();\n\n    return <EmptyState>\n        <EmptyStateIcon className='fontSizeOverride' icon={ SearchIcon } />\n        <Title headingLevel=\"h4\" size=\"md\">{title} </Title>\n        <EmptyStateBody>\n            {intl.formatMessage(appName !== 'Vulnerability' ? messages.functionalityNotSupported : messages.filteredResultsInApp, {\n                appname: <Button\n                    component=\"a\"\n                    href={ href }\n                    variant=\"link\"\n                    isInline>\n                    {appName}\n                </Button>\n            })}\n        </EmptyStateBody>\n    </EmptyState>;\n};\n\nFilterNotSupported.propTypes = {\n    appName: PropTypes.string,\n    href: PropTypes.string,\n    title: PropTypes.string\n};\n\nexport default FilterNotSupported;\n\n","import { UI_BASE, UI_BASE_OPENSHIFT } from '../../AppConstants';\n\nexport const RHSM_API_RESPONSE_DATA = 'data';\n\nexport const RHSM_API_RESPONSE_DATA_TYPES = {\n    CORES: 'cores',\n    DATE: 'date',\n    SOCKETS: 'sockets',\n    HAS_DATA: 'has_data',\n    HAS_INFINITE: 'has_infinite_quantity'\n};\n\nexport const RHSM_API_RESPONSE_ERROR_DATA = 'errors';\n\nexport const RHSM_API_RESPONSE_ERROR_DATA_TYPES = {\n    CODE: 'code'\n};\n\nexport const RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES = {\n    OPTIN: 'SUBSCRIPTIONS1004'\n};\n\nexport const RHSM_API_PRODUCT_ID_TYPES = {\n    RHEL: 'RHEL',\n    OPENSHIFT: 'OpenShift Container Platform'\n};\n\nexport const RHSM_API_QUERY_GRANULARITY_TYPES = {\n    DAILY: 'daily'\n};\n\nexport const SW_PATHS = {\n    APP: `${UI_BASE}/subscriptions/rhel`,\n    RHEL: `${UI_BASE}/subscriptions/rhel`,\n    OPENSHIFT: `${UI_BASE_OPENSHIFT}/subscriptions/openshift-container`\n};\n","import { RHSM_API_RESPONSE_DATA_TYPES } from './Constants';\n\n/**\n * Generate a range of dates, from the start of 'date' minus 'subtract' days, to the end of 'date'\n *\n * @param {Date} date\n * @param {number} subtract\n * @returns {{endDate: Date, startDate: Date}}\n */\nexport const setRangedDateTime = (date = new Date(), subtract = 1) => {\n    if (typeof(date) === 'string') {\n        date = new Date(date);\n    }\n\n    return {\n        startDate: new Date(new Date(date.setUTCHours(0, 0, 0, 0)).setUTCDate(date.getUTCDate() - subtract)),\n        endDate: new Date(date.setUTCHours(23, 59, 59, 999))\n    };\n};\n\n/**\n * Apply a set of schemas using either an array of objects in the\n * form of [{ madeUpKey: 'some_api_key' }], or an array of arrays\n * in the form of [['some_api_key','another_api_key']]\n *\n * @param {Array} schemas\n * @param {*} initialValue\n * @returns {Array}\n */\nexport const setResponseSchemas = (schemas = [], initialValue) =>\n    schemas.map(schema => {\n        const generated = {};\n        const arr = (Array.isArray(schema) && schema) || Object.values(schema);\n        arr.forEach(value => {\n            generated[value] = initialValue;\n        });\n        return generated;\n    });\n\n/**\n * Filter report and capacity data against expected API response. Apply percentage and date.\n *\n * @param {Array} report\n * @param {Array} capacity\n * @param {string} filter\n * @return {({}|{date: Date, report: (number|null|undefined), capacity: (number|null|undefined),\n *     percentage: (number|null|undefined)})}\n */\nexport const filterChartData = (report = [], capacity = [], filter) => {\n    const reportData = report.reverse();\n    const capacityData = capacity.reverse();\n    let chartData = {};\n    let recordIndex = null;\n\n    const [responseSchema = {}] = setResponseSchemas([\n        RHSM_API_RESPONSE_DATA_TYPES\n    ]);\n\n    const record = reportData.find((data, index) => {\n        recordIndex = index;\n        return data[RHSM_API_RESPONSE_DATA_TYPES.HAS_DATA] === true;\n    });\n\n    if (record) {\n        const date = record[RHSM_API_RESPONSE_DATA_TYPES.DATE];\n        chartData = {\n            date,\n            report: { ...responseSchema, ...record },\n            capacity: { ...responseSchema, ...capacityData[recordIndex] },\n            percentage: undefined\n        };\n\n        chartData.report = chartData.report[filter];\n        chartData.capacity = chartData.capacity[RHSM_API_RESPONSE_DATA_TYPES.HAS_INFINITE] ? null : chartData.capacity[filter];\n        let percentage = chartData.capacity === null ? null : ((chartData.report || 0) / (chartData.capacity || 0)) * 100;\n\n        if (Number.isNaN(percentage)) {\n            percentage = 0;\n        }\n\n        if (percentage === Infinity) {\n            percentage = undefined;\n        }\n\n        if (typeof percentage === 'number') {\n            percentage = Math.ceil(percentage);\n        }\n\n        chartData.percentage = percentage;\n    }\n\n    return chartData;\n};\n","import './ProgressTemplate.scss';\n\nimport { Progress, ProgressSize, ProgressVariant } from '@patternfly/react-core/dist/esm/components/Progress';\n\nimport React from 'react';\nimport propTypes from 'prop-types';\n\nexport const ProgressTemplate = ({ distance, label, value, title, variant }) => {\n    return (\n        <Progress\n            distance={ distance }\n            label={ label }\n            value={ value }\n            title={ title }\n            size={ ProgressSize.sm }\n            variant={ variant === 'danger' && ProgressVariant.danger }\n        />\n    );\n};\n\nProgressTemplate.propTypes = {\n    distance: propTypes.number,\n    label: propTypes.string,\n    value: propTypes.number,\n    title: propTypes.string,\n    variant: propTypes.string\n};\n\nexport default ProgressTemplate;\n","import './SubscriptionsUtilizedCard.scss';\n\nimport * as AppActions from '../../AppActions';\n\nimport { EmptyState, EmptyStateBody, EmptyStateVariant } from '@patternfly/react-core/dist/esm/components/EmptyState/index';\nimport {\n    RHSM_API_PRODUCT_ID_TYPES,\n    RHSM_API_QUERY_GRANULARITY_TYPES,\n    RHSM_API_RESPONSE_DATA,\n    RHSM_API_RESPONSE_DATA_TYPES,\n    RHSM_API_RESPONSE_ERROR_DATA,\n    RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES,\n    RHSM_API_RESPONSE_ERROR_DATA_TYPES,\n    SW_PATHS\n} from './Constants';\nimport React, { useEffect, useState } from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core/dist/esm/components/Tooltip/Tooltip';\nimport { filterChartData, setRangedDateTime } from './SubscriptionsUtilizedHelpers';\nimport { supportsGlobalFilter, workloadsPropType } from '../../Utilities/Common';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components';\n\nimport { Button } from '@patternfly/react-core/dist/esm/components/Button/Button';\nimport { EmptyStateSecondaryActions } from '@patternfly/react-core/dist/esm/components/EmptyState/EmptyStateSecondaryActions';\nimport { ExpandableCardTemplate } from '../../PresentationalComponents/Template/ExpandableCardTemplate';\nimport FailState from '../../PresentationalComponents/FailState/FailState';\nimport FilterNotSupported from '../../PresentationalComponents/FilterNotSupported';\nimport Immutable from 'seamless-immutable';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport { ProgressTemplate } from '../../ChartTemplates/Progress/ProgressTemplate';\nimport PropTypes from 'prop-types';\nimport { TemplateCardBody } from '../../PresentationalComponents/Template/TemplateCard';\nimport { connect } from 'react-redux';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\n\n/**\n * Subscriptions utilized card for showing the portion of Subscriptions used.\n */\nconst SubscriptionsUtilizedCard = ({ subscriptionsUtilizedProductOne, subscriptionsUtilizedProductOneFetch,\n    subscriptionsUtilizedProductOneFetchStatus, subscriptionsUtilizedProductTwo, subscriptionsUtilizedProductTwoFetch,\n    subscriptionsUtilizedProductTwoFetchStatus, workloads, selectedTags, SID }) => {\n\n    const [products, setProducts] = useState([]);\n    const intl = useIntl();\n\n    useEffect(() => {\n        const { startDate, endDate } = setRangedDateTime();\n        const options = {\n            granularity: RHSM_API_QUERY_GRANULARITY_TYPES.DAILY,\n            beginning: startDate.toISOString(),\n            ending: endDate.toISOString()\n        };\n\n        subscriptionsUtilizedProductOneFetch(RHSM_API_PRODUCT_ID_TYPES.OPENSHIFT, options);\n        subscriptionsUtilizedProductTwoFetch(RHSM_API_PRODUCT_ID_TYPES.RHEL, options);\n    }, [\n        subscriptionsUtilizedProductOneFetch,\n        subscriptionsUtilizedProductTwoFetch\n    ]);\n\n    useEffect(() => {\n        const chartData = { productError: false, productOptIn: false, productOne: {}, productTwo: {} };\n\n        if (subscriptionsUtilizedProductOneFetchStatus === 'fulfilled' || subscriptionsUtilizedProductTwoFetchStatus === 'fulfilled') {\n            const [productOneReport = {}, productOneCapacity = {}] = Immutable.asMutable(subscriptionsUtilizedProductOne, { deep: true }) || [];\n            const [productTwoReport = {}, productTwoCapacity = {}] = Immutable.asMutable(subscriptionsUtilizedProductTwo, { deep: true }) || [];\n\n            chartData.productOne = filterChartData(\n                productOneReport[RHSM_API_RESPONSE_DATA],\n                productOneCapacity[RHSM_API_RESPONSE_DATA],\n                RHSM_API_RESPONSE_DATA_TYPES.CORES\n            );\n            chartData.productTwo = filterChartData(\n                productTwoReport[RHSM_API_RESPONSE_DATA],\n                productTwoCapacity[RHSM_API_RESPONSE_DATA],\n                RHSM_API_RESPONSE_DATA_TYPES.SOCKETS\n            );\n        }\n\n        if (subscriptionsUtilizedProductOneFetchStatus === 'rejected' && subscriptionsUtilizedProductTwoFetchStatus === 'rejected') {\n            const [productOneError = {}] = subscriptionsUtilizedProductOne.data?.[RHSM_API_RESPONSE_ERROR_DATA] || [];\n            const [productTwoError = {}] = subscriptionsUtilizedProductOne.data?.[RHSM_API_RESPONSE_ERROR_DATA] || [];\n\n            chartData.productError = true;\n            chartData.productOptIn = productOneError[RHSM_API_RESPONSE_ERROR_DATA_TYPES.CODE] === RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES.OPTIN &&\n                productTwoError[RHSM_API_RESPONSE_ERROR_DATA_TYPES.CODE] === RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES.OPTIN;\n        }\n\n        setProducts(chartData);\n    }, [\n        subscriptionsUtilizedProductOne,\n        subscriptionsUtilizedProductTwo,\n        subscriptionsUtilizedProductOneFetchStatus,\n        subscriptionsUtilizedProductTwoFetchStatus\n    ]);\n\n    const { productError, productOptIn, productOne = {}, productTwo = {} } = products;\n\n    const productTwoTooltip = (\n        <ul>\n            <li>{intl.formatMessage(messages.subscriptionsUtilizedProductTwoReport, { totalReport: productTwo.report })}</li>\n            <li>{intl.formatMessage(messages.subscriptionsUtilizedProductCapacity, { totalCapacity: productTwo.capacity })}</li>\n            <li>{intl.formatMessage(messages.subscriptionsUtilizedProductDate,\n                { formattedDate: <DateFormat type='exact' date={ productTwo.date } /> })}</li>\n        </ul>\n    );\n    const productOneTooltip = (\n        <ul>\n            <li>{intl.formatMessage(messages.subscriptionsUtilizedProductOneReport, { totalReport: productOne.report })}</li>\n            <li>{intl.formatMessage(messages.subscriptionsUtilizedProductCapacity, { totalCapacity: productOne.capacity })}</li>\n            <li>{intl.formatMessage(messages.subscriptionsUtilizedProductDate,\n                { formattedDate: <DateFormat type='exact' date={ productOne.date } /> })}</li>\n        </ul>\n    );\n\n    const charts = [];\n    const generateCharts = ({ fetchStatus, percentage, title, tooltip, link }) => {\n        switch (fetchStatus) {\n            case 'pending':\n                charts.push(<Loading key={`su-loading-${title}`} />);\n                break;\n            case 'fulfilled':\n                if (percentage !== undefined && percentage !== null) {\n                    charts.push(\n                        <Tooltip\n                            key={`su-tooltip-${title}`}\n                            content={tooltip}\n                            position={TooltipPosition.top}\n                            distance={-10}\n                            entryDelay={200}\n                        >\n                            <Button className='insd-c-subscriptions-utilized__chart-link'\n                                variant='link'\n                                href={link} component='a'\n                            >\n                                <ProgressTemplate\n                                    title={title}\n                                    value={percentage}\n                                    label={`${percentage}%`}\n                                    variant={(percentage > 100 && 'danger') || 'info'}\n                                />\n                            </Button>\n                        </Tooltip>);\n                }\n\n                break;\n        }\n    };\n\n    generateCharts({\n        fetchStatus: subscriptionsUtilizedProductTwoFetchStatus,\n        percentage: productTwo.percentage,\n        title: intl.formatMessage(messages.subscriptionsUtilizedProductTwoTitle),\n        tooltip: productTwoTooltip,\n        link: SW_PATHS.RHEL\n    });\n\n    generateCharts({\n        fetchStatus: subscriptionsUtilizedProductOneFetchStatus,\n        percentage: productOne.percentage,\n        title: intl.formatMessage(messages.subscriptionsUtilizedProductOneTitle),\n        tooltip: productOneTooltip,\n        link: SW_PATHS.OPENSHIFT\n    });\n\n    if (productOne.percentage > productTwo.percentage && productOne.percentage > 100) {\n        charts.reverse();\n    }\n\n    return <ExpandableCardTemplate appName='SubscriptionsUtilized'\n        className='insd-m-toggle-right-on-md'\n        title={intl.formatMessage(messages.subscriptionsUtilizedTitle)}\n        isExpanded={JSON.parse(localStorage.getItem('dashboard_expanded_subwatch') || 'true')}\n        isExpandedCallback={isExpanded => localStorage.setItem('dashboard_expanded_subwatch', isExpanded)}\n        body={<TemplateCardBody>\n            {supportsGlobalFilter(selectedTags, workloads, SID) ?\n                <React.Fragment>\n                    {\n                        (productOptIn && <EmptyState className='insd-c-subscriptions-utilized__empty-state' variant={EmptyStateVariant.full}>\n                            <EmptyStateBody>\n                                {intl.formatMessage(messages.subscriptionsUtilizedLearnMore)}\n                            </EmptyStateBody>\n                            <EmptyStateSecondaryActions>\n                                <Button\n                                    className='insd-c-subscriptions-utilized__app-link'\n                                    variant='link'\n                                    href={SW_PATHS.APP}\n                                    component='a'\n                                >\n                                    {intl.formatMessage(messages.subscriptionsUtilizedLearnMoreAction)}\n                                </Button>\n                            </EmptyStateSecondaryActions>\n                        </EmptyState>) ||\n                        (productError && <FailState appName={intl.formatMessage(messages.subscriptionsUtilizedTitle)} isSmall />) ||\n                        (!charts.length && <EmptyState className='insd-c-subscriptions-utilized__empty-state' variant={EmptyStateVariant.full}>\n                            <EmptyStateBody>\n                                {intl.formatMessage(messages.subscriptionsUtilizedNoProductData)}\n                            </EmptyStateBody>\n                        </EmptyState>) ||\n                        charts\n                    }\n                </React.Fragment>\n                : <FilterNotSupported\n                    href={SW_PATHS.APP}\n                    title={intl.formatMessage(messages.filterNotApplicable)}\n                    appName={intl.formatMessage(messages.subscriptionsTitle)}\n                />\n            }\n        </TemplateCardBody>}\n    />;\n};\n\nSubscriptionsUtilizedCard.propTypes = {\n    intl: PropTypes.any,\n    subscriptionsUtilizedProductOne: PropTypes.array,\n    subscriptionsUtilizedProductOneFetch: PropTypes.func,\n    subscriptionsUtilizedProductOneFetchStatus: PropTypes.string,\n    subscriptionsUtilizedProductTwo: PropTypes.array,\n    subscriptionsUtilizedProductTwoFetch: PropTypes.func,\n    subscriptionsUtilizedProductTwoFetchStatus: PropTypes.string,\n    selectedTags: PropTypes.array,\n    workloads: workloadsPropType,\n    SID: PropTypes.arrayOf(PropTypes.string)\n};\n\nconst mapStateToProps = ({ DashboardStore }) => ({\n    subscriptionsUtilizedProductOne: DashboardStore.subscriptionsUtilizedProductOne,\n    subscriptionsUtilizedProductOneFetchStatus: DashboardStore.subscriptionsUtilizedProductOneFetchStatus,\n    subscriptionsUtilizedProductTwo: DashboardStore.subscriptionsUtilizedProductTwo,\n    subscriptionsUtilizedProductTwoFetchStatus: DashboardStore.subscriptionsUtilizedProductTwoFetchStatus,\n    selectedTags: DashboardStore.selectedTags,\n    workloads: DashboardStore.workloads,\n    SID: DashboardStore.SID\n});\n\nconst mapDispatchToProps = dispatch => ({\n    subscriptionsUtilizedProductOneFetch: (productId, options) => dispatch(AppActions.subscriptionsUtilizedProductOneFetch(productId, options)),\n    subscriptionsUtilizedProductTwoFetch: (productId, options) => dispatch(AppActions.subscriptionsUtilizedProductTwoFetch(productId, options))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SubscriptionsUtilizedCard);\n"],"names":["EmptyStateSecondaryActions","_a","children","className","props","Object","assign","displayName","ProgressSize","Progress","constructor","super","arguments","this","id","render","size","value","title","label","variant","measureLocation","min","max","valueText","isTitleTruncated","tooltipPosition","ariaLabel","ariaLabelledBy","progressBarAriaProps","console","warn","scaledValue","Math","floor","includes","lg","parentId","defaultProps","ProgressBar","style","width","ProgressMeasureLocation","ProgressVariant","variantToIcon","danger","success","warning","ProgressContainer","top","StatusIcon","hasOwnProperty","tooltip","setTooltip","Title","onMouseEnter","event","target","offsetWidth","scrollWidth","innerHTML","position","content","isVisible","outside","role","inside","CheckCircleIconConfig","name","height","svgPath","yOffset","xOffset","CheckCircleIcon","SearchIconConfig","SearchIcon","TimesCircleIconConfig","TimesCircleIcon","FilterNotSupported","href","appName","intl","useIntl","icon","headingLevel","formatMessage","messages","appname","component","isInline","propTypes","PropTypes","RHSM_API_RESPONSE_DATA_TYPES","CORES","DATE","SOCKETS","HAS_DATA","HAS_INFINITE","RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES","SW_PATHS","APP","UI_BASE","RHEL","OPENSHIFT","UI_BASE_OPENSHIFT","setResponseSchemas","schemas","initialValue","map","schema","generated","Array","isArray","values","forEach","filterChartData","report","capacity","filter","reportData","reverse","capacityData","chartData","recordIndex","responseSchema","record","find","data","index","date","percentage","undefined","Number","isNaN","Infinity","ceil","ProgressTemplate","distance","SubscriptionsUtilizedCard","subscriptionsUtilizedProductOne","subscriptionsUtilizedProductOneFetch","subscriptionsUtilizedProductOneFetchStatus","subscriptionsUtilizedProductTwo","subscriptionsUtilizedProductTwoFetch","subscriptionsUtilizedProductTwoFetchStatus","workloads","selectedTags","SID","useState","products","setProducts","useEffect","Date","subtract","startDate","setUTCHours","setUTCDate","getUTCDate","endDate","setRangedDateTime","options","granularity","beginning","toISOString","ending","productError","productOptIn","productOne","productTwo","Immutable","deep","productOneReport","productOneCapacity","productTwoReport","productTwoCapacity","productOneError","productTwoError","productTwoTooltip","totalReport","totalCapacity","formattedDate","DateFormat","type","productOneTooltip","charts","generateCharts","fetchStatus","link","push","Loading","key","Tooltip","TooltipPosition","entryDelay","Button","ExpandableCardTemplate","isExpanded","JSON","parse","localStorage","getItem","isExpandedCallback","setItem","body","TemplateCard","supportsGlobalFilter","EmptyState","EmptyStateVariant","EmptyStateBody","FailState","isSmall","length","workloadsPropType","connect","DashboardStore","dispatch","productId","AppActions"],"sourceRoot":""}