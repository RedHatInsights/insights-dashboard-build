{"version":3,"file":"js/1929.1682454543485.040f148ea26bf392cad0.js","mappings":"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","sources":["webpack:///./src/PresentationalComponents/IconList/IconList.js","webpack:///./src/PresentationalComponents/IconList/IconListItem.js","webpack:///./src/PresentationalComponents/MarketingBanner/MarketingBanner.js","webpack:///./src/PresentationalComponents/ZeroState/ZeroState.js","webpack:///./src/PresentationalComponents/RegisterSystemList.js","webpack:///./src/PresentationalComponents/ZeroState/zeroStateConstants.js","webpack:///./src/PresentationalComponents/ZeroState/ZeroStateBanner.js"],"sourcesContent":["import './_icon-list.scss';\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport propTypes from 'prop-types';\n\nconst IconList = ({ iconListStyle, className, children }) => {\n    const IconListClasses = classNames(className, 'insd-c-icon-list');\n\n    return <ul className={ IconListClasses } style={ iconListStyle }>\n        {children}\n    </ul>;\n};\n\nexport default IconList;\n\nIconList.propTypes = {\n    children: propTypes.any.isRequired,\n    iconListStyle: propTypes.string,\n    className: propTypes.string\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport propTypes from 'prop-types';\n\nconst IconListItem = ({ className, iconListItemStyle, children }) => {\n    const IconListItemClasses = classNames(className, 'insd-c-icon-list__item');\n\n    return <li className={ IconListItemClasses } style={ iconListItemStyle }>\n        {children}\n    </li>;\n};\n\nexport default IconListItem;\n\nIconListItem.propTypes = {\n    className: propTypes.string,\n    iconListItemStyle: propTypes.string,\n    children: propTypes.any.isRequired\n};\n","import './_marketing-banner.scss';\n\nimport { PageSection } from '@patternfly/react-core';\nimport React from 'react';\nimport classNames from 'classnames';\nimport propTypes from 'prop-types';\n\nconst MarketingBanner = ({ className, hasGraphic, graphicRight, dark1000, fullBleed, style, children }) => {\n\n    const MarketingBannerSectionClasses = classNames(\n        className,\n        'insd-c-marketing-banner',\n        { [`insd-m-with-graphic`]: hasGraphic },\n        { [`insd-m-graphic-right`]: graphicRight },\n        { [`insd-m-dark-1000 pf-m-dark-1000`]: dark1000 },\n        { [`insd-m-full-bleed`]: fullBleed }\n    );\n\n    return <PageSection\n        className={ MarketingBannerSectionClasses }\n        style={ style }\n        isWidthLimited>\n        {children}\n    </PageSection>;\n};\n\nexport default MarketingBanner;\n\nMarketingBanner.propTypes = {\n    children: propTypes.any.isRequired,\n    className: propTypes.string,\n    style: propTypes.any,\n    graphicRight: propTypes.bool,\n    hasGraphic: propTypes.bool,\n    dark1000: propTypes.bool,\n    fullBleed: propTypes.bool,\n    isWidthLimited: propTypes.bool\n};\n","import './_zero-state.scss';\n\nimport {\n    Button,\n    Card,\n    CardBody,\n    CardHeader,\n    List,\n    ListItem,\n    PageSection,\n    TextContent,\n    Title\n} from '@patternfly/react-core/dist/esm/components/index';\nimport { Flex, FlexItem } from '@patternfly/react-core/dist/esm/layouts/Flex/index';\nimport { Grid, GridItem } from '@patternfly/react-core/dist/esm/layouts/Grid/index';\nimport React, { useEffect, useState } from 'react';\nimport {\n    SortByDirection,\n    Table,\n    TableBody,\n    TableHeader,\n    sortable\n} from '@patternfly/react-table/dist/esm/components/Table/index';\n\nimport API from '../../Utilities/Api';\nimport IconList from '../IconList/IconList';\nimport IconListItem from '../IconList/IconListItem';\nimport ImgInsSmartMgmt from '../../images/img__ins-and-sm.png';\nimport MarketingBanner from '../MarketingBanner/MarketingBanner';\nimport { VULNERABILITIES_CVES_URL } from '../../AppConstants';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport ZeroStateBanner from './ZeroStateBanner';\n\n// eslint-disable-next-line no-unused-vars\nconst SortableTable = () => {\n    const columns = [\n        { title: 'CVE ID', transforms: [sortable] },\n        { title: 'Publish Date', transforms: [sortable] },\n        { title: 'Impact', transforms: [sortable] },\n        { title: 'CVSS Base Score', transforms: [sortable] }\n    ];\n    const [rows, setRows] = useState([]);\n    const [sortBy, setSort] = useState({});\n    const dateFormatter = (date) => {\n        const newDate = (new Date(date)).toString().split(' ');\n        return `${newDate[2]} ${newDate[1]} ${newDate[3]}`;\n    };\n\n    const rowBuilder = data => data.map(row => [{\n        title: <a href={ ` https://access.redhat.com/security/cve/${row.id}` }\n            target='_blank' rel='noreferrer'>{row.id}</a>\n    },\n    { title: <span>{dateFormatter(row.attributes.public_date)}</span> },\n    { title: <span>{row.attributes.impact}</span> },\n    { title: <span>{row.attributes.cvss3_score}</span> }]);\n    // const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        const fetchCves = async () => {\n            try {\n                const cves = (await API.get(VULNERABILITIES_CVES_URL, {}, { sort: '-public_date', limit: 4 })).data;\n                setRows(rowBuilder(cves.data));\n            } catch (error) {\n                throw `${error}`;\n            }\n        };\n\n        fetchCves();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const onSort = (_event, index, direction) => {\n        const sortedRows = rows.sort((a, b) => (a[index] < b[index] ? -1 : a[index] > b[index] ? 1 : 0));\n        setSort({ index, direction });\n        setRows(direction === SortByDirection.asc ? sortedRows : sortedRows.reverse());\n    };\n\n    return <Table aria-label='Sortable Table' sortBy={ sortBy } onSort={ onSort } cells={ columns } rows={ rows }>\n        <TableHeader />\n        <TableBody />\n    </Table>;\n};\n\nconst ZeroState = () => {\n    const intl = useIntl();\n    const { hideGlobalFilter } = useChrome();\n\n    useEffect(() => {\n        hideGlobalFilter?.();\n\n        return () => {\n            hideGlobalFilter?.(false);\n        };\n    }, []);\n\n    return <div className='insd-c-marketing-page'>\n        <ZeroStateBanner/>\n        <PageSection isWidthLimited>\n            <Grid lg={ 6 } hasGutter>\n                <GridItem>\n                    <Card style={ { height: '100%' } }>\n                        <CardHeader>\n                            <TextContent>\n                                <Title headingLevel='h2'>{intl.formatMessage(messages.zslblTitle)}</Title>\n                                <p>{intl.formatMessage(messages.zslblBody)}</p>\n                            </TextContent>\n                        </CardHeader>\n                        <CardBody>\n                            <IconList>\n                                <IconListItem>{intl.formatMessage(messages.zslblb1)}</IconListItem>\n                                <IconListItem>{intl.formatMessage(messages.zslblb2)}</IconListItem>\n                                <IconListItem>{intl.formatMessage(messages.zslblb3)}</IconListItem>\n                                <IconListItem>{intl.formatMessage(messages.zslblb4)}</IconListItem>\n                                <IconListItem>{intl.formatMessage(messages.zslblb5)}</IconListItem>\n                            </IconList>\n                        </CardBody>\n                    </Card>\n                </GridItem>\n                <GridItem>\n                    <Card style={ { height: '100%' } }>\n                        <CardHeader>\n                            <TextContent>\n                                <Title headingLevel='h2'>{intl.formatMessage(messages.zsrblTitle)}</Title>\n                                <p>{intl.formatMessage(messages.zsrblBody)}</p>\n                            </TextContent>\n                        </CardHeader>\n                        <CardBody>\n                            <IconList>\n                                <IconListItem>{intl.formatMessage(messages.zsrblb1)}</IconListItem>\n                                <IconListItem>{intl.formatMessage(messages.zsrblb2)}</IconListItem>\n                                <IconListItem>{intl.formatMessage(messages.zsrblb3)}</IconListItem>\n                                <IconListItem>{intl.formatMessage(messages.zsrblb4)}</IconListItem>\n                                <IconListItem>{intl.formatMessage(messages.zsrblb5)}</IconListItem>\n                            </IconList>\n                        </CardBody>\n                    </Card>\n                </GridItem>\n            </Grid>\n        </PageSection>\n        <MarketingBanner\n            isWidthLimited='true'\n            hasGraphic\n            graphicRight\n            dark1000\n            fullBleed\n            style={ {\n                '--ins-c-marketing-banner--graphic--width': '400px'\n            } }>\n            <Flex direction={ { default: 'column' } }>\n                <FlexItem spacer={ { default: 'spacerLg' } }>\n                    <Title headingLevel='h3' size='lg'>\n                        {intl.formatMessage(messages.dataPrivacyAndControlsTitle)}\n                    </Title>\n                </FlexItem>\n                <FlexItem spacer={ { default: 'spacerXl' } }>\n                    <p className='insd-c-width-limiter ins-c-text--black-400'\n                        style={ { '--insd-c-width-limiter--MaxWidth': '70ch' } }>\n                        {intl.formatMessage(messages.dataPrivacyAndControls)}\n                    </p>\n                </FlexItem>\n                <FlexItem>\n                    <Button\n                        component='a'\n                        target='_blank'\n                        rel='noreferrer'\n                        href={ `./security/insights` }>\n                        {intl.formatMessage(messages.securityRedirect)}\n                    </Button>\n                </FlexItem>\n            </Flex>\n        </MarketingBanner>\n        <PageSection isWidthLimited>\n            <Flex direction={ { default: 'column' } }>\n                <FlexItem spacer={ { default: 'spacerXl' } }>\n                    <TextContent>\n                        <Title headingLevel='h3'>\n                            {intl.formatMessage(messages.insightsandsatellite)}\n                        </Title>\n                        <div className='insd-c-width-limiter' style={ { '--insd-c-width-limiter--MaxWidth': '900px' } }>\n                            <p>{intl.formatMessage(messages.satellite)}</p>\n                        </div>\n                    </TextContent>\n                </FlexItem>\n                <FlexItem>\n                    <Grid hasGutter>\n                        <GridItem md={ 6 } lg={ 5 } mdRowSpan={ 3 }>\n                            <img src={ ImgInsSmartMgmt } alt='Insights Satellite' />\n                        </GridItem>\n                        <GridItem md={ 6 } lg={ 7 }>\n                            <div className='insd-c-width-limiter pf-u-pt-lg-on-lg' style={ { '--insd-c-width-limiter--MaxWidth': '600px' } }>\n                                <List>\n                                    <ListItem>{intl.formatMessage(messages.rhm1)}</ListItem>\n                                    <ListItem>{intl.formatMessage(messages.rhm2)}</ListItem>\n                                    <ListItem>{intl.formatMessage(messages.rhm3)}</ListItem>\n                                </List>\n                            </div>\n                        </GridItem>\n                        <GridItem md={ 6 } lg={ 7 } className='pf-u-pl-lg'>\n                            <Flex>\n                                <FlexItem>\n                                    <Button\n                                        className='pf-m-secondary'\n                                        component='a'\n                                        target='_blank'\n                                        rel='noreferrer'\n                                        href='https://www.redhat.com/en/technologies/management/satellite'>\n                                        {intl.formatMessage(messages.learnmore)}\n                                    </Button>\n                                </FlexItem>\n                                <FlexItem>\n                                    <Button\n                                        className='pf-m-secondary'\n                                        component='a'\n                                        target='_blank'\n                                        rel='noreferrer'\n                                        href='https://www.redhat.com/en/contact'>\n                                        {intl.formatMessage(messages.contactsales)}\n                                    </Button>\n                                </FlexItem>\n                            </Flex>\n                        </GridItem>\n                    </Grid>\n                </FlexItem>\n            </Flex>\n        </PageSection>\n    </div>;\n};\n\nexport default ZeroState;\n","/* eslint-disable react/jsx-key */\nimport React from 'react';\nimport propTypes from 'prop-types';\nimport { ClipboardCopy } from '@patternfly/react-core';\n\nconst registerSystemsList = (item) => {\n    return (\n        <React.Fragment>\n            <p>{item.intructions}</p>\n            <ClipboardCopy\n                hoverTip=\"Copy\"\n                clickTip=\"Copied\"\n                isReadOnly\n                className='pf-u-p-sm'\n            >\n                {item.command}\n            </ClipboardCopy>\n        </React.Fragment>\n    );\n};\n\nexport default registerSystemsList;\n\nregisterSystemsList.propTypes = {\n    item: propTypes.object\n};\n","import messages from '../../Messages';\n\nconst ADVISOR_ZERO_STATE = {\n    header: {},\n    otherApps: {}\n};\n\nconst COMPLIANCE_ZERO_STATE = {\n    header: {},\n    otherApps: {}\n};\n\nconst DRIFT_ZERO_STATE = {\n    header: {},\n    otherApps: {}\n};\n\nconst INSIGHTS_ZERO_STATE = {\n    header: {\n        description: messages.insightsDescription,\n        //An array like this would be passed into the app\n        commands: [\n            { intructions: 'Install the client on the RHEL system', command: '[root@server] testing install insights-clint' },\n            { intructions: 'Install the client on the RHEL system', command: '[root@server] testing install insights-clint' },\n            { intructions: 'Install the client on the RHEL system', command: '[root@server] testing install insights-clint' }\n        ],\n        bulletPoints: ['What problems do we solve', 'What solution do we provide']\n    },\n    otherApps: {}\n};\n\nconst PATCH_ZERO_STATE = {\n    header: {},\n    otherApps: {}\n};\n\nconst POLICIES_ZERO_STATE = {\n    header: {},\n    otherApps: {}\n};\n\nconst MALWARE_ZERO_STATE = {\n    header: {},\n    otherApps: {}\n};\n\nconst RESOURCE_OPTIMIZATION_ZERO_STATE = {\n    header: {},\n    otherApps: {}\n};\n\nconst VULNERABILITY_ZERO_STATE = {\n    header: {},\n    otherApps: {}\n};\n\nexport default {\n    ADVISOR_ZERO_STATE,\n    COMPLIANCE_ZERO_STATE,\n    DRIFT_ZERO_STATE,\n    INSIGHTS_ZERO_STATE,\n    PATCH_ZERO_STATE,\n    POLICIES_ZERO_STATE,\n    MALWARE_ZERO_STATE,\n    RESOURCE_OPTIMIZATION_ZERO_STATE,\n    VULNERABILITY_ZERO_STATE\n};\n","import '../ZeroState/_zero-state.scss';\n\nimport {\n    Button,\n    Title\n} from '@patternfly/react-core/dist/esm/components/index';\nimport { Flex, FlexItem } from '@patternfly/react-core/dist/esm/layouts/Flex/index';\nimport { Grid, GridItem } from '@patternfly/react-core/dist/esm/layouts/Grid/index';\nimport React, { useEffect, useState } from 'react';\n\nimport IconList from '../IconList/IconList';\nimport IconListItem from '../IconList/IconListItem';\nimport MarketingBanner from '../MarketingBanner/MarketingBanner';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport registerSystemsList from '../RegisterSystemList';\nimport propTypes from 'prop-types';\nimport zeroStateConstants from './zeroStateConstants';\n\nconst ZeroStateBanner = ({\n    appName = 'Insights',\n    description = zeroStateConstants[`${appName.toUpperCase()}_ZERO_STATE`].header.description,\n    commands = zeroStateConstants[`${appName.toUpperCase()}_ZERO_STATE`].header.commands,\n    bulletPoints = zeroStateConstants[`${appName.toUpperCase()}_ZERO_STATE`].header.bulletPoints\n}) => {\n    const intl = useIntl();\n    const { hideGlobalFilter } = useChrome();\n\n    useEffect(() => {\n        hideGlobalFilter?.();\n\n        return () => {\n            hideGlobalFilter?.(false);\n        };\n    }, [hideGlobalFilter]);\n\n    const [registerButton, setRegisterButton] = useState(false);\n    const updateRegisterButton = ()=> setRegisterButton(!registerButton);\n\n    return <div className='insd-c-marketing-page'>\n        <MarketingBanner\n            dark1000\n            style={ {\n                '--ins-c-marketing-banner--graphic--width-on-md': '200px',\n                '--ins-c-marketing-banner--graphic--width-on-xl': '400px'\n            } }>\n            <Grid lg={ 6 } hasGutter className='pf-u-pt-xl pf-u-pb-xl'>\n                <GridItem className='pf-u-pl-lg pf-u-pr-lg' >\n                    <Flex direction={ { default: 'column' } }>\n                        <FlexItem>\n                            <Title headingLevel='h1' size='4xl'>\n                                {appName}\n                            </Title>\n                        </FlexItem>\n                        <FlexItem spacer={ { default: 'spacerXl' } }>\n                            <div className='insd-c-width-limiter' style={ { '--insd-c-width-limiter--MaxWidth': '600px' } }>\n                                <p >{intl.formatMessage(description)}</p>\n                            </div>\n                        </FlexItem>\n                        <FlexItem>\n                            <IconList className='pf-u-pl-sm ' >\n                                {bulletPoints.map(item => (\n                                    <IconListItem key={item} >{item}</IconListItem>\n                                ))}\n                            </IconList>\n                        </FlexItem>\n                    </Flex>\n                </GridItem>\n\n                <GridItem style={{ backgroundColor: '#fff' }} >\n                    {registerButton ?\n                        <Flex className='pf-u-p-lg' direction={{ default: 'column' }} style={{ color: '#151515' }}>\n                            <a className='pf-u-pb-sm' onClick={updateRegisterButton} >Go Back</a>\n                            {commands.map(item => (\n                                registerSystemsList(item)\n                            ))}\n                        </Flex>\n                        : <Flex\n                            direction={ { default: 'column' } }\n                            alignItems={{ default: 'alignItemsCenter' }}\n                            alignSelf={{ default: 'alignSelfCenter' }} >\n                            <FlexItem className='pf-u-pt-lg'>\n                                <Title headingLevel='h1' size='2xl' style={{ color: '#151515' }}>\n                                    {intl.formatMessage(messages.startUsiningInisghts)}\n                                </Title>\n                            </FlexItem>\n                            <FlexItem>\n                                <div className='insd-c-width-limiter' style={ { '--insd-c-width-limiter--MaxWidth': '600px', color: '#151515' } }>\n                                    <p >{intl.formatMessage(messages.getStartedInsights)}</p>\n                                </div>\n                            </FlexItem>\n                            <FlexItem>\n                                <Button\n                                    onClick={updateRegisterButton}\n                                    className='pf-u-p-md pf-u-font-size-md'> Register your systems</Button>\n                            </FlexItem>\n                            <FlexItem>\n                                <a\n                                    component='a'\n                                    target='_blank'\n                                    rel='noreferrer'\n                                    href='https://www.redhat.com/en/technologies/management/insights' >{intl.formatMessage(messages.notMember)}</a>\n                            </FlexItem>\n                        </Flex>}\n                </GridItem>\n\n            </Grid>\n        </MarketingBanner>\n\n    </div>;\n};\n\nexport default ZeroStateBanner;\n\nZeroStateBanner.propTypes = {\n    appName: propTypes.string,\n    description: propTypes.object,\n    commands: propTypes.array,\n    bulletPoints: propTypes.array\n};\n"],"names":["IconList","iconListStyle","className","children","IconListClasses","classNames","style","propTypes","IconListItem","iconListItemStyle","IconListItemClasses","MarketingBanner","hasGraphic","graphicRight","dark1000","fullBleed","MarketingBannerSectionClasses","PageSection","isWidthLimited","intl","useIntl","hideGlobalFilter","useChrome","useEffect","ZeroStateBanner","Grid","lg","hasGutter","GridItem","Card","height","CardHeader","TextContent","Title","headingLevel","formatMessage","messages","CardBody","Flex","direction","default","FlexItem","spacer","size","Button","component","target","rel","href","md","mdRowSpan","src","ImgInsSmartMgmt","alt","List","ListItem","registerSystemsList","item","intructions","ClipboardCopy","hoverTip","clickTip","isReadOnly","command","ADVISOR_ZERO_STATE","header","otherApps","COMPLIANCE_ZERO_STATE","DRIFT_ZERO_STATE","INSIGHTS_ZERO_STATE","description","commands","bulletPoints","PATCH_ZERO_STATE","POLICIES_ZERO_STATE","MALWARE_ZERO_STATE","RESOURCE_OPTIMIZATION_ZERO_STATE","VULNERABILITY_ZERO_STATE","appName","zeroStateConstants","toUpperCase","useState","registerButton","setRegisterButton","updateRegisterButton","map","key","backgroundColor","color","onClick","alignItems","alignSelf"],"sourceRoot":""}