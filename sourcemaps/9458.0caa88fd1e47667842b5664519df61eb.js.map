{"version":3,"file":"js/9458.1673641129352.e65383b3fcbbcf439923.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/components/EmptyState/EmptyStateSecondaryActions.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/grip-vertical-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/search-icon.js","webpack:///./src/PresentationalComponents/FilterNotSupported.js","webpack:///./src/SmartComponents/Compliance/ComplianceCard.js"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/EmptyState/empty-state';\nexport const EmptyStateSecondaryActions = (_a) => {\n    var { children = null, className = '' } = _a, props = __rest(_a, [\"children\", \"className\"]);\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.emptyStateSecondary, className) }, props), children));\n};\nEmptyStateSecondaryActions.displayName = 'EmptyStateSecondaryActions';\n//# sourceMappingURL=EmptyStateSecondaryActions.js.map","import { createIcon } from '../createIcon';\n\nexport const GripVerticalIconConfig = {\n  name: 'GripVerticalIcon',\n  height: 512,\n  width: 320,\n  svgPath: 'M96 32H32C14.33 32 0 46.33 0 64v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM288 32h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const GripVerticalIcon = createIcon(GripVerticalIconConfig);\n\nexport default GripVerticalIcon;","import { createIcon } from '../createIcon';\n\nexport const SearchIconConfig = {\n  name: 'SearchIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const SearchIcon = createIcon(SearchIconConfig);\n\nexport default SearchIcon;","import './FilterNotSupported.scss';\n\nimport {\n    EmptyState,\n    EmptyStateBody,\n    EmptyStateIcon\n} from '@patternfly/react-core/dist/esm/components/EmptyState';\n\nimport { Button } from '@patternfly/react-core/dist/esm/components/Button/Button';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport SearchIcon from '@patternfly/react-icons/dist/esm/icons/search-icon';\nimport { Title } from '@patternfly/react-core/dist/esm/components/Title/Title';\nimport messages from '../Messages';\nimport { useIntl } from 'react-intl';\n\nconst FilterNotSupported = ({ href, title, appName }) => {\n    const intl = useIntl();\n\n    return <EmptyState>\n        <EmptyStateIcon className='fontSizeOverride' icon={ SearchIcon } />\n        <Title headingLevel=\"h4\" size=\"md\">{title} </Title>\n        <EmptyStateBody>\n            {intl.formatMessage(appName !== 'Vulnerability' ? messages.functionalityNotSupported : messages.filteredResultsInApp, {\n                appname: <Button\n                    component=\"a\"\n                    href={ href }\n                    variant=\"link\"\n                    isInline>\n                    {appName}\n                </Button>\n            })}\n        </EmptyStateBody>\n    </EmptyState>;\n};\n\nFilterNotSupported.propTypes = {\n    appName: PropTypes.string,\n    href: PropTypes.string,\n    title: PropTypes.string\n};\n\nexport default FilterNotSupported;\n\n","import './ComplianceCard.scss';\n\nimport * as AppActions from '../../AppActions';\n\nimport {\n    Button,\n    DataList,\n    DataListCell,\n    DataListItem,\n    DataListItemCells,\n    DataListItemRow,\n    EmptyState,\n    EmptyStateBody,\n    EmptyStateSecondaryActions,\n    EmptyStateVariant,\n    Title\n} from '@patternfly/react-core/dist/esm/components';\nimport { Flex, FlexItem } from '@patternfly/react-core/dist/esm/layouts';\nimport React, { useEffect } from 'react';\nimport { TemplateCardActions, TemplateCardBody } from '../../PresentationalComponents/Template/TemplateCard';\nimport { supportsGlobalFilter, workloadsPropType } from '../../Utilities/Common';\n\nimport { ExpandableCardTemplate } from '../../PresentationalComponents/Template/ExpandableCardTemplate';\nimport FailState from '../../PresentationalComponents/FailState/FailState';\nimport FilterNotSupported from '../../PresentationalComponents/FilterNotSupported';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport PropTypes from 'prop-types';\nimport { UI_BASE } from '../../AppConstants';\nimport { connect } from 'react-redux';\nimport messages from '../../Messages';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/RouterParams';\nimport { useIntl } from 'react-intl';\n\nconst ComplianceCard = ({ fetchCompliance, complianceFetchStatus, complianceSummary, selectedTags, workloads, SID }) => {\n    useEffect(() => {\n        fetchCompliance();\n    }, [fetchCompliance]);\n\n    const intl = useIntl();\n\n    /*\n        * Returns the first two -- if there are at least two entries -- items as a shallow copy of\n        * complianceSummary\n        */\n    const getTopThreePolicies = function (compliance) {\n        const complianceTopThree = compliance.data.length > 1 ? compliance.data.slice(0, 3) :\n            compliance.data.slice();\n\n        return complianceTopThree;\n    };\n\n    return (\n        <ExpandableCardTemplate\n            appName='Compliance'\n            className='ins-c-card__compliance insd-m-toggle-right-on-md'\n            { ...complianceFetchStatus !== 'pending' ? {\n                'data-ouia-safe': true\n            } : { 'data-ouia-safe': false } }\n            title={ intl.formatMessage(messages.complianceTitle) }\n            isExpanded={JSON.parse(localStorage.getItem('dashboard_expanded_compliance') || 'true')}\n            isExpandedCallback={isExpanded => localStorage.setItem('dashboard_expanded_compliance', isExpanded)}\n            header={\n                <TemplateCardActions />\n            }\n            body={\n                <TemplateCardBody>\n                    {supportsGlobalFilter(selectedTags, workloads, SID) ?\n                        <React.Fragment>\n                            {complianceFetchStatus === 'fulfilled' &&\n                                (Array.isArray(complianceSummary.data) &&\n                                    (complianceSummary.data.length > 0 ? <React.Fragment>\n                                        <DataList className='insd-m-no-padding insd-m-no-top-border' isCompact>\n                                            {getTopThreePolicies(complianceSummary).map((policy, index) =>\n                                                <DataListItem key={ index }>\n                                                    <DataListItemRow>\n                                                        <DataListItemCells\n                                                            dataListCells={[\n                                                                <DataListCell key={ index }>\n                                                                    <Flex\n                                                                        direction={ { default: 'column' } }\n                                                                        spaceItems={ { default: 'spaceItemsNone' } }\n                                                                    >\n                                                                        <Button\n                                                                            id={ `compliance-link-${index + 1}` }\n                                                                            className='ins-c-compliance__policy-link'\n                                                                            component='a'\n                                                                            href={ `${UI_BASE}/compliance/reports/${policy.id}` }\n                                                                            variant='link'\n                                                                            isInline\n                                                                        >\n                                                                            {policy.attributes.name}\n                                                                        </Button>\n                                                                        <Flex>\n                                                                            <FlexItem flex={ { default: 'flex_1' } }>\n                                                                                <p>RHEL { policy.attributes.os_version }</p>\n                                                                            </FlexItem>\n                                                                            <Flex flex={{ default: 'None' }}>\n                                                                                <FlexItem>\n                                                                                    {intl.formatMessage(messages.compliantHostCount,\n                                                                                        { count: policy.attributes.test_result_host_count }\n                                                                                    )}\n                                                                                </FlexItem>\n                                                                                <FlexItem>\n                                                                                    {intl.formatMessage(messages.compliantScore,\n                                                                                        {\n                                                                                            score: +(policy.attributes.test_result_host_count &&\n                                                                                                (100 * (\n                                                                                                    policy.attributes.compliant_host_count /\n                                                                                                    policy.attributes.test_result_host_count\n                                                                                                ))\n                                                                                            ).toFixed(1)\n                                                                                        }\n                                                                                    )}\n                                                                                </FlexItem>\n                                                                            </Flex>\n                                                                        </Flex>\n                                                                    </Flex>\n                                                                </DataListCell>\n                                                            ]}\n                                                        />\n                                                    </DataListItemRow>\n                                                </DataListItem>\n                                            )}\n                                        </DataList>\n                                        <Button\n                                            className='ins-c-compliance__policy-link'\n                                            component='a'\n                                            href={ `${UI_BASE}/compliance/reports/` }\n                                            variant='link'\n                                            isInline\n                                        >\n                                            {complianceFetchStatus === 'fulfilled' && Array.isArray(complianceSummary.data) &&\n                                                complianceSummary.data.length - 3 >= 1 &&\n                                                `${complianceSummary.data.length - 3} more reports`\n                                            }\n                                        </Button>\n                                    </React.Fragment> : (\n                                        <EmptyState className='ins-c-compliance__empty-state' variant={ EmptyStateVariant.full }>\n                                            <Title headingLevel='h5' size='md'>\n                                                {intl.formatMessage(messages.complianceEmptyStateTitle)}\n                                            </Title>\n                                            <EmptyStateBody>\n                                                {intl.formatMessage(messages.complianceEmptyStateBody)}\n                                            </EmptyStateBody>\n                                            <EmptyStateSecondaryActions>\n                                                <Button\n                                                    variant='link'\n                                                    href={ `${UI_BASE}/compliance/scappolicies/new` }\n                                                    component='a'\n                                                >\n                                                    {intl.formatMessage(messages.complianceEmptyStateAction1)}\n                                                </Button>\n                                                <Button\n                                                    variant='link'\n                                                    component='a'\n                                                    href='https://www.open-scap.org/getting-started/'\n                                                >\n                                                    {intl.formatMessage(messages.complianceEmptyStateAction2)}\n                                                </Button>\n                                            </EmptyStateSecondaryActions>\n                                        </EmptyState>\n                                    ))\n                                )\n                            }\n                            {complianceFetchStatus === 'pending' && (<Loading />)}\n                            {complianceFetchStatus === 'rejected' && <FailState appName='Compliance' />}\n                        </React.Fragment>\n                        : <FilterNotSupported\n                            href={ `${UI_BASE}/compliance/` }\n                            title={ intl.formatMessage(messages.filterNotApplicable) }\n                            appName={ intl.formatMessage(messages.complianceTitle) }\n                        />\n                    }\n                </TemplateCardBody>\n            }\n        />\n    );\n};\n\nComplianceCard.propTypes = {\n    fetchCompliance: PropTypes.func,\n    complianceSummary: PropTypes.object,\n    complianceFetchStatus: PropTypes.string,\n    intl: PropTypes.any,\n    selectedTags: PropTypes.array,\n    workloads: workloadsPropType,\n    SID: PropTypes.arrayOf(PropTypes.string)\n};\n\nconst mapStateToProps = ({ DashboardStore }) => ({\n    complianceSummary: DashboardStore.complianceSummary,\n    complianceFetchStatus: DashboardStore.complianceFetchStatus,\n    selectedTags: DashboardStore.selectedTags,\n    workloads: DashboardStore.workloads,\n    SID: DashboardStore.SID\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchCompliance: (url) => dispatch(AppActions.fetchComplianceSummary(url))\n});\n\nexport default routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ComplianceCard));\n"],"names":["EmptyStateSecondaryActions","_a","children","className","props","Object","assign","displayName","GripVerticalIconConfig","name","height","width","svgPath","yOffset","xOffset","GripVerticalIcon","SearchIconConfig","SearchIcon","FilterNotSupported","href","title","appName","intl","useIntl","icon","headingLevel","size","formatMessage","messages","appname","component","variant","isInline","propTypes","PropTypes","ComplianceCard","fetchCompliance","complianceFetchStatus","complianceSummary","selectedTags","workloads","SID","useEffect","compliance","isExpanded","JSON","parse","localStorage","getItem","isExpandedCallback","setItem","header","body","supportsGlobalFilter","Array","isArray","data","length","isCompact","slice","map","policy","index","key","dataListCells","direction","default","spaceItems","id","UI_BASE","attributes","flex","os_version","count","test_result_host_count","score","compliant_host_count","toFixed","EmptyStateVariant","workloadsPropType","routerParams","connect","DashboardStore","dispatch","url","AppActions"],"sourceRoot":""}