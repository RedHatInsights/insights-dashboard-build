{"version":3,"file":"js/4988.1678896572646.fb4acb2368ca7501cee7.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-tokens/dist/esm/global_disabled_color_100.js","webpack:///./src/ChartTemplates/PieChart/PieChartTemplate.js","webpack:///./src/SmartComponents/PatchManager/PatchManagerCard.js"],"sourcesContent":["export const global_disabled_color_100 = {\n  \"name\": \"--pf-global--disabled-color--100\",\n  \"value\": \"#6a6e73\",\n  \"var\": \"var(--pf-global--disabled-color--100)\"\n};\nexport default global_disabled_color_100;","import './PieChartTemplate.scss';\n\nimport { ChartLabel } from '@patternfly/react-charts/dist/esm/components/ChartLabel/ChartLabel';\nimport { ChartLegend } from '@patternfly/react-charts/dist/esm/components/ChartLegend/ChartLegend';\nimport { ChartPie } from '@patternfly/react-charts/dist/esm/components/ChartPie/ChartPie';\nimport React from 'react';\nimport propTypes from 'prop-types';\n\nexport const PieChart = ({ ariaDesc, ariaTitle, constrainToVisibleArea, data, legendData, padding, height, width, legendOrientation,\n    colorScale, legend, legendWidth, legendHeight, legendClick }) => {\n    // eslint-disable-next-line react/prop-types\n    const LegendLabel = ({ index, ...rest }) => <a id={ `${ariaTitle.toLowerCase().replace(/\\s/g, '-')}-legend-${index + 1}` }\n        href={ legendClick[index] } className=\"pf-c-button pf-m-link pf-m-inline\"><ChartLabel { ...rest } /></a>;\n\n    return (\n        <div className=\"insd-c-pie-chart__row\">\n            <div style={ { width, height, position: 'relative' } }>\n                <ChartPie\n                    ariaDesc={ ariaDesc }\n                    ariaTitle={ ariaTitle }\n                    constrainToVisibleArea={ constrainToVisibleArea }\n                    data={ data }\n                    height={ height }\n                    labels={ ({ datum }) => `${datum.x}: ${datum.y}` }\n                    padding={ padding }\n                    width={ width }\n                    colorScale={ colorScale }\n                />\n                <table tabIndex=\"0\" className=\"visually-hidden\" aria-label={ ariaTitle + ` data` }>\n                    <tbody>\n                        {data.map((d, index) => {\n                            return [\n                                <tr key={ index }>\n                                    <td>{d.y}</td>\n                                    <td>{d.x}</td>\n                                </tr>\n                            ];\n                        })}\n                    </tbody>\n                </table>\n            </div>\n            {legend &&\n                <div className=\"insd-c-pie-chart__legend\" aria-label=\"Chart legend\" style={ { width: legendWidth, height: legendHeight } }>\n                    <ChartLegend\n                        height={ legendHeight }\n                        width={ legendWidth }\n                        fontSize={ 14 }\n                        data={ legendData }\n                        rowGutter={ { top: -5, bottom: -5 } }\n                        orientation={ legendOrientation }\n                        labelComponent={ legendClick && < LegendLabel /> }\n                    />\n                </div>\n            }\n        </div>\n    );\n};\n\nPieChart.propTypes = {\n    ariaDesc: propTypes.string,\n    ariaTitle: propTypes.string,\n    constrainToVisibleArea: propTypes.bool,\n    data: propTypes.array,\n    legendData: propTypes.array,\n    padding: propTypes.object,\n    height: propTypes.number,\n    width: propTypes.number,\n    legendOrientation: propTypes.string,\n    colorScale: propTypes.array,\n    legend: propTypes.bool,\n    legendWidth: propTypes.number,\n    legendHeight: propTypes.number,\n    legendClick: propTypes.any\n};\n\nexport default PieChart;\n","import './PatchManagerCard.scss';\n\nimport { Flex } from '@patternfly/react-core/dist/esm/layouts';\nimport { PATCHMAN_ID, UI_BASE } from '../../AppConstants';\nimport React, { useEffect } from 'react';\nimport { TemplateCard, TemplateCardBody, TemplateCardHeader } from '../../PresentationalComponents/Template/TemplateCard';\nimport { capitalize, globalFilters, workloadsPropType } from '../../Utilities/Common';\nimport { patchmanFetchAdvisories, patchmanFetchSystems } from '../../AppActions';\n\nimport { Button } from '@patternfly/react-core/dist/esm/components';\nimport { ExpandableCardTemplate } from '../../PresentationalComponents/Template/ExpandableCardTemplate';\nimport FailState from '../../PresentationalComponents/FailState/FailState';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport { PieChart } from '../../ChartTemplates/PieChart/PieChartTemplate';\nimport PropTypes from 'prop-types';\nimport chart_color_blue_200 from '@patternfly/react-tokens/dist/esm/chart_color_blue_200';\nimport chart_color_blue_300 from '@patternfly/react-tokens/dist/esm/chart_color_blue_300';\nimport chart_color_blue_400 from '@patternfly/react-tokens/dist/esm/chart_color_blue_400';\nimport { connect } from 'react-redux';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/esm/global_disabled_color_100';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\n\n/**\n * Card for showing the systems and ratios of current advisories.\n */\nconst PatchManagerCard = ({\n    systems, systemsStatus, fetchSystems,\n    advisories, advisoriesStatus, fetchAdvisories,\n    selectedTags, workloads, SID\n}) => {\n    const intl = useIntl();\n    const isLoaded = [systemsStatus, advisoriesStatus].every(item => item === 'fulfilled');\n    const { security, bugfix: bugs, enhancement: enhancements } = advisories || {};\n    const pieChartData = [\n        {\n            x: intl.formatMessage(messages.securityAdvisories, { count: security }), y: security, fill: chart_color_blue_400.value,\n            url: `${UI_BASE}/${PATCHMAN_ID}/advisories?offset=0&filter%5Badvisory_type_name%5D=security`\n        },\n        {\n            x: intl.formatMessage(messages.bugfixAdvisories, { count: bugs }), y: bugs, fill: chart_color_blue_300.value,\n            url: `${UI_BASE}/${PATCHMAN_ID}/advisories?offset=0&filter%5Badvisory_type_name%5D=bugfix`\n        },\n        {\n            x: intl.formatMessage(messages.enhancementAdvisories, { count: enhancements }), y: enhancements, fill: chart_color_blue_200.value,\n            url: `${UI_BASE}/${PATCHMAN_ID}/advisories?offset=0&filter%5Badvisory_type_name%5D=enhancement`\n        }\n    ];\n\n    const pieChartPadding = { bottom: 0, left: 0, right: 0, top: 0 };\n    const colorScale = [\n        chart_color_blue_200.value,\n        chart_color_blue_300.value,\n        chart_color_blue_400.value\n    ];\n\n    useEffect(() => {\n        const options = { ...globalFilters(workloads, SID), ...selectedTags?.length > 0 && { tags: selectedTags } };\n        fetchSystems(options);\n        fetchAdvisories(options);\n    }, [fetchSystems, fetchAdvisories, workloads, SID, selectedTags]);\n\n    if (systemsStatus === 'rejected') {\n        return (\n            <TemplateCard appName='PatchManager' className={'insd-c-dashboard__card--Patch'}>\n                <TemplateCardHeader subtitle={intl.formatMessage(messages.patchTitle)} />\n                <TemplateCardBody><FailState appName='Patch' isSmall /></TemplateCardBody>\n            </TemplateCard>\n        );\n    }\n\n    return <ExpandableCardTemplate appName='PatchManager'\n        isExpanded={JSON.parse(localStorage.getItem('dashboard_expanded_patch') || 'true')}\n        isExpandedCallback={isExpanded => localStorage.setItem('dashboard_expanded_patch', isExpanded)}\n        title={intl.formatMessage(messages.patchTitle)}\n        className={'insd-c-dashboard__card--Patch insd-m-toggle-right-on-md'}\n        body={<TemplateCardBody>\n            {!isLoaded ? <Loading /> :\n                <Flex direction={{ default: 'column' }}>\n                    <Button\n                        component='a'\n                        href={`${UI_BASE}/${PATCHMAN_ID}/systems`}\n                        variant='link'\n                        isInline>\n                        <span>{intl.formatMessage(messages.systemsAffected, { count: systems })}</span>\n                    </Button>\n                    <div className=\"insd-c-dashboard__card-chart-container\">\n                        <div className=\"insd-c-dashboard__card-pie-chart\">\n                            <PieChart\n                                colorScale={isLoaded && (security === 0 && bugs === 0 && enhancements === 0) ? [global_disabled_color_100.value]\n                                    : colorScale}\n                                ariaDesc='Patch systems chart'\n                                ariaTitle='Patch systems chart'\n                                constrainToVisibleArea={true}\n                                data={pieChartData}\n                                labels={({ datum }) => `${datum.x}: ${datum.y}`}\n                                padding={pieChartPadding}\n                            />\n                        </div>\n                        <div className='insd-c-dashboard__card-pie-chart-legend'>\n                            <div className=\"insd-c-legend\">\n                                {pieChartData.map((item, index) =>\n                                    <a key={item.url} href={item.url} className='insd-c-legend__item'>\n                                        <span className='insd-c-legend__dot'\n                                            style={{ '--insd-c-legend__dot--BackgroundColor': `${colorScale[index]}` }} />\n                                        <span className='insd-c-legend__text'>{item.y} {capitalize(item.x)}</span>\n                                    </a>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                </Flex>\n            }\n        </TemplateCardBody>}\n    />;\n};\n\nPatchManagerCard.propTypes = {\n    systems: PropTypes.any,\n    systemsStatus: PropTypes.string,\n    fetchSystems: PropTypes.func,\n    advisories: PropTypes.any,\n    advisoriesStatus: PropTypes.string,\n    fetchAdvisories: PropTypes.func,\n    selectedTags: PropTypes.arrayOf(PropTypes.string),\n    workloads: workloadsPropType,\n    SID: PropTypes.arrayOf(PropTypes.string)\n};\n\nexport default connect(\n    ({ DashboardStore }) => ({\n        systems: DashboardStore.patchmanSystems,\n        systemsStatus: DashboardStore.patchmanSystemsStatus,\n        advisories: DashboardStore.patchmanAdvisories,\n        advisoriesStatus: DashboardStore.patchmanAdvisoriesStatus,\n        selectedTags: DashboardStore.selectedTags,\n        workloads: DashboardStore.workloads,\n        SID: DashboardStore.SID\n    }),\n    dispatch => ({\n        fetchSystems: (options) => dispatch(patchmanFetchSystems(options)),\n        fetchAdvisories: (options) => dispatch(patchmanFetchAdvisories(options))\n    })\n)(PatchManagerCard);\n"],"names":["global_disabled_color_100","PieChart","ariaDesc","ariaTitle","constrainToVisibleArea","data","legendData","padding","height","width","legendOrientation","colorScale","legend","legendWidth","legendHeight","legendClick","LegendLabel","index","rest","id","toLowerCase","replace","href","className","style","position","labels","datum","x","y","tabIndex","map","d","key","fontSize","rowGutter","top","bottom","orientation","labelComponent","propTypes","PatchManagerCard","systems","systemsStatus","fetchSystems","advisories","advisoriesStatus","fetchAdvisories","selectedTags","workloads","SID","intl","useIntl","isLoaded","every","item","security","bugs","bugfix","enhancements","enhancement","pieChartData","formatMessage","messages","count","fill","chart_color_blue_400","url","UI_BASE","PATCHMAN_ID","chart_color_blue_300","chart_color_blue_200","useEffect","options","globalFilters","length","tags","appName","subtitle","isSmall","isExpanded","JSON","parse","localStorage","getItem","isExpandedCallback","setItem","title","body","direction","default","component","variant","isInline","left","right","capitalize","PropTypes","workloadsPropType","connect","DashboardStore","patchmanSystems","patchmanSystemsStatus","patchmanAdvisories","patchmanAdvisoriesStatus","dispatch","patchmanFetchSystems","patchmanFetchAdvisories"],"sourceRoot":""}