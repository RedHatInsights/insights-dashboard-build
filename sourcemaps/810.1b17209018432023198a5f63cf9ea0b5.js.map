{"version":3,"file":"js/810.9f8dc8151d8c3e108ba6.js","mappings":"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","sources":["webpack:///./src/PresentationalComponents/Template/ExpandableCardTemplate.js","webpack:///./src/PresentationalComponents/DownloadReport/DownloadReport.js","webpack:///./src/PresentationalComponents/Template/TemplateCard.js"],"sourcesContent":["import { Card, CardExpandableContent, CardHeader, CardTitle, Divider, Title } from '@patternfly/react-core/dist/esm/components';\nimport React, { useState } from 'react';\n\nimport propTypes from 'prop-types';\n\nexport const ExpandableCardTemplate = ({ className, appName, title, header, body, hasDivider, isExpanded = true, isExpandedCallback, ...props }) => {\n    const [expanded, setExpanded] = useState(isExpanded);\n\n    return <Card\n        className={`insd-c-dashboard__card insd-c-dashboard__card--${appName} ${className}`}\n        id={`insd-c-dashboard__card--${appName}`}\n        isExpanded={expanded}\n        {...props}>\n        {hasDivider && <Divider inset={{ md: 'insetLg' }} />}\n        <CardHeader\n            onExpand={() => { setExpanded(!expanded); isExpandedCallback && isExpandedCallback(!expanded); }}\n            toggleButtonProps={{\n                id: `insd-c-dashboard__card-title--${appName}-toggle-button`,\n                'aria-label': 'Details',\n                'aria-labelledby': `insd-c-dashboard__card-title--${appName} toggle-button`,\n                'aria-expanded': expanded\n            }}>\n            {title && <CardTitle>\n                <Title headingLevel=\"h2\" size=\"lg\">\n                    {title}\n                </Title>\n            </CardTitle>\n            }\n            {header}\n        </CardHeader>\n        <CardExpandableContent>\n            {body}\n        </CardExpandableContent>\n    </Card>;\n};\n\nExpandableCardTemplate.propTypes = {\n    appName: propTypes.string,\n    className: propTypes.string,\n    title: propTypes.any,\n    header: propTypes.any,\n    body: propTypes.any,\n    hasDivider: propTypes.any,\n    isExpanded: propTypes.bool,\n    isExpandedCallback: propTypes.func,\n    footer: propTypes.any\n};\n","import './DownloadReport.scss';\n\nimport { Button } from '@patternfly/react-core/dist/esm/components/Button/Button';\nimport DownloadIcon from '@patternfly/react-icons/dist/esm/icons/download-icon';\nimport React from 'react';\n\nexport const DownloadReport = () => (\n    <Button className=\"insd-c-button-report-download\" variant=\"link\" icon={ <DownloadIcon /> }>\n        Report\n    </Button>\n);\n\nexport default DownloadReport;\n","import './TemplateCard.scss';\n\nimport {\n    Button,\n    Card,\n    CardActions,\n    CardBody,\n    CardFooter,\n    CardHeader,\n    CardTitle,\n    Title\n} from '@patternfly/react-core/dist/esm/components/';\n\nimport { DownloadIcon } from '@patternfly/react-icons';\nimport DownloadReport from '../DownloadReport/DownloadReport';\nimport IconInline from '../IconInline/IconInline';\nimport React from 'react';\nimport propTypes from 'prop-types';\n\nexport const TemplateCard = ({ appName, children, ...props }) => (\n    <Card className={ `insd-c-dashboard__card insd-c-dashboard__card--${appName}` } { ...props }>\n        { children }\n    </Card>\n);\n\nTemplateCard.propTypes = {\n    appName: propTypes.string,\n    children: propTypes.any\n};\n\nexport const TemplateCardHead = ({ children, ...props }) => (\n    <CardHeader { ...props }>\n        {children}\n    </CardHeader>\n);\n\nTemplateCardHead.propTypes = {\n    children: propTypes.any\n};\n\nexport const TemplateCardActions = ({ children, downloadReport, iconInlineMessage, iconInlineState, ...props }) => (\n    <CardActions { ...props }>\n        { iconInlineMessage &&\n            <IconInline message={ iconInlineMessage } state={ iconInlineState }/>\n        }\n        { downloadReport &&\n            <DownloadReport />\n        }\n        {children}\n    </CardActions>\n);\n\nTemplateCardActions.propTypes = {\n    children: propTypes.any,\n    downloadReport: propTypes.any,\n    iconInlineMessage: propTypes.string,\n    iconInlineState: propTypes.string\n};\n\nexport const TemplateCardHeader = ({ title, onDownload, subtitle, children, ...props }) => (\n    <CardHeader className='insd-c-dashboard__card--header'  { ...props }>\n        <CardTitle>\n            <Title headingLevel='h4' size='lg'>\n                { title }\n            </Title>\n            { subtitle &&\n                <div>\n                    { subtitle }\n                </div>\n            }\n        </CardTitle>\n        <CardActions>\n            { children }\n            { onDownload &&\n                <Button variant='link' icon={ <DownloadIcon/> } onClick={ onDownload }>Report</Button>\n            }\n        </CardActions>\n    </CardHeader>\n);\n\nTemplateCardHeader.propTypes = {\n    title: propTypes.string,\n    titleClassName: propTypes.string,\n    subtitle: propTypes.any,\n    children: propTypes.any,\n    onDownload: propTypes.func\n};\n\nexport const TemplateCardBody = ({ children, isHorizontalLayout, ...props }) => (\n    <CardBody className={ `insd-c-dashboard__card--body ${isHorizontalLayout ? ' insd-m-horizontal' : ''}` } { ...props }>\n        { children }\n    </CardBody>\n);\n\nTemplateCardBody.propTypes = {\n    isHorizontalLayout: propTypes.any,\n    children: propTypes.any\n};\n\nexport const TemplateCardFooter = ({ children, ...props }) => (\n    <CardFooter className='insd-c-dashboard__card--footer' { ...props }>\n        { children }\n    </CardFooter>\n);\n\nTemplateCardFooter.propTypes = {\n    children: propTypes.any\n};\n"],"names":["ExpandableCardTemplate","className","appName","title","header","body","hasDivider","isExpanded","isExpandedCallback","props","useState","expanded","setExpanded","id","inset","md","onExpand","toggleButtonProps","headingLevel","size","propTypes","footer","Button","variant","icon","TemplateCard","children","Card","TemplateCardActions","downloadReport","iconInlineMessage","iconInlineState","CardActions","IconInline","message","state","TemplateCardHeader","onDownload","subtitle","CardHeader","CardTitle","Title","onClick","titleClassName","TemplateCardBody","isHorizontalLayout","CardBody"],"sourceRoot":""}