{"version":3,"file":"js/988.0bc1ca668080bd6de50b.js","mappings":"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","sources":["webpack:///./src/SmartComponents/PatchManager/PatchManagerCard.js"],"sourcesContent":["import './PatchManagerCard.scss';\n\nimport { Flex } from '@patternfly/react-core/dist/esm/layouts';\nimport { PATCHMAN_ID, UI_BASE } from '../../AppConstants';\nimport React, { useEffect } from 'react';\nimport { TemplateCard, TemplateCardBody, TemplateCardHeader } from '../../PresentationalComponents/Template/TemplateCard';\nimport { capitalize, sapFilter, workloadsPropType } from '../../Utilities/Common';\nimport { patchmanFetchBugs, patchmanFetchEnhancements, patchmanFetchSecurity, patchmanFetchSystems } from '../../AppActions';\n\nimport { Button } from '@patternfly/react-core/dist/esm/components';\nimport { ExpandableCardTemplate } from '../../PresentationalComponents/Template/ExpandableCardTemplate';\nimport FailState from '../../PresentationalComponents/FailState/FailState';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport { PieChart } from '../../ChartTemplates/PieChart/PieChartTemplate';\nimport PropTypes from 'prop-types';\nimport chart_color_blue_200 from '@patternfly/react-tokens/dist/esm/chart_color_blue_200';\nimport chart_color_blue_300 from '@patternfly/react-tokens/dist/esm/chart_color_blue_300';\nimport chart_color_blue_400 from '@patternfly/react-tokens/dist/esm/chart_color_blue_400';\nimport { connect } from 'react-redux';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/esm/global_disabled_color_100';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\n\n/**\n * Operating systems card for showing the ratio of operating systems used.\n */\nconst PatchManagerCard = ({ systems, systemsStatus, fetchSystems, fetchSecurity, securityStatus,\n    security, bugs, fetchBugs, bugsStatus, enhancements, fetchEnhancements, enhancementsStatus,\n    selectedTags, workloads, SID }) => {\n    const intl = useIntl();\n    const isLoaded = [systemsStatus, securityStatus, bugsStatus, enhancementsStatus].every(item => item === 'fulfilled');\n    const pieChartData = [\n        {\n            x: intl.formatMessage(messages.securityAdvisories, { count: security }), y: security, fill: chart_color_blue_400.value,\n            url: `${UI_BASE}/${PATCHMAN_ID}/advisories?offset=0&filter%5Badvisory_type_name%5D=security`\n        },\n        {\n            x: intl.formatMessage(messages.bugfixAdvisories, { count: bugs }), y: bugs, fill: chart_color_blue_300.value,\n            url: `${UI_BASE}/${PATCHMAN_ID}/advisories?offset=0&filter%5Badvisory_type_name%5D=bugfix`\n        },\n        {\n            x: intl.formatMessage(messages.enhancementAdvisories, { count: enhancements }), y: enhancements, fill: chart_color_blue_200.value,\n            url: `${UI_BASE}/${PATCHMAN_ID}/advisories?offset=0&filter%5Badvisory_type_name%5D=enhancement`\n        }\n    ];\n\n    const pieChartPadding = { bottom: 0, left: 0, right: 0, top: 0 };\n    const colorScale = [\n        chart_color_blue_200.value,\n        chart_color_blue_300.value,\n        chart_color_blue_400.value\n    ];\n\n    useEffect(() => {\n        const options = { ...sapFilter(workloads, SID), ...selectedTags?.length > 0 && { tags: selectedTags } };\n        fetchSystems(options);\n        fetchSecurity(options);\n        fetchBugs(options);\n        fetchEnhancements(options);\n    }, [fetchSystems, fetchSecurity, fetchBugs, fetchEnhancements, workloads, SID, selectedTags]);\n\n    if (systemsStatus === 'rejected') {\n        return (\n            <TemplateCard appName='PatchManager' className={'insd-c-dashboard__card--Patch'}>\n                <TemplateCardHeader subtitle={intl.formatMessage(messages.patchTitle)} />\n                <TemplateCardBody><FailState appName='Patch' isSmall /></TemplateCardBody>\n            </TemplateCard>\n        );\n    }\n\n    return <ExpandableCardTemplate appName='PatchManager'\n        isExpanded={JSON.parse(localStorage.getItem('dashboard_expanded_patch') || 'true')}\n        isExpandedCallback={isExpanded => localStorage.setItem('dashboard_expanded_patch', isExpanded)}\n        title={intl.formatMessage(messages.patchTitle)}\n        className={'insd-c-dashboard__card--Patch insd-m-toggle-right-on-md'}\n        body={<TemplateCardBody>\n            {!isLoaded ? <Loading /> :\n                <Flex direction={{ default: 'column' }}>\n                    <Button\n                        component='a'\n                        href={`${UI_BASE}/${PATCHMAN_ID}/systems`}\n                        variant='link'\n                        isInline>\n                        <span>{intl.formatMessage(messages.systemsAffected, { count: systems })}</span>\n                    </Button>\n                    <div className=\"insd-c-dashboard__card-chart-container\">\n                        <div className=\"insd-c-dashboard__card-pie-chart\">\n                            <PieChart\n                                colorScale={isLoaded && (security === 0 && bugs === 0 && enhancements === 0) ? [global_disabled_color_100.value]\n                                    : colorScale}\n                                ariaDesc='Patch systems chart'\n                                ariaTitle='Patch systems chart'\n                                constrainToVisibleArea={true}\n                                data={pieChartData}\n                                labels={({ datum }) => `${datum.x}: ${datum.y}`}\n                                padding={pieChartPadding}\n                            />\n                        </div>\n                        <div className='insd-c-dashboard__card-pie-chart-legend'>\n                            <div className=\"insd-c-legend\">\n                                {pieChartData.map((item, index) =>\n                                    <a key={item.url} href={item.url} className='insd-c-legend__item'>\n                                        <span className='insd-c-legend__dot'\n                                            style={{ '--insd-c-legend__dot--BackgroundColor': `${colorScale[index]}` }} />\n                                        <span className='insd-c-legend__text'>{item.y} {capitalize(item.x)}</span>\n                                    </a>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                </Flex>\n            }\n        </TemplateCardBody>}\n    />;\n};\n\nPatchManagerCard.propTypes = {\n    systems: PropTypes.any,\n    systemsStatus: PropTypes.string,\n    fetchSystems: PropTypes.func,\n    fetchSecurity: PropTypes.func,\n    security: PropTypes.any,\n    securityStatus: PropTypes.string,\n    fetchBugs: PropTypes.func,\n    bugs: PropTypes.any,\n    bugsStatus: PropTypes.string,\n    fetchEnhancements: PropTypes.func,\n    enhancements: PropTypes.any,\n    enhancementsStatus: PropTypes.string,\n    selectedTags: PropTypes.arrayOf(PropTypes.string),\n    workloads: workloadsPropType,\n    SID: PropTypes.arrayOf(PropTypes.string)\n};\n\nexport default connect(\n    ({ DashboardStore }) => ({\n        systems: DashboardStore.patchmanSystems,\n        systemsStatus: DashboardStore.patchmanSystemsStatus,\n        security: DashboardStore.patchmanSecurity,\n        securityStatus: DashboardStore.patchmanSecurityStatus,\n        bugs: DashboardStore.patchmanBugs,\n        bugsStatus: DashboardStore.patchmanBugsStatus,\n        enhancements: DashboardStore.patchmanEnhancements,\n        enhancementsStatus: DashboardStore.patchmanEnhancementsStatus,\n        selectedTags: DashboardStore.selectedTags,\n        workloads: DashboardStore.workloads,\n        SID: DashboardStore.SID\n    }),\n    dispatch => ({\n        fetchSystems: (options) => dispatch(patchmanFetchSystems(options)),\n        fetchSecurity: (options) => dispatch(patchmanFetchSecurity(options)),\n        fetchBugs: (options) => dispatch(patchmanFetchBugs(options)),\n        fetchEnhancements: (options) => dispatch(patchmanFetchEnhancements(options))\n    })\n)(PatchManagerCard);\n"],"names":["PatchManagerCard","systems","systemsStatus","fetchSystems","fetchSecurity","securityStatus","security","bugs","fetchBugs","bugsStatus","enhancements","fetchEnhancements","enhancementsStatus","selectedTags","workloads","SID","intl","useIntl","isLoaded","every","item","pieChartData","x","formatMessage","messages","count","y","fill","chart_color_blue_400","url","UI_BASE","PATCHMAN_ID","chart_color_blue_300","chart_color_blue_200","colorScale","useEffect","options","sapFilter","length","tags","appName","className","subtitle","isSmall","isExpanded","JSON","parse","localStorage","getItem","isExpandedCallback","setItem","title","body","direction","default","component","href","variant","isInline","global_disabled_color_100","ariaDesc","ariaTitle","constrainToVisibleArea","data","labels","datum","padding","bottom","left","right","top","map","index","key","style","capitalize","propTypes","PropTypes","workloadsPropType","connect","DashboardStore","patchmanSystems","patchmanSystemsStatus","patchmanSecurity","patchmanSecurityStatus","patchmanBugs","patchmanBugsStatus","patchmanEnhancements","patchmanEnhancementsStatus","dispatch","patchmanFetchSystems","patchmanFetchSecurity","patchmanFetchBugs","patchmanFetchEnhancements"],"sourceRoot":""}