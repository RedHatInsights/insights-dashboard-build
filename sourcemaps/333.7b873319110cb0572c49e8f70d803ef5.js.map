{"version":3,"file":"js/333.1642410177827.9327e54c36c57d1230db.js","mappings":"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","sources":["webpack:///./src/PresentationalComponents/PageLoading/PageLoading.js","webpack:///./src/Routes.js","webpack:///./src/App.js","webpack:///./src/AppActions.js","webpack:///./src/AppConstants.js","webpack:///./src/PresentationalComponents/Loading/Loading.js","webpack:///./src/Store/index.js","webpack:///./src/AppReducer.js","webpack:///./src/Utilities/Api.js"],"sourcesContent":["import './PageLoading.scss';\n\nimport {\n    EmptyState,\n    EmptyStateIcon,\n    Title\n} from '@patternfly/react-core/dist/esm/components';\n\nimport React from 'react';\nimport { Spinner } from '@patternfly/react-core/dist/esm/components/Spinner';\n\nconst PageLoading = () => <EmptyState>\n    <EmptyStateIcon variant=\"container\" component={ Spinner } />\n    <Title size=\"lg\" headingLevel=\"h4\">\n        Loading\n    </Title>\n</EmptyState>;\n\nexport default PageLoading;\n","import React, { Suspense, lazy } from 'react';\n\nimport Loading from './PresentationalComponents/Loading/Loading';\nimport { Route } from 'react-router-dom';\n\nconst Dashboard = lazy(() => import(/* webpackChunkName: 'dashboard-route' */ './PresentationalComponents/Dashboard/Dashboard'));\n\nexport const Routes = () => <Route exact path='/'rootClass='dashboard'\n    component={() => <Suspense fallback={<Loading />}> <Dashboard /> </Suspense>}  />;\n","import './App.scss';\n\nimport React, { createContext, useEffect, useState } from 'react';\nimport { batch, useDispatch } from 'react-redux';\nimport { setSIDs, setSelectedTags, setWorkloads } from './AppActions';\n\nimport API from './Utilities/Api';\nimport { INVENTORY_TOTAL_FETCH_URL } from './AppConstants';\nimport PageLoading from './PresentationalComponents/PageLoading/PageLoading';\nimport PropTypes from 'prop-types';\nimport { Routes } from './Routes';\n\nexport const PermissionContext = createContext();\n\nconst App = (props) => {\n    const dispatch = useDispatch();\n    const [permissions, setPermissions] = useState({\n        customPolicies: false,\n        compliance: false,\n        drift: false,\n        advisor: false,\n        remediations: false,\n        patch: false,\n        vulnerability: false,\n        subscriptions: false,\n        ros: false\n    });\n    const [isOrgAdmin, setIsOrgAdmin] = useState(false);\n    const [arePermissionsReady, setArePermissionReady] = useState(false);\n    const [hasSystems, setHasSystems] = useState();\n\n    async function initChrome() {\n        insights.chrome.init();\n        insights.chrome.identifyApp('dashboard');\n\n        insights.chrome?.globalFilterScope?.('insights');\n        if (insights.chrome?.globalFilterScope) {\n            insights.chrome.on('GLOBAL_FILTER_UPDATE', ({ data }) => {\n                const [workloads, SID, selectedTags] = insights.chrome?.mapGlobalFilter?.(data, false, true);\n                batch(() => {\n                    dispatch(setWorkloads(workloads));\n                    dispatch(setSIDs(SID));\n                    dispatch(setSelectedTags(selectedTags));\n                });\n            });\n        }\n\n        // wait for auth first, otherwise the call to RBAC may 401\n        await window.insights.chrome.auth.getUser().then(\n            user => setIsOrgAdmin(user.identity.user.is_org_admin)\n        );\n        // TODO: Update this function to query multiple apps instead of empty request (limited by API)\n        insights.chrome.getUserPermissions().then(\n            dashboardPermissions => {\n                const permissionList = dashboardPermissions.length && dashboardPermissions.map(permissions => permissions.permission);\n                if (permissionList.length) {\n                    setPermissions({\n                        customPolicies: permissionList.includes('custom-policies:*:*'),\n                        compliance: permissionList.includes('compliance:*:*'),\n                        drift: permissionList.includes('drift:*:*'),\n                        advisor: permissionList.includes('insights:*:*') ||\n                            permissionList.includes('advisor:*:*'),\n                        remediations: permissionList.includes('remediations:*:*') ||\n                            permissionList.includes('remediations:remediation:*') ||\n                            permissionList.includes('remediations:remediation:read') ||\n                            permissionList.includes('remediations:*:read'),\n                        patch: permissionList.includes('patch:*:*'),\n                        vulnerability: permissionList.includes('vulnerability:*:*'),\n                        subscriptions: permissionList.includes('subscriptions:*:*'),\n                        ros: permissionList.includes('ros:*:*') ||\n                            permissionList.includes('ros:*:read')\n                    });\n                }\n\n                setArePermissionReady(true);\n            }\n        );\n        try {\n            const { total } = (await API.get(`${INVENTORY_TOTAL_FETCH_URL}`))?.data || { total: 0 };\n            setHasSystems(total > 0);\n            total === 0 && insights.chrome.hideGlobalFilter();\n        } catch (e) {\n            insights.chrome.hideGlobalFilter();\n        }\n    }\n\n    useEffect(() => {\n        initChrome();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        arePermissionsReady ?\n            <PermissionContext.Provider\n                value={ {\n                    customPolicies: permissions.customPolicies,\n                    compliance: permissions.compliance,\n                    drift: permissions.drift,\n                    advisor: permissions.advisor,\n                    remediations: permissions.remediations,\n                    patch: permissions.patch,\n                    vulnerability: permissions.vulnerability,\n                    subscriptions: permissions.subscriptions,\n                    ros: permissions.ros,\n                    isOrgAdmin,\n                    hasSystems\n                } }>\n                <Routes childProps={ props } />\n            </PermissionContext.Provider>\n            : <PageLoading />\n    );\n};\n\nApp.propTypes = {\n    history: PropTypes.object\n};\n\nexport default App;\n","import * as ActionTypes from './AppConstants';\n\nimport API from './Utilities/Api';\n\nconst fetchData = async (url, headers, options) => {\n    await window.insights.chrome.auth.getUser();\n    return (await API.get(url, headers, options)).data;\n};\n\nexport const fetchComplianceSummary = (options) => ({\n    type: ActionTypes.COMPLIANCE_FETCH,\n    payload: fetchData(ActionTypes.COMPLIANCE_FETCH_URL, {}, options)\n});\n\nexport const fetchVulnerabilities = (options) => ({\n    type: ActionTypes.VULNERABILITIES_FETCH,\n    payload: fetchData(ActionTypes.VULNERABILITIES_FETCH_URL, {}, options)\n});\n\nexport const advisorFetchStatsRecs = (options) => ({\n    type: ActionTypes.ADVISOR_STATS_REC_FETCH,\n    payload: fetchData(ActionTypes.ADVISOR_STATS_REC_FETCH_URL, {}, options)\n});\n\nexport const advisorFetchStatsSystems = (options) => ({\n    type: ActionTypes.ADVISOR_STATS_SYSTEMS_FETCH,\n    payload: fetchData(ActionTypes.ADVISOR_STATS_SYSTEMS_FETCH_URL, {}, options)\n});\n\nexport const advisorFetchIncidents = (options) => ({\n    type: ActionTypes.ADVISOR_INCIDENTS_FETCH,\n    payload: fetchData(ActionTypes.ADVISOR_INCIDENTS_FETCH_URL, {}, options)\n});\n\nexport const patchmanFetchSystems = (options) => ({\n    type: ActionTypes.PATCHMAN_SYSTEMS_FETCH,\n    payload: fetchData(ActionTypes.PATCHMAN_SYSTEMS_FETCH_URL, {}, options)\n});\n\nexport const patchmanFetchSecurity = (options) => ({\n    type: ActionTypes.PATCHMAN_SECURITY_FETCH,\n    payload: fetchData(ActionTypes.PATCHMAN_SECURITY_FETCH_URL, {}, options)\n});\n\nexport const patchmanFetchBugs = (options) => ({\n    type: ActionTypes.PATCHMAN_BUGS_FETCH,\n    payload: fetchData(ActionTypes.PATCHMAN_BUGS_FETCH_URL, {}, options)\n});\n\nexport const patchmanFetchEnhancements = (options) => ({\n    type: ActionTypes.PATCHMAN_ENHANCEMENTS_FETCH,\n    payload: fetchData(ActionTypes.PATCHMAN_ENHANCEMENTS_FETCH_URL, {}, options)\n});\n\nexport const subscriptionsUtilizedProductOneFetch = (id, options) => ({\n    type: ActionTypes.SUBSCRIPTIONS_UTILIZED_PRODUCT_ONE_FETCH,\n    payload: Promise.all([\n        fetchData(`${ActionTypes.SUBSCRIPTIONS_UTILIZED_REPORT_FETCH_URL}${id}`, {}, options),\n        fetchData(`${ActionTypes.SUBSCRIPTIONS_UTILIZED_CAPACITY_FETCH_URL}${id}`, {}, options)\n    ])\n});\n\nexport const subscriptionsUtilizedProductTwoFetch = (id, options) => ({\n    type: ActionTypes.SUBSCRIPTIONS_UTILIZED_PRODUCT_TWO_FETCH,\n    payload: Promise.all([\n        fetchData(`${ActionTypes.SUBSCRIPTIONS_UTILIZED_REPORT_FETCH_URL}${id}`, {}, options),\n        fetchData(`${ActionTypes.SUBSCRIPTIONS_UTILIZED_CAPACITY_FETCH_URL}${id}`, {}, options)\n    ])\n});\n\nexport const fetchInventorySummary = (options) => ({\n    type: ActionTypes.INVENTORY_FETCH,\n    payload: fetchData(ActionTypes.INVENTORY_FETCH_URL, {}, options)\n});\n\nexport const fetchInventoryTotalSummary = (options) => ({\n    type: ActionTypes.INVENTORY_TOTAL_FETCH,\n    payload: fetchData(ActionTypes.INVENTORY_TOTAL_FETCH_URL, {}, options)\n});\n\nexport const fetchInventoryStaleSummary = (options) => ({\n    type: ActionTypes.INVENTORY_STALE_FETCH,\n    payload: fetchData(ActionTypes.INVENTORY_STALE_FETCH_URL, {}, options)\n});\n\nexport const fetchInventoryWarningSummary = (options) => ({\n    type: ActionTypes.INVENTORY_WARNING_FETCH,\n    payload: fetchData(ActionTypes.INVENTORY_WARNING_FETCH_URL, {}, options)\n});\n\nexport const fetchRemediations = (options) => ({\n    type: ActionTypes.REMEDIATIONS_FETCH,\n    payload: fetchData(ActionTypes.REMEDIATIONS_FETCH_URL, {}, options)\n});\n\nexport const fetchRosIsConfigured = (options) => ({\n    type: ActionTypes.ROS_IS_CONFIGURED_FETCH,\n    payload: fetchData(ActionTypes.ROS_IS_CONFIGURED_FETCH_URL, {}, options)\n});\n\nexport const setSelectedTags = (tags) => ({\n    type: ActionTypes.SELECTED_TAGS_SET,\n    payload: tags\n});\n\nexport const setWorkloads = (data) => ({\n    type: ActionTypes.WORKLOADS_SET,\n    payload: data\n});\n\nexport const setSIDs = (data) => ({\n    type: ActionTypes.SID_SET,\n    payload: data\n});\n","/* eslint-disable max-len */\n\nconst BASE_URL = '/api';\nexport const UI_BASE = './insights';\nexport const UI_BASE_OPENSHIFT = './openshift';\nexport const SELECTED_TAGS_SET = 'SELECTED_TAGS_SET';\nexport const WORKLOADS_SET = 'WORKLOADS_SET';\nexport const SID_SET = 'SID_SET';\nexport const SEVERITY_MAP = {\n    critical: 4,\n    important: 3,\n    moderate: 2,\n    low: 1\n};\n\n// Compliance App Constants\nexport const COMPLIANCE_FETCH = 'COMPLIANCE_SUMMARY_FETCH';\nexport const COMPLIANCE_SEARCH = encodeURIComponent('(has_policy_test_results=true AND external=false) OR (has_policy=false AND has_test_results=true)');\nexport const COMPLIANCE_FETCH_URL = `${BASE_URL}/compliance/profiles?search=${COMPLIANCE_SEARCH}`;\n\n// Vulnerability App Constants\nconst VULN_BASE = '/vulnerability/v1';\nexport const VULNERABILITIES_FETCH = 'VULNERABILITIES_FETCH';\nexport const VULNERABILITIES_FETCH_URL = (`${BASE_URL}${VULN_BASE}/dashboard`);\nexport const VULNERABILITIES_CVES_URL = `${BASE_URL}/vulnerability/v1/vulnerabilities/cves`;\n\n// Advisor App Constants\nconst ADV_BASE = '/insights/v1';\nexport const ADVISOR_STATS_REC_FETCH_URL = `${BASE_URL}${ADV_BASE}/stats/rules/`;\nexport const ADVISOR_STATS_REC_FETCH = 'ADVISOR_STATS_REC_FETCH';\nexport const ADVISOR_STATS_SYSTEMS_FETCH_URL = `${BASE_URL}${ADV_BASE}/stats/systems/`;\nexport const ADVISOR_STATS_SYSTEMS_FETCH = 'ADVISOR_STATS_SYSTEMS_FETCH';\nexport const ADVISOR_INCIDENTS_FETCH = 'ADVISOR_INCIDENTS_FETCH';\nexport const ADVISOR_INCIDENTS_FETCH_URL = `${BASE_URL}/insights/v1/rule/?impacting=true&limit=1&incident=true`;\n\n// Patchman App Constants\nexport const PATCHMAN_ID = 'patch';\nexport const PATCHMAN_VER = 'v1';\nexport const PATCHMAN_SYSTEMS_FETCH_URL = `${BASE_URL}/${PATCHMAN_ID}/${PATCHMAN_VER}/systems`;\nexport const PATCHMAN_SYSTEMS_FETCH = 'PATCHMAN_SYSTEMS_FETCH';\nexport const PATCHMAN_SECURITY_FETCH_URL = `${BASE_URL}/${PATCHMAN_ID}/${PATCHMAN_VER}/advisories?filter[advisory_type]=3&limit=1`;\nexport const PATCHMAN_SECURITY_FETCH = 'PATCHMAN_SECURITY_FETCH';\nexport const PATCHMAN_BUGS_FETCH_URL = `${BASE_URL}/${PATCHMAN_ID}/${PATCHMAN_VER}/advisories?filter[advisory_type]=2&limit=1`;\nexport const PATCHMAN_BUGS_FETCH = 'PATCHMAN_BUGS_FETCH';\nexport const PATCHMAN_ENHANCEMENTS_FETCH_URL = `${BASE_URL}/${PATCHMAN_ID}/${PATCHMAN_VER}/advisories/?filter[advisory_type]=1&limit=1`;\nexport const PATCHMAN_ENHANCEMENTS_FETCH = 'PATCHMAN_ENHANCEMENTS_FETCH';\n\n// Subscriptions Utilized Constants\nexport const SUBSCRIPTIONS_UTILIZED_PRODUCT_ONE_FETCH = 'SUBSCRIPTIONS_UTILIZED_PRODUCT_ONE_FETCH';\nexport const SUBSCRIPTIONS_UTILIZED_PRODUCT_TWO_FETCH = 'SUBSCRIPTIONS_UTILIZED_PRODUCT_TWO_FETCH';\nexport const SUBSCRIPTIONS_UTILIZED_REPORT_FETCH_URL = `${BASE_URL}/rhsm-subscriptions/v1/tally/products/`;\nexport const SUBSCRIPTIONS_UTILIZED_CAPACITY_FETCH_URL = `${BASE_URL}/rhsm-subscriptions/v1/capacity/products/`;\n\n// Inventory Constants\nexport const INVENTORY_BASE = '/inventory/v1';\nconst INVENTORY_PER_PAGE = 'per_page=1';\nexport const INVENTORY_TOTAL_FETCH = 'INVENTORY_TOTAL_FETCH';\nexport const INVENTORY_TOTAL_FETCH_URL = `${BASE_URL}${INVENTORY_BASE}/hosts?${INVENTORY_PER_PAGE}`;\nexport const INVENTORY_FETCH = 'INVENTORY_FETCH';\nexport const INVENTORY_FETCH_URL = `${BASE_URL}${INVENTORY_BASE}/hosts?registered_with=insights&${INVENTORY_PER_PAGE}`;\nexport const INVENTORY_STALE_FETCH = 'INVENTORY_STALE_FETCH';\nexport const INVENTORY_STALE_FETCH_URL = `${BASE_URL}${INVENTORY_BASE}/hosts?staleness=stale&registered_with=insights&${INVENTORY_PER_PAGE}`;\nexport const INVENTORY_WARNING_FETCH = 'INVENTORY_WARNING_FETCH';\nexport const INVENTORY_WARNING_FETCH_URL = `${BASE_URL}${INVENTORY_BASE}/hosts?staleness=stale_warning&registered_with=insights&${INVENTORY_PER_PAGE}`;\n\n// Remediations App Constants\nconst REMEDIATIONS_BASE = '/remediations/v1';\nexport const REMEDIATIONS_FETCH = 'REMEDIATIONS_FETCH';\nexport const REMEDIATIONS_FETCH_URL = `${BASE_URL}${REMEDIATIONS_BASE}/remediations?sort=-updated_at&limit=4&offset=0`;\nexport const REMEDIATIONS_PLAYBOOK_RUNS_FETCH = 'REMEDIATIONS_PLAYBOOK_RUNS_FETCH';\nexport const REMEDIATIONS_PLAYBOOK_RUNS_FETCH_URL = `${BASE_URL}${REMEDIATIONS_BASE}/remediations/`;\n\n// Resource Optimization Constants\nconst ROS_BASE = '/ros/v1';\nexport const ROS_IS_CONFIGURED_FETCH = 'ROS_IS_CONFIGURED_FETCH';\nexport const ROS_IS_CONFIGURED_FETCH_URL = `${BASE_URL}${ROS_BASE}/is_configured`;\n\n// Workloads Constants\nexport const SAP_FETCH_URL = `${BASE_URL}/inventory/v1/system_profile/sap_system`;\n","import React from 'react';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/Skeleton';\n\nconst Loading = () => {\n    return (\n        <React.Fragment>\n            <Skeleton size='md' />\n            <br />\n            <Skeleton size='md' />\n        </React.Fragment>\n    );\n};\n\nexport default Loading;\n","import { DashboardStore } from '../AppReducer';\nimport { compose } from 'redux';\nimport { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport promiseMiddleware from 'redux-promise-middleware';\n\nlet registry;\n\nexport const init = (...middleware) => {\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    registry = getRegistry(\n        {},\n        [...middleware, promiseMiddleware],\n        composeEnhancers\n    );\n    registry.register({ DashboardStore });\n\n    return registry;\n};\n\nexport const getStore = () => registry.getStore();\n\nexport const register = (...args) => registry.register(...args);\n\n","import * as ActionTypes from './AppConstants';\n\nimport Immutable from 'seamless-immutable';\n\n// eslint-disable-next-line new-cap\nconst initialState = Immutable({\n    complianceSummary: {},\n    complianceFetchStatus: '',\n    vulnerabilities: {},\n    vulnerabilitiesFetchStatus: '',\n    advisorStatsRecs: {},\n    advisorStatsRecsStatus: '',\n    advisorStatsSystems: {},\n    advisorStatsSystemsStatus: '',\n    advisorIncidents: {},\n    advisorIncidentsStatus: '',\n    patchmanSystems: {},\n    patchmanSystemsStatus: '',\n    patchmanSecurity: {},\n    patchmanSecurityStatus: '',\n    patchmanBugs: {},\n    patchmanBugsStatus: '',\n    patchmanEnhancements: {},\n    patchmanEnhancementsStatus: '',\n    subscriptionsUtilizedProductOne: [],\n    subscriptionsUtilizedProductOneFetchStatus: '',\n    subscriptionsUtilizedProductTwo: [],\n    subscriptionsUtilizedProductTwoFetchStatus: '',\n    inventorySummary: {},\n    inventoryFetchStatus: '',\n    inventoryStaleSummary: {},\n    inventoryStaleFetchStatus: '',\n    inventoryWarningSummary: {},\n    inventoryWarningFetchStatus: '',\n    inventoryTotalSummary: {},\n    inventoryTotalFetchStatus: '',\n    remediations: {},\n    remediationsFetchStatus: '',\n    rosIsConfigured: {},\n    rosIsConfiguredFetchStatus: '',\n    selectedTags: [],\n    workloads: {},\n    SID: {}\n});\n\nexport const DashboardStore = (state = initialState, action) => {\n    switch (action.type) {\n        // GLOBAL\n        case ActionTypes.SELECTED_TAGS_SET:\n            return Immutable.merge(state, {\n                selectedTags: action.payload\n            });\n\n        case ActionTypes.WORKLOADS_SET:\n            return Immutable.merge(state, {\n                workloads: action.payload\n            });\n\n        case ActionTypes.SID_SET:\n            return Immutable.merge(state, {\n                SID: action.payload\n            });\n\n        // COMPLIANCE\n        case `${ActionTypes.COMPLIANCE_FETCH}_PENDING`:\n            return state.set('complianceFetchStatus', 'pending');\n        case `${ActionTypes.COMPLIANCE_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                complianceSummary: action.payload,\n                complianceFetchStatus: 'fulfilled'\n            });\n        case `${ActionTypes.COMPLIANCE_FETCH}_REJECTED`:\n            return state.set('complianceFetchStatus', 'rejected');\n\n        // VULN\n        case `${ActionTypes.VULNERABILITIES_FETCH}_PENDING`:\n            return state.set('vulnerabilitiesFetchStatus', 'pending');\n        case `${ActionTypes.VULNERABILITIES_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                vulnerabilities: action.payload,\n                vulnerabilitiesFetchStatus: 'fulfilled'\n            });\n        case `${ActionTypes.VULNERABILITIES_FETCH}_REJECTED`:\n            return state.set('vulnerabilitiesFetchStatus', 'rejected');\n\n        // Advisor\n        case `${ActionTypes.ADVISOR_STATS_REC_FETCH}_PENDING`:\n            return state.set('advisorStatsRecsStatus', 'pending');\n        case `${ActionTypes.ADVISOR_STATS_REC_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                advisorStatsRecs: action.payload,\n                advisorStatsRecsStatus: 'fulfilled'\n            });\n        case `${ActionTypes.ADVISOR_STATS_REC_FETCH}_REJECTED`:\n            return state.set('advisorStatsRecsStatus', 'rejected');\n\n        case `${ActionTypes.ADVISOR_STATS_SYSTEMS_FETCH}_PENDING`:\n            return state.set('advisorStatsSystemsStatus', 'pending');\n        case `${ActionTypes.ADVISOR_STATS_SYSTEMS_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                advisorStatsSystems: action.payload,\n                advisorStatsSystemsStatus: 'fulfilled'\n            });\n        case `${ActionTypes.ADVISOR_STATS_SYSTEMS_FETCH}_REJECTED`:\n            return state.set('advisorStatsSystemsStatus', 'rejected');\n\n        case `${ActionTypes.ADVISOR_INCIDENTS_FETCH}_PENDING`:\n            return state.set('advisorIncidentsStatus', 'pending');\n        case `${ActionTypes.ADVISOR_INCIDENTS_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                advisorIncidents: action.payload,\n                advisorIncidentsStatus: 'fulfilled'\n            });\n        case `${ActionTypes.ADVISOR_INCIDENTS_FETCH}_REJECTED`:\n            return state.set('advisorIncidentsStatus', 'rejected');\n\n        // Patch\n        case `${ActionTypes.PATCHMAN_SYSTEMS_FETCH}_PENDING`:\n            return state.set('patchmanSystemsStatus', 'pending');\n\n        case `${ActionTypes.PATCHMAN_SYSTEMS_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                patchmanSystems: action.payload.meta.total_items,\n                patchmanSystemsStatus: 'fulfilled'\n            });\n        case `${ActionTypes.PATCHMAN_SYSTEMS_FETCH}_REJECTED`:\n            return state.set('patchmanSystemsStatus', 'rejected');\n\n        case `${ActionTypes.PATCHMAN_SECURITY_FETCH}_PENDING`:\n            return state.set('patchmanSecurityStatus', 'pending');\n\n        case `${ActionTypes.PATCHMAN_SECURITY_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                patchmanSecurity: action.payload.meta.total_items,\n                patchmanSecurityStatus: 'fulfilled'\n            });\n\n        case `${ActionTypes.PATCHMAN_SECURITY_FETCH}_REJECTED`:\n            return state.set('patchmanBugsStatus', 'rejected');\n\n        case `${ActionTypes.PATCHMAN_BUGS_FETCH}_PENDING`:\n            return state.set('patchmanBugsStatus', 'pending');\n\n        case `${ActionTypes.PATCHMAN_BUGS_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                patchmanBugs: action.payload.meta.total_items,\n                patchmanBugsStatus: 'fulfilled'\n            });\n\n        case `${ActionTypes.PATCHMAN_BUGS_FETCH}_REJECTED`:\n            return state.set('patchmanBugsStatus', 'rejected');\n\n        case `${ActionTypes.PATCHMAN_ENHANCEMENTS_FETCH}_PENDING`:\n            return state.set('patchmanEnhancementsStatus', 'pending');\n\n        case `${ActionTypes.PATCHMAN_ENHANCEMENTS_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                patchmanEnhancements: action.payload.meta.total_items,\n                patchmanEnhancementsStatus: 'fulfilled'\n            });\n\n        case `${ActionTypes.PATCHMAN_ENHANCEMENTS_FETCH}_REJECTED`:\n            return state.set('patchmanEnhancementsStatus', 'rejected');\n\n        // SubsUtilized Product One\n        case `${ActionTypes.SUBSCRIPTIONS_UTILIZED_PRODUCT_ONE_FETCH}_PENDING`:\n            return state.set('subscriptionsUtilizedProductOneFetchStatus', 'pending');\n        case `${ActionTypes.SUBSCRIPTIONS_UTILIZED_PRODUCT_ONE_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                subscriptionsUtilizedProductOne: action.payload,\n                subscriptionsUtilizedProductOneFetchStatus: 'fulfilled'\n            });\n        case `${ActionTypes.SUBSCRIPTIONS_UTILIZED_PRODUCT_ONE_FETCH}_REJECTED`:\n            return Immutable.merge(state, {\n                subscriptionsUtilizedProductOne: action.payload.response,\n                subscriptionsUtilizedProductOneFetchStatus: 'rejected'\n            });\n\n        // SubsUtilized Product Two\n        case `${ActionTypes.SUBSCRIPTIONS_UTILIZED_PRODUCT_TWO_FETCH}_PENDING`:\n            return state.set('subscriptionsUtilizedProductTwoFetchStatus', 'pending');\n        case `${ActionTypes.SUBSCRIPTIONS_UTILIZED_PRODUCT_TWO_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                subscriptionsUtilizedProductTwo: action.payload,\n                subscriptionsUtilizedProductTwoFetchStatus: 'fulfilled'\n            });\n        case `${ActionTypes.SUBSCRIPTIONS_UTILIZED_PRODUCT_TWO_FETCH}_REJECTED`:\n            return Immutable.merge(state, {\n                subscriptionsUtilizedProductTwo: action.payload.response,\n                subscriptionsUtilizedProductTwoFetchStatus: 'rejected'\n            });\n\n        // Inventory\n        case `${ActionTypes.INVENTORY_FETCH}_PENDING`:\n            return state.set('inventoryFetchStatus', 'pending');\n        case `${ActionTypes.INVENTORY_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                inventorySummary: action.payload,\n                inventoryFetchStatus: 'fulfilled'\n            });\n        case `${ActionTypes.INVENTORY_FETCH}_REJECTED`:\n            return state.set('inventoryFetchStatus', 'rejected');\n\n        case `${ActionTypes.INVENTORY_STALE_FETCH}_PENDING`:\n            return state.set('inventoryStaleFetchStatus', 'pending');\n        case `${ActionTypes.INVENTORY_STALE_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                inventoryStaleSummary: action.payload,\n                inventoryStaleFetchStatus: 'fulfilled'\n            });\n        case `${ActionTypes.INVENTORY_STALE_FETCH}_REJECTED`:\n            return state.set('inventoryStaleFetchStatus', 'rejected');\n\n        case `${ActionTypes.INVENTORY_WARNING_FETCH}_PENDING`:\n            return state.set('inventoryWarningFetchStatus', 'pending');\n        case `${ActionTypes.INVENTORY_WARNING_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                inventoryWarningSummary: action.payload,\n                inventoryWarningFetchStatus: 'fulfilled'\n            });\n        case `${ActionTypes.INVENTORY_WARNING_FETCH}_REJECTED`:\n            return state.set('inventoryWarningFetchStatus', 'rejected');\n\n        case `${ActionTypes.INVENTORY_TOTAL_FETCH}_PENDING`:\n            return state.set('inventoryTotalFetchStatus', 'pending');\n        case `${ActionTypes.INVENTORY_TOTAL_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                inventoryTotalSummary: action.payload,\n                inventoryTotalFetchStatus: 'fulfilled'\n            });\n        case `${ActionTypes.INVENTORY_TOTAL_FETCH}_REJECTED`:\n            return state.set('inventoryTotalFetchStatus', 'rejected');\n\n        // REMEDIATIONS\n        case `${ActionTypes.REMEDIATIONS_FETCH}_PENDING`:\n            return state.set('remediationsFetchStatus', 'pending');\n        case `${ActionTypes.REMEDIATIONS_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                remediations: action.payload,\n                remediationsFetchStatus: 'fulfilled'\n            });\n        case `${ActionTypes.REMEDIATIONS_FETCH}_REJECTED`:\n            return state.set('remediationsFetchStatus', 'rejected');\n\n        // Resource Optimization\n        case `${ActionTypes.ROS_IS_CONFIGURED_FETCH}_PENDING`:\n            return state.set('rosIsConfiguredFetchStatus', 'pending');\n        case `${ActionTypes.ROS_IS_CONFIGURED_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                rosIsConfigured: action.payload,\n                rosIsConfiguredFetchStatus: 'fulfilled'\n            });\n        case `${ActionTypes.ROS_IS_CONFIGURED_FETCH}_REJECTED`:\n            return state.set('rosIsConfiguredFetchStatus', 'rejected');\n\n        default:\n            return state;\n\n    }\n};\n","import Qs from 'qs';\nimport axios from 'axios';\n\naxios.defaults.headers.common = { 'x-rh-insights-use-path-prefix': 1 };\n\nexport default {\n    get(url, headers = {}, params = {}) {\n        return axios.get(url, {\n            headers,\n            params,\n            paramsSerializer (params) {\n                return Qs.stringify(params, { arrayFormat: 'repeat' });\n            }\n        });\n    },\n    put(url, data = {}, headers = {}) {\n        return axios.put(url, data, {\n            headers\n        });\n    },\n    post(url, data = {}, headers = {}) {\n        return axios.post(url, data, {\n            headers\n        });\n    }\n};\n"],"names":["EmptyState","EmptyStateIcon","variant","component","Spinner","Title","size","headingLevel","Dashboard","lazy","Routes","Route","exact","path","rootClass","Suspense","fallback","Loading","PermissionContext","createContext","App","props","dispatch","useDispatch","useState","customPolicies","compliance","drift","advisor","remediations","patch","vulnerability","subscriptions","ros","permissions","setPermissions","isOrgAdmin","setIsOrgAdmin","arePermissionsReady","setArePermissionReady","hasSystems","setHasSystems","insights","chrome","init","identifyApp","globalFilterScope","on","data","mapGlobalFilter","workloads","SID","selectedTags","batch","setWorkloads","setSIDs","setSelectedTags","window","auth","getUser","then","user","identity","is_org_admin","getUserPermissions","dashboardPermissions","permissionList","length","map","permission","includes","API","INVENTORY_TOTAL_FETCH_URL","total","hideGlobalFilter","useEffect","initChrome","Provider","value","childProps","propTypes","history","PropTypes","fetchData","url","headers","options","fetchComplianceSummary","type","ActionTypes","payload","fetchVulnerabilities","advisorFetchStatsRecs","advisorFetchStatsSystems","advisorFetchIncidents","patchmanFetchSystems","patchmanFetchSecurity","patchmanFetchBugs","patchmanFetchEnhancements","subscriptionsUtilizedProductOneFetch","id","Promise","all","subscriptionsUtilizedProductTwoFetch","fetchInventorySummary","fetchInventoryTotalSummary","fetchInventoryStaleSummary","fetchInventoryWarningSummary","fetchRemediations","fetchRosIsConfigured","tags","BASE_URL","UI_BASE","UI_BASE_OPENSHIFT","SELECTED_TAGS_SET","WORKLOADS_SET","SID_SET","SEVERITY_MAP","critical","important","moderate","low","COMPLIANCE_FETCH","COMPLIANCE_SEARCH","encodeURIComponent","COMPLIANCE_FETCH_URL","VULNERABILITIES_FETCH","VULNERABILITIES_FETCH_URL","ADV_BASE","ADVISOR_STATS_REC_FETCH_URL","ADVISOR_STATS_REC_FETCH","ADVISOR_STATS_SYSTEMS_FETCH_URL","ADVISOR_STATS_SYSTEMS_FETCH","ADVISOR_INCIDENTS_FETCH","ADVISOR_INCIDENTS_FETCH_URL","PATCHMAN_ID","PATCHMAN_VER","PATCHMAN_SYSTEMS_FETCH_URL","PATCHMAN_SYSTEMS_FETCH","PATCHMAN_SECURITY_FETCH_URL","PATCHMAN_SECURITY_FETCH","PATCHMAN_BUGS_FETCH_URL","PATCHMAN_BUGS_FETCH","PATCHMAN_ENHANCEMENTS_FETCH_URL","PATCHMAN_ENHANCEMENTS_FETCH","SUBSCRIPTIONS_UTILIZED_PRODUCT_ONE_FETCH","SUBSCRIPTIONS_UTILIZED_PRODUCT_TWO_FETCH","SUBSCRIPTIONS_UTILIZED_REPORT_FETCH_URL","SUBSCRIPTIONS_UTILIZED_CAPACITY_FETCH_URL","INVENTORY_BASE","INVENTORY_PER_PAGE","INVENTORY_TOTAL_FETCH","INVENTORY_FETCH","INVENTORY_FETCH_URL","INVENTORY_STALE_FETCH","INVENTORY_STALE_FETCH_URL","INVENTORY_WARNING_FETCH","INVENTORY_WARNING_FETCH_URL","REMEDIATIONS_BASE","REMEDIATIONS_FETCH","REMEDIATIONS_FETCH_URL","REMEDIATIONS_PLAYBOOK_RUNS_FETCH_URL","ROS_IS_CONFIGURED_FETCH","ROS_IS_CONFIGURED_FETCH_URL","SAP_FETCH_URL","registry","initialState","Immutable","complianceSummary","complianceFetchStatus","vulnerabilities","vulnerabilitiesFetchStatus","advisorStatsRecs","advisorStatsRecsStatus","advisorStatsSystems","advisorStatsSystemsStatus","advisorIncidents","advisorIncidentsStatus","patchmanSystems","patchmanSystemsStatus","patchmanSecurity","patchmanSecurityStatus","patchmanBugs","patchmanBugsStatus","patchmanEnhancements","patchmanEnhancementsStatus","subscriptionsUtilizedProductOne","subscriptionsUtilizedProductOneFetchStatus","subscriptionsUtilizedProductTwo","subscriptionsUtilizedProductTwoFetchStatus","inventorySummary","inventoryFetchStatus","inventoryStaleSummary","inventoryStaleFetchStatus","inventoryWarningSummary","inventoryWarningFetchStatus","inventoryTotalSummary","inventoryTotalFetchStatus","remediationsFetchStatus","rosIsConfigured","rosIsConfiguredFetchStatus","DashboardStore","state","action","set","meta","total_items","response","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","getRegistry","promiseMiddleware","register","axios","get","params","paramsSerializer","Qs","arrayFormat","put","post"],"sourceRoot":""}