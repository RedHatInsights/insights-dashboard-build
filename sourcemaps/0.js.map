{"version":3,"sources":["webpack:///./node_modules/babel-runtime/helpers/defineProperty.js","webpack:///./src/PresentationalComponents/GaugeWidget/GaugeWidget.js","webpack:///./src/PresentationalComponents/GaugeWidget/_ins-c-gauge-widget.scss"],"names":["ModalContent","GaugeWidget","props","state","isModalOpen","variant","handleModalToggle","bind","entitleToggle","setState","effect","negative","changeIndicator","decrease","gaugeWidgetClasses","className","changeClasses","capitalize","str","charAt","toUpperCase","slice","renderModal","label","variantLegend","variantType","id","width","flipFullColors","height","identifier","value","changeValue","timeframe","children","Component","propTypes","any","isRequired","string","number","bool","oneOf","defaultProps"],"mappings":"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","file":"js/0.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (obj, key, value) {\n  if (key in obj) {\n    (0, _defineProperty2.default)(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};","import React, { Component } from 'react';\nimport { Button, Stack, StackItem, Modal } from '@patternfly/react-core';\nimport { Gauge } from '@red-hat-insights/insights-frontend-components';\nimport classNames from 'classnames';\nimport propTypes from 'prop-types';\nimport asyncComponent from '../../Utilities/asyncComponent';\n\nimport './_ins-c-gauge-widget.scss';\nconst ModalContent = asyncComponent(() => import ('../Modal/ModalContent.js'));\n\n/**\n * A smart component that handles all the api calls and data needed by the dumb components.\n * Smart components are usually classes.\n *\n * https://reactjs.org/docs/components-and-props.html\n * https://medium.com/@thejasonfile/dumb-components-and-smart-components-e7b33a698d43\n */\nclass GaugeWidget extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isModalOpen: false,\n            variant: this.props.variant\n        };\n        this.handleModalToggle = this.handleModalToggle.bind(this);\n        this.entitleToggle = this.entitleToggle.bind(this);\n    };\n\n    handleModalToggle() {\n        this.setState(({ isModalOpen }) => ({\n            isModalOpen: !isModalOpen\n        }));\n    };\n\n    entitleToggle() {\n        this.setState({\n            variant: 'active'\n        });\n        this.setState(({ isModalOpen }) => ({\n            isModalOpen: !isModalOpen\n        }));\n    };\n\n    render () {\n\n        // Set the check isModalOpen to false\n        const { isModalOpen } = this.state;\n\n        // set the change to positive by default, unless defined as negative\n        // effect sets color on metrics, eg. negative = red, otherwise default = green\n        let effect = this.props.negative ? 'ins-m-negative' : '';\n        // set change arrow icon set to increase by default, unless defined as decrease\n        // changeIndicator sets icon to `up` or `down`, eg. default = up, decrease = down\n        let changeIndicator = this.props.decrease ? 'down' : 'up';\n\n        const gaugeWidgetClasses = classNames(\n            this.props.className,\n            'ins-c-gauge-widget',\n            { [`ins-c-gauge-widget-${this.state.variant}`]: this.state.variant },\n            { [`ins-c-gauge-widget--disabled ins-c-gauge-widget-disabled__${this.state.variant}`]: this.state.variant !== 'active' }\n        );\n\n        const changeClasses = classNames(\n            'ins-c-gauge-widget__metrics-change',\n            effect\n        );\n\n        function capitalize(str) {\n            return str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        let renderModal = (\n            <Modal\n                isLarge\n                title={capitalize(this.props.label)}\n                isOpen={isModalOpen}\n                onClose={this.handleModalToggle}\n                actions={[\n                    <Button key=\"cancel\" variant=\"secondary\" onClick={this.handleModalToggle}>\n                    Cancel\n                    </Button>,\n                    <Button key=\"confirm\" variant=\"primary\" onClick={this.entitleToggle}>\n                    Confirm\n                    </Button>\n                ]}>\n                <ModalContent variant={this.state.variant} app={this.props.label}/>\n            </Modal>\n        );\n\n        let variantLegend;\n        let variantType;\n        if (this.state.variant === 'notSetUp' || this.state.variant === 'notEntitled') {\n            switch (this.state.variant) {\n                case 'notEntitled':\n                    variantLegend = (\n                        <React.Fragment>\n                            <StackItem> { capitalize(this.props.label) } Is not entitled </StackItem>\n                            <StackItem>\n                                <Button onClick={this.handleModalToggle}> Start Evaluation </Button>\n                                { renderModal }\n                            </StackItem>\n                            <StackItem>\n                                <a href={'#'}>\n                                    <span>Find out more</span>\n                                </a> </StackItem>\n                        </React.Fragment>\n                    );\n                    variantType = 'not entitled';\n                    break;\n                case 'notSetUp':\n                    variantType = 'not set up';\n                    variantLegend = (\n                        <React.Fragment>\n                            <StackItem> { capitalize(this.props.label) } Is not set up </StackItem>\n                            <StackItem>\n                                <Button onClick={this.handleModalToggle}> Get Started </Button>\n                                { renderModal }\n                            </StackItem>\n                        </React.Fragment>\n                    );\n            }\n        }\n\n        if (this.state.variant === 'notSetUp' || this.state.variant === 'notEntitled') {\n            return (\n                <div className={gaugeWidgetClasses} id={this.props.id} aria-label={ `${this.props.label} is ${variantType}` }>\n                    <div className='ins-c-gauge-widget__graph pf-u-text-align-center'>\n                        <div className='ins-c-gauge-widget__metrics'>\n                            <div className='ins-c-gauge-widget__metrics-percentage'> 0% </div>\n                        </div>\n                        <Gauge\n                            label={this.props.label} value={0} width={this.props.width}\n                            flipFullColors={this.props.flipFullColors} height={this.props.height}\n                            identifier={this.props.identifier}>\n                        </Gauge>\n                    </div>\n                    <div className='ins-c-gauge-widget__disabled--legend'>\n                        <Stack gutter='sm'>\n                            { variantLegend }\n                        </Stack>\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div className={gaugeWidgetClasses} id={this.props.id}>\n                    <div className='ins-c-gauge-widget__graph pf-u-text-align-center'>\n                        <div className='ins-c-gauge-widget__metrics'>\n                            <div className='ins-c-gauge-widget__metrics-percentage'>\n                                {this.props.value}%\n                            </div>\n                            <div className={changeClasses}>\n                                <span className='ins-c-gauge-widget__metrics-change-text'>\n                                    {this.props.changeValue}% <i className={`fas fa-caret-${changeIndicator}`}></i>\n                                </span>\n                                <span className='ins-c-gauge-widget__metrics-change-timeframe'>\n                                    Last {this.props.timeframe} days\n                                </span>\n                            </div>\n                        </div>\n                        <Gauge\n                            label={this.props.label} value={this.props.value} width={this.props.width}\n                            flipFullColors={this.props.flipFullColors} height={this.props.height}\n                            identifier={this.props.identifier}>\n                        </Gauge>\n                    </div>\n                    <div className='ins-c-gauge-widget__legend'>\n                        {this.props.children}\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\nexport default GaugeWidget;\n\nGaugeWidget.propTypes = {\n    children: propTypes.any.isRequired,\n    className: propTypes.string,\n    id: propTypes.string,\n    height: propTypes.number,\n    identifier: propTypes.string,\n    label: propTypes.string,\n    value: propTypes.number,\n    width: propTypes.number,\n    negative: propTypes.bool,\n    changeValue: propTypes.string,\n    decrease: propTypes.bool,\n    flipFullColors: propTypes.bool,\n    timeframe: propTypes.string,\n    variant: propTypes.oneOf(['active', 'notEntitled', 'notSetUp'])\n};\n\nGaugeWidget.defaultProps = {\n    variant: 'active'\n};\n","// extracted by mini-css-extract-plugin"],"sourceRoot":""}