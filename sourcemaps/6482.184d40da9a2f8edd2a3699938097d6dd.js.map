{"version":3,"file":"js/6482.06064d235c037560a8f4.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Card/CardBody.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Text/TextContent.js","webpack:///./node_modules/@patternfly/react-styles/css/components/Content/content.mjs","webpack:///./src/ChartTemplates/PieChart/PieChartTemplate.js","webpack:///./src/PresentationalComponents/Template/CompoundCard.js","webpack:///./node_modules/@patternfly/react-tokens/dist/esm/global_palette_blue_100.js","webpack:///./node_modules/@patternfly/react-tokens/dist/esm/global_palette_blue_200.js","webpack:///./node_modules/@patternfly/react-tokens/dist/esm/global_palette_blue_300.js","webpack:///./node_modules/@patternfly/react-tokens/dist/esm/global_palette_blue_400.js","webpack:///./src/SmartComponents/Advisor/Advisor.js","webpack:///./src/SmartComponents/Advisor/Constants.js"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Card/card';\nimport { css } from '@patternfly/react-styles';\nexport const CardBody = (_a) => {\n    var { children, className, component = 'div', isFilled = true } = _a, props = __rest(_a, [\"children\", \"className\", \"component\", \"isFilled\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({ className: css(styles.cardBody, !isFilled && styles.modifiers.noFill, className) }, props), children));\n};\nCardBody.displayName = 'CardBody';\n//# sourceMappingURL=CardBody.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Content/content';\nimport { css } from '@patternfly/react-styles';\nexport const TextContent = (_a) => {\n    var { children, className = '', isVisited = false } = _a, props = __rest(_a, [\"children\", \"className\", \"isVisited\"]);\n    return (React.createElement(\"div\", Object.assign({}, props, { className: css(styles.content, isVisited && styles.modifiers.visited, className) }), children));\n};\nTextContent.displayName = 'TextContent';\n//# sourceMappingURL=TextContent.js.map","import './content.css';\nexport default {\n  \"content\": \"pf-v5-c-content\",\n  \"modifiers\": {\n    \"visited\": \"pf-m-visited\",\n    \"plain\": \"pf-m-plain\"\n  }\n};","import './PieChartTemplate.scss';\n\nimport { ChartLabel } from '@patternfly/react-charts/dist/esm/components/ChartLabel/ChartLabel';\nimport { ChartLegend } from '@patternfly/react-charts/dist/esm/components/ChartLegend/ChartLegend';\nimport { ChartPie } from '@patternfly/react-charts/dist/esm/components/ChartPie/ChartPie';\nimport React from 'react';\nimport propTypes from 'prop-types';\n\nexport const PieChart = ({ ariaDesc, ariaTitle, constrainToVisibleArea, data, legendData, padding, height, width, legendOrientation,\n    colorScale, legend, legendWidth, legendHeight, legendClick }) => {\n    // eslint-disable-next-line react/prop-types\n    const LegendLabel = ({ index, ...rest }) => <a id={ `${ariaTitle.toLowerCase().replace(/\\s/g, '-')}-legend-${index + 1}` }\n        href={ legendClick[index] } className=\"pf-v5-c-button pf-m-link pf-m-inline\"><ChartLabel { ...rest } /></a>;\n\n    return (\n        <div className=\"insd-c-pie-chart__row\">\n            <div style={ { width, height, position: 'relative' } }>\n                <ChartPie\n                    ariaDesc={ ariaDesc }\n                    ariaTitle={ ariaTitle }\n                    constrainToVisibleArea={ constrainToVisibleArea }\n                    data={ data }\n                    height={ height }\n                    labels={ ({ datum }) => `${datum.x}: ${datum.y}` }\n                    padding={ padding }\n                    width={ width }\n                    colorScale={ colorScale }\n                />\n                <table tabIndex=\"0\" className=\"visually-hidden\" aria-label={ ariaTitle + ` data` }>\n                    <tbody>\n                        {data.map((d, index) => {\n                            return [\n                                <tr key={ index }>\n                                    <td>{d.y}</td>\n                                    <td>{d.x}</td>\n                                </tr>\n                            ];\n                        })}\n                    </tbody>\n                </table>\n            </div>\n            {legend &&\n                <div className=\"insd-c-pie-chart__legend\" aria-label=\"Chart legend\" style={ { width: legendWidth, height: legendHeight } }>\n                    <ChartLegend\n                        height={ legendHeight }\n                        width={ legendWidth }\n                        fontSize={ 14 }\n                        data={ legendData }\n                        rowGutter={ { top: -5, bottom: -5 } }\n                        orientation={ legendOrientation }\n                        labelComponent={ legendClick && < LegendLabel /> }\n                    />\n                </div>\n            }\n        </div>\n    );\n};\n\nPieChart.propTypes = {\n    ariaDesc: propTypes.string,\n    ariaTitle: propTypes.string,\n    constrainToVisibleArea: propTypes.bool,\n    data: propTypes.array,\n    legendData: propTypes.array,\n    padding: propTypes.object,\n    height: propTypes.number,\n    width: propTypes.number,\n    legendOrientation: propTypes.string,\n    colorScale: propTypes.array,\n    legend: propTypes.bool,\n    legendWidth: propTypes.number,\n    legendHeight: propTypes.number,\n    legendClick: propTypes.any\n};\n\nexport default PieChart;\n","import './CompoundCard.scss';\n\nimport { Card } from '@patternfly/react-core/dist/esm/components/Card/Card';\nimport React from 'react';\nimport propTypes from 'prop-types';\n\nexport const CompoundCard = ({ className, children, ...props }) => <Card\n    className={`insd-c-dashboard-compound-card insd-c-dashboard__card ${className}`} {...props}>\n    {children}\n</Card>;\n\nCompoundCard.propTypes = {\n    children: propTypes.any,\n    className: propTypes.string\n};\n\n","export const global_palette_blue_100 = {\n  \"name\": \"--pf-v5-global--palette--blue-100\",\n  \"value\": \"#bee1f4\",\n  \"var\": \"var(--pf-v5-global--palette--blue-100)\"\n};\nexport default global_palette_blue_100;","export const global_palette_blue_200 = {\n  \"name\": \"--pf-v5-global--palette--blue-200\",\n  \"value\": \"#73bcf7\",\n  \"var\": \"var(--pf-v5-global--palette--blue-200)\"\n};\nexport default global_palette_blue_200;","export const global_palette_blue_300 = {\n  \"name\": \"--pf-v5-global--palette--blue-300\",\n  \"value\": \"#2b9af3\",\n  \"var\": \"var(--pf-v5-global--palette--blue-300)\"\n};\nexport default global_palette_blue_300;","export const global_palette_blue_400 = {\n  \"name\": \"--pf-v5-global--palette--blue-400\",\n  \"value\": \"#06c\",\n  \"var\": \"var(--pf-v5-global--palette--blue-400)\"\n};\nexport default global_palette_blue_400;","/* eslint-disable react/display-name */\nimport './Advisor.scss';\n\nimport * as AppActions from '../../AppActions';\n\nimport {\n    Button,\n    Card,\n    CardBody,\n    CardTitle,\n    Divider,\n    TextContent,\n    Title,\n    Tooltip,\n    TooltipPosition\n} from '@patternfly/react-core/dist/esm/components';\nimport { Flex, FlexItem } from '@patternfly/react-core/dist/esm/layouts';\nimport React, { useEffect, useState } from 'react';\nimport { SEVERITY_MAP } from '../../AppConstants';\nimport { capitalize, globalFilters } from '../../Utilities/Common';\nimport {\n    global_disabled_color_100,\n    global_palette_blue_100,\n    global_palette_blue_200,\n    global_palette_blue_300,\n    global_palette_blue_400\n} from '@patternfly/react-tokens/dist/esm/';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { CompoundCard } from '../../PresentationalComponents/Template/CompoundCard';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { ExpandableCardTemplate } from '../../PresentationalComponents/Template/ExpandableCardTemplate';\nimport FailState from '../../PresentationalComponents/FailState/FailState';\nimport { INCIDENT_URL } from './Constants';\nimport InfoIcon from '../../Icons/InfoIcon';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport { PieChart } from '../../ChartTemplates/PieChart/PieChartTemplate';\nimport { TemplateCardBody } from '../../PresentationalComponents/Template/TemplateCard';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\nimport InsightsLink from '@redhat-cloud-services/frontend-components/InsightsLink';\n\nconst Advisor = () => {\n    const colors = [global_palette_blue_100.value, global_palette_blue_200.value, global_palette_blue_300.value, global_palette_blue_400.value];\n    const intl = useIntl();\n    const [trData, setTRData] = useState([]);\n    const [categoryData, setCategoryData] = useState([]);\n    const [colorScale, setColorScale] = useState();\n    const dispatch = useDispatch();\n    const recStats = useSelector(({ DashboardStore }) => DashboardStore.advisorStatsRecs);\n    const recStatsStatus = useSelector(({ DashboardStore }) => DashboardStore.advisorStatsRecsStatus);\n    const advisorIncidents = useSelector(({ DashboardStore }) => DashboardStore.advisorIncidents);\n    const advisorIncidentsStatus = useSelector(({ DashboardStore }) => DashboardStore.advisorIncidentsStatus);\n    const selectedTags = useSelector(({ DashboardStore }) => DashboardStore.selectedTags);\n    const workloads = useSelector(({ DashboardStore }) => DashboardStore.workloads);\n    const SID = useSelector(({ DashboardStore }) => DashboardStore.SID);\n\n    const urlRest = `&reports_shown=true&impacting=true&offset=0&limit=10${selectedTags?.length ?\n        `&tags=${selectedTags?.join()}` : ''}${workloads?.SAP ? '&sap_system=true' : ''}${SID?.length ? `&sap_sids=${SID?.join()}` : ''}`;\n    const totalRiskUrl = risk => `/recommendations?sort=-total_risk&total_risk=${risk}${urlRest}`;\n    const pieLegendData = categoryData.map(item => ({\n        name: `${item.y} ${item.x} `, fill: `${item.fill}`,\n        url: `/recommendations?sort=-category&category=${item.value}${urlRest}`\n    }));\n    const iconTooltip = text => <Tooltip\n        key={text}\n        position={TooltipPosition.top}\n        content={<div>{text}</div>}>\n        <span aria-label='Action' className='insd-c-info-icon'>\n            <InfoIcon />\n        </span>\n    </Tooltip>;\n    const pieChartPadding = { bottom: 0, left: 0, right: 0, top: 0 };\n\n    useEffect(() => {\n        const advisorFetchStatsRecs = options => dispatch(AppActions.advisorFetchStatsRecs(options));\n        const advisorFetchStatsSystems = options => dispatch(AppActions.advisorFetchStatsSystems(options));\n        const advisorFetchIncidents = options => dispatch(AppActions.advisorFetchIncidents(options));\n        const options = { ...globalFilters(workloads, SID), ...selectedTags?.length > 0 && { tags: selectedTags } };\n        advisorFetchStatsRecs(options);\n        advisorFetchStatsSystems(options);\n        advisorFetchIncidents(options);\n    }, [selectedTags, workloads, SID, dispatch]);\n\n    useEffect(() => {\n        if (recStatsStatus === 'fulfilled') {\n            const { total_risk, category } = recStats;\n            const categoryCount = category.Stability + category.Availability + category.Performance + category.Security;\n            setTRData([\n                {\n                    title: `${capitalize(intl.formatMessage(messages.critical))} `,\n                    risk: `${total_risk[SEVERITY_MAP.critical]}`,\n                    value: SEVERITY_MAP.critical\n                },\n                {\n                    title: `${capitalize(intl.formatMessage(messages.important))} `,\n                    risk: `${total_risk[SEVERITY_MAP.important]}`,\n                    value: SEVERITY_MAP.important\n                },\n                {\n                    title: `${capitalize(intl.formatMessage(messages.moderate))} `,\n                    risk: `${total_risk[SEVERITY_MAP.moderate]}`,\n                    value: SEVERITY_MAP.moderate\n                },\n                {\n                    title: `${capitalize(intl.formatMessage(messages.low))} `,\n                    risk: `${total_risk[SEVERITY_MAP.low]}`,\n                    value: SEVERITY_MAP.low\n                }\n            ]);\n\n            setCategoryData([\n                {\n                    x: intl.formatMessage(messages.availability, { count: category.Availability }), y: category.Availability,\n                    fill: colors[0], value: 1\n                },\n                {\n                    x: intl.formatMessage(messages.stability, { count: category.Stability }), y: category.Stability,\n                    fill: colors[1], value: 3\n                },\n                {\n                    x: intl.formatMessage(messages.performance, { count: category.Performance }), y: category.Performance,\n                    fill: colors[2], value: 4\n                },\n                {\n                    x: intl.formatMessage(messages.security, { count: category.Security }), y: category.Security,\n                    fill: colors[3], value: 2\n                }\n            ]);\n\n            setColorScale(categoryCount === 0 ? [global_disabled_color_100.value] : colors);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [recStats, recStatsStatus]);\n\n    return <CompoundCard className='insd-c-dashboard-card-parent insd-c-dashboard__card--compound--Advisor'>\n        {advisorIncidentsStatus === 'pending' || recStatsStatus === 'pending' && <Loading />}\n        {advisorIncidentsStatus === 'rejected' ?\n            <TemplateCardBody><FailState appName='Advisor' /></TemplateCardBody>\n            : <React.Fragment>\n                <ExpandableCardTemplate\n                    appName='Advisor'\n                    className='insd-m-toggle-right-on-md'\n                    title={intl.formatMessage(messages.advisorCardHeader1)}\n                    isExpanded={JSON.parse(localStorage.getItem('dashboard_expanded_advisor1') || 'true')}\n                    isExpandedCallback={isExpanded => localStorage.setItem('dashboard_expanded_advisor1', isExpanded)}\n                    body={<TemplateCardBody className='ins-c-advisor-recs__card-body pf-v5-u-pb-2xl'>\n                        <Flex\n                            direction={{ default: 'column' }}\n                            alignItems={{ default: 'alignItemsCenter' }}>\n                            <FlexItem>\n                                <Flex\n                                    alignItems={{ default: 'alignItemsFlexCenter' }}\n                                    justifyContent={{ default: 'justifyContentCenter' }}>\n                                    {advisorIncidents?.meta?.count > 0 &&\n                                        <ExclamationCircleIcon className='pf-v5-u-font-size-xl pf-v5-u-danger-color-100' />}\n                                    <span className='pf-v5-u-font-size-2xl pf-v5-u-text-align-center pf-v5-u-font-weight-normal'>\n                                        {intl.formatMessage(messages.incidents, { incidents: advisorIncidents?.meta?.count })}\n                                    </span>\n                                </Flex>\n                                <TextContent\n                                    className='insd-c-width-limiter pf-v5-u-text-align-center'\n                                    style={{ '--insd-c-width-limiter--MaxWidth': '34ch' }}>\n                                    <p className='pf-v5-u-font-size-md pf-v5-u-text-center'>\n                                        {intl.formatMessage(messages.advisorCardMessage)}\n                                    </p>\n                                </TextContent>\n                            </FlexItem>\n                            <InsightsLink app='advisor' to={INCIDENT_URL}>\n                                <Button\n                                    variant='secondary'\n                                    size='sm'\n                                >\n                                    {intl.formatMessage(messages.advisorCardCTA)}\n                                </Button>\n                            </InsightsLink>\n                        </Flex>\n                    </TemplateCardBody>\n                    } />\n                <Divider inset={{ md: 'insetLg' }} />\n                <ExpandableCardTemplate\n                    appName='advisor-recommendation-by-total-risk'\n                    className='insd-m-toggle-right-on-md'\n                    title={<Flex flexWrap={{ default: 'nowrap' }}>\n                        <h3>{intl.formatMessage(messages.advisorCardHeader2)}</h3>\n                        {iconTooltip(intl.formatMessage(messages.totalRiskDef, { strong: (str) => <strong>{str}</strong> }))}\n                    </Flex>}\n                    isExpanded={JSON.parse(localStorage.getItem('dashboard_expanded_advisor2') || 'true')}\n                    isExpandedCallback={isExpanded => localStorage.setItem('dashboard_expanded_advisor2', isExpanded)}\n                    body={<TemplateCardBody className='ins-c-advisor-recs__card-body pf-v5-u-pb-0'>\n                        <Flex\n                            justifyContent={{ default: 'justifyContentCenter' }}\n                            spaceItems={{ default: 'spaceItemsLg', sm: 'spaceItems2xl' }}\n                        >\n                            {trData.map(({ title, risk, value }) =>\n                                <InsightsLink key={title} app='advisor' to={totalRiskUrl(value)}>\n                                    <Flex\n                                        direction={{ default: 'column' }}\n                                        spaceItems={{ default: 'spaceItemsNone' }}\n                                        alignItems={{ default: 'alignItemsCenter' }}>\n                                        <span className='pf-v5-u-font-size-2xl pf-v5-u-color-100 pf-v5-u-font-weight-normal'>\n                                            {risk}\n                                        </span>\n                                        <span className='pf-v5-u-font-size-sm'>\n                                            {title}\n                                        </span>\n                                    </Flex>\n                                </InsightsLink>)}\n                        </Flex>\n                        <Card component='div'>\n                            <CardTitle>\n                                <Title headingLevel='h4' size='lg'>\n                                    {intl.formatMessage(messages.advisorCardHeader3)}\n                                </Title>\n                            </CardTitle>\n                            <CardBody className='pf-v5-u-pt-sm'>\n                                <Flex direction={{ default: 'column' }} spaceItems={{ default: 'spaceItemsLg' }}>\n                                    <div className=\"insd-c-dashboard__card-chart-container\">\n                                        <div className=\"insd-c-dashboard__card-pie-chart\">\n                                            <PieChart\n                                                ariaDesc='Advisor Category pie chart'\n                                                ariaTitle='Advisor Category pie chart'\n                                                constrainToVisibleArea={true}\n                                                data={categoryData}\n                                                colorScale={colorScale}\n                                                padding={pieChartPadding}\n                                            />\n                                        </div>\n                                        <div className=\"insd-c-dashboard__card-pie-chart-legend\">\n                                            <div className='insd-c-legend insd-m-2-col'>\n                                                {pieLegendData.map((item) =>\n                                                    <InsightsLink\n                                                        key={item.url}\n                                                        app='advisor'\n                                                        to={item.url}\n                                                        className='insd-c-legend__item'\n                                                    >\n                                                        <span className='insd-c-legend__dot'\n                                                            style={{ '--insd-c-legend__dot--BackgroundColor': `${item.fill}` }} />\n                                                        <span className='insd-c-legend__text'>{item.name}</span>\n                                                    </InsightsLink>\n                                                )}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Flex>\n                            </CardBody>\n                        </Card>\n                    </TemplateCardBody>\n                    } />\n            </React.Fragment>}\n    </CompoundCard>;\n};\n\nexport default Advisor;\n","export const INCIDENT_URL = `/recommendations?reports_shown=true&impacting=true&offset=0&limit=10&sort=-publish_date&incident=true`;\n\nexport const SEVERITY_MAP = {\n    critical: 4,\n    important: 3,\n    moderate: 2,\n    low: 1\n};\n"],"names":["CardBody","_a","children","className","component","isFilled","props","Component","Object","assign","cardBody","modifiers","noFill","displayName","TextContent","isVisited","content","visited","PieChart","_ref","ariaDesc","ariaTitle","constrainToVisibleArea","data","legendData","padding","height","width","legendOrientation","colorScale","legend","legendWidth","legendHeight","legendClick","LegendLabel","_ref2","index","rest","_objectWithoutProperties","_excluded","React","id","concat","toLowerCase","replace","href","ChartLabel","style","position","ChartPie","labels","_ref3","datum","x","y","tabIndex","map","d","key","ChartLegend","fontSize","rowGutter","top","bottom","orientation","labelComponent","propTypes","CompoundCard","Card","_extends","global_palette_blue_100","global_palette_blue_200","global_palette_blue_300","global_palette_blue_400","_advisorIncidents$met","_advisorIncidents$met2","text","colors","intl","useIntl","_useState","useState","_useState2","_slicedToArray","trData","setTRData","_useState3","_useState4","categoryData","setCategoryData","_useState5","_useState6","setColorScale","dispatch","useDispatch","recStats","useSelector","DashboardStore","advisorStatsRecs","recStatsStatus","advisorStatsRecsStatus","advisorIncidents","advisorIncidentsStatus","_ref4","selectedTags","_ref5","workloads","_ref6","SID","_ref7","urlRest","length","join","SAP","totalRiskUrl","risk","pieLegendData","item","name","fill","url","value","useEffect","options","_objectSpread","globalFilters","tags","AppActions","advisorFetchStatsRecs","advisorFetchStatsSystems","advisorFetchIncidents","total_risk","category","categoryCount","Stability","Availability","Performance","Security","title","capitalize","formatMessage","messages","critical","SEVERITY_MAP","important","moderate","low","availability","count","stability","performance","security","global_disabled_color_100","Loading","TemplateCardBody","FailState","appName","ExpandableCardTemplate","advisorCardHeader1","isExpanded","JSON","parse","localStorage","getItem","isExpandedCallback","setItem","body","Flex","direction","default","alignItems","FlexItem","justifyContent","meta","ExclamationCircleIcon","incidents","advisorCardMessage","InsightsLink","app","to","Button","variant","size","advisorCardCTA","Divider","inset","md","flexWrap","advisorCardHeader2","totalRiskDef","strong","str","Tooltip","TooltipPosition","InfoIcon","spaceItems","sm","_ref8","CardTitle","Title","headingLevel","advisorCardHeader3","left","right"],"sourceRoot":""}