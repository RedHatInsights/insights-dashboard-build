{"version":3,"file":"js/6482.1702466256758.ab59b71b0fffef791820.js","mappings":"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","sources":["webpack:///./src/ChartTemplates/PieChart/PieChartTemplate.js","webpack:///./src/PresentationalComponents/Template/CompoundCard.js","webpack:///./node_modules/@patternfly/react-tokens/dist/esm/global_palette_blue_100.js","webpack:///./node_modules/@patternfly/react-tokens/dist/esm/global_palette_blue_200.js","webpack:///./node_modules/@patternfly/react-tokens/dist/esm/global_palette_blue_300.js","webpack:///./node_modules/@patternfly/react-tokens/dist/esm/global_palette_blue_400.js","webpack:///./src/SmartComponents/Advisor/Advisor.js","webpack:///./src/SmartComponents/Advisor/Constants.js"],"sourcesContent":["import './PieChartTemplate.scss';\n\nimport { ChartLabel } from '@patternfly/react-charts/dist/esm/components/ChartLabel/ChartLabel';\nimport { ChartLegend } from '@patternfly/react-charts/dist/esm/components/ChartLegend/ChartLegend';\nimport { ChartPie } from '@patternfly/react-charts/dist/esm/components/ChartPie/ChartPie';\nimport React from 'react';\nimport propTypes from 'prop-types';\n\nexport const PieChart = ({ ariaDesc, ariaTitle, constrainToVisibleArea, data, legendData, padding, height, width, legendOrientation,\n    colorScale, legend, legendWidth, legendHeight, legendClick }) => {\n    // eslint-disable-next-line react/prop-types\n    const LegendLabel = ({ index, ...rest }) => <a id={ `${ariaTitle.toLowerCase().replace(/\\s/g, '-')}-legend-${index + 1}` }\n        href={ legendClick[index] } className=\"pf-c-button pf-m-link pf-m-inline\"><ChartLabel { ...rest } /></a>;\n\n    return (\n        <div className=\"insd-c-pie-chart__row\">\n            <div style={ { width, height, position: 'relative' } }>\n                <ChartPie\n                    ariaDesc={ ariaDesc }\n                    ariaTitle={ ariaTitle }\n                    constrainToVisibleArea={ constrainToVisibleArea }\n                    data={ data }\n                    height={ height }\n                    labels={ ({ datum }) => `${datum.x}: ${datum.y}` }\n                    padding={ padding }\n                    width={ width }\n                    colorScale={ colorScale }\n                />\n                <table tabIndex=\"0\" className=\"visually-hidden\" aria-label={ ariaTitle + ` data` }>\n                    <tbody>\n                        {data.map((d, index) => {\n                            return [\n                                <tr key={ index }>\n                                    <td>{d.y}</td>\n                                    <td>{d.x}</td>\n                                </tr>\n                            ];\n                        })}\n                    </tbody>\n                </table>\n            </div>\n            {legend &&\n                <div className=\"insd-c-pie-chart__legend\" aria-label=\"Chart legend\" style={ { width: legendWidth, height: legendHeight } }>\n                    <ChartLegend\n                        height={ legendHeight }\n                        width={ legendWidth }\n                        fontSize={ 14 }\n                        data={ legendData }\n                        rowGutter={ { top: -5, bottom: -5 } }\n                        orientation={ legendOrientation }\n                        labelComponent={ legendClick && < LegendLabel /> }\n                    />\n                </div>\n            }\n        </div>\n    );\n};\n\nPieChart.propTypes = {\n    ariaDesc: propTypes.string,\n    ariaTitle: propTypes.string,\n    constrainToVisibleArea: propTypes.bool,\n    data: propTypes.array,\n    legendData: propTypes.array,\n    padding: propTypes.object,\n    height: propTypes.number,\n    width: propTypes.number,\n    legendOrientation: propTypes.string,\n    colorScale: propTypes.array,\n    legend: propTypes.bool,\n    legendWidth: propTypes.number,\n    legendHeight: propTypes.number,\n    legendClick: propTypes.any\n};\n\nexport default PieChart;\n","import './CompoundCard.scss';\n\nimport { Card } from '@patternfly/react-core/dist/esm/components/Card/Card';\nimport React from 'react';\nimport propTypes from 'prop-types';\n\nexport const CompoundCard = ({ className, children, ...props }) => <Card\n    className={`insd-c-dashboard-compound-card insd-c-dashboard__card ${className}`} {...props}>\n    {children}\n</Card>;\n\nCompoundCard.propTypes = {\n    children: propTypes.any,\n    className: propTypes.string\n};\n\n","export const global_palette_blue_100 = {\n  \"name\": \"--pf-global--palette--blue-100\",\n  \"value\": \"#bee1f4\",\n  \"var\": \"var(--pf-global--palette--blue-100)\"\n};\nexport default global_palette_blue_100;","export const global_palette_blue_200 = {\n  \"name\": \"--pf-global--palette--blue-200\",\n  \"value\": \"#73bcf7\",\n  \"var\": \"var(--pf-global--palette--blue-200)\"\n};\nexport default global_palette_blue_200;","export const global_palette_blue_300 = {\n  \"name\": \"--pf-global--palette--blue-300\",\n  \"value\": \"#2b9af3\",\n  \"var\": \"var(--pf-global--palette--blue-300)\"\n};\nexport default global_palette_blue_300;","export const global_palette_blue_400 = {\n  \"name\": \"--pf-global--palette--blue-400\",\n  \"value\": \"#06c\",\n  \"var\": \"var(--pf-global--palette--blue-400)\"\n};\nexport default global_palette_blue_400;","/* eslint-disable react/display-name */\nimport './Advisor.scss';\n\nimport * as AppActions from '../../AppActions';\n\nimport {\n    Button,\n    Card,\n    CardBody,\n    CardTitle,\n    Divider,\n    TextContent,\n    Title,\n    Tooltip,\n    TooltipPosition\n} from '@patternfly/react-core/dist/esm/components';\nimport { Flex, FlexItem } from '@patternfly/react-core/dist/esm/layouts';\nimport React, { useEffect, useState } from 'react';\nimport { SEVERITY_MAP } from '../../AppConstants';\nimport { capitalize, globalFilters } from '../../Utilities/Common';\nimport {\n    global_disabled_color_100,\n    global_palette_blue_100,\n    global_palette_blue_200,\n    global_palette_blue_300,\n    global_palette_blue_400\n} from '@patternfly/react-tokens/dist/esm/';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { CompoundCard } from '../../PresentationalComponents/Template/CompoundCard';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { ExpandableCardTemplate } from '../../PresentationalComponents/Template/ExpandableCardTemplate';\nimport FailState from '../../PresentationalComponents/FailState/FailState';\nimport { INCIDENT_URL } from './Constants';\nimport InfoIcon from '../../Icons/InfoIcon';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport { PieChart } from '../../ChartTemplates/PieChart/PieChartTemplate';\nimport { TemplateCardBody } from '../../PresentationalComponents/Template/TemplateCard';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\nimport InsightsLink from '@redhat-cloud-services/frontend-components/InsightsLink';\n\nconst Advisor = () => {\n    const colors = [global_palette_blue_100.value, global_palette_blue_200.value, global_palette_blue_300.value, global_palette_blue_400.value];\n    const intl = useIntl();\n    const [trData, setTRData] = useState([]);\n    const [categoryData, setCategoryData] = useState([]);\n    const [colorScale, setColorScale] = useState();\n    const dispatch = useDispatch();\n    const recStats = useSelector(({ DashboardStore }) => DashboardStore.advisorStatsRecs);\n    const recStatsStatus = useSelector(({ DashboardStore }) => DashboardStore.advisorStatsRecsStatus);\n    const advisorIncidents = useSelector(({ DashboardStore }) => DashboardStore.advisorIncidents);\n    const advisorIncidentsStatus = useSelector(({ DashboardStore }) => DashboardStore.advisorIncidentsStatus);\n    const selectedTags = useSelector(({ DashboardStore }) => DashboardStore.selectedTags);\n    const workloads = useSelector(({ DashboardStore }) => DashboardStore.workloads);\n    const SID = useSelector(({ DashboardStore }) => DashboardStore.SID);\n\n    const urlRest = `&reports_shown=true&impacting=true&offset=0&limit=10${selectedTags?.length ?\n        `&tags=${selectedTags?.join()}` : ''}${workloads?.SAP ? '&sap_system=true' : ''}${SID?.length ? `&sap_sids=${SID?.join()}` : ''}`;\n    const totalRiskUrl = risk => `/recommendations?sort=-total_risk&total_risk=${risk}${urlRest}`;\n    const pieLegendData = categoryData.map(item => ({\n        name: `${item.y} ${item.x} `, fill: `${item.fill}`,\n        url: `/recommendations?sort=-category&category=${item.value}${urlRest}`\n    }));\n    const iconTooltip = text => <Tooltip\n        key={text}\n        position={TooltipPosition.top}\n        content={<div>{text}</div>}>\n        <span aria-label='Action' className='insd-c-info-icon'>\n            <InfoIcon />\n        </span>\n    </Tooltip>;\n    const pieChartPadding = { bottom: 0, left: 0, right: 0, top: 0 };\n\n    useEffect(() => {\n        const advisorFetchStatsRecs = options => dispatch(AppActions.advisorFetchStatsRecs(options));\n        const advisorFetchStatsSystems = options => dispatch(AppActions.advisorFetchStatsSystems(options));\n        const advisorFetchIncidents = options => dispatch(AppActions.advisorFetchIncidents(options));\n        const options = { ...globalFilters(workloads, SID), ...selectedTags?.length > 0 && { tags: selectedTags } };\n        advisorFetchStatsRecs(options);\n        advisorFetchStatsSystems(options);\n        advisorFetchIncidents(options);\n    }, [selectedTags, workloads, SID, dispatch]);\n\n    useEffect(() => {\n        if (recStatsStatus === 'fulfilled') {\n            const { total_risk, category } = recStats;\n            const categoryCount = category.Stability + category.Availability + category.Performance + category.Security;\n            setTRData([\n                {\n                    title: `${capitalize(intl.formatMessage(messages.critical))} `,\n                    risk: `${total_risk[SEVERITY_MAP.critical]}`,\n                    value: SEVERITY_MAP.critical\n                },\n                {\n                    title: `${capitalize(intl.formatMessage(messages.important))} `,\n                    risk: `${total_risk[SEVERITY_MAP.important]}`,\n                    value: SEVERITY_MAP.important\n                },\n                {\n                    title: `${capitalize(intl.formatMessage(messages.moderate))} `,\n                    risk: `${total_risk[SEVERITY_MAP.moderate]}`,\n                    value: SEVERITY_MAP.moderate\n                },\n                {\n                    title: `${capitalize(intl.formatMessage(messages.low))} `,\n                    risk: `${total_risk[SEVERITY_MAP.low]}`,\n                    value: SEVERITY_MAP.low\n                }\n            ]);\n\n            setCategoryData([\n                {\n                    x: intl.formatMessage(messages.availability, { count: category.Availability }), y: category.Availability,\n                    fill: colors[0], value: 1\n                },\n                {\n                    x: intl.formatMessage(messages.stability, { count: category.Stability }), y: category.Stability,\n                    fill: colors[1], value: 3\n                },\n                {\n                    x: intl.formatMessage(messages.performance, { count: category.Performance }), y: category.Performance,\n                    fill: colors[2], value: 4\n                },\n                {\n                    x: intl.formatMessage(messages.security, { count: category.Security }), y: category.Security,\n                    fill: colors[3], value: 2\n                }\n            ]);\n\n            setColorScale(categoryCount === 0 ? [global_disabled_color_100.value] : colors);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [recStats, recStatsStatus]);\n\n    return <CompoundCard className='insd-c-dashboard-card-parent insd-c-dashboard__card--compound--Advisor'>\n        {advisorIncidentsStatus === 'pending' || recStatsStatus === 'pending' && <Loading />}\n        {advisorIncidentsStatus === 'rejected' ?\n            <TemplateCardBody><FailState appName='Advisor' /></TemplateCardBody>\n            : <React.Fragment>\n                <ExpandableCardTemplate\n                    appName='Advisor'\n                    className='insd-m-toggle-right-on-md'\n                    title={intl.formatMessage(messages.advisorCardHeader1)}\n                    isExpanded={JSON.parse(localStorage.getItem('dashboard_expanded_advisor1') || 'true')}\n                    isExpandedCallback={isExpanded => localStorage.setItem('dashboard_expanded_advisor1', isExpanded)}\n                    body={<TemplateCardBody className='ins-c-advisor-recs__card-body pf-u-pb-2xl'>\n                        <Flex\n                            direction={{ default: 'column' }}\n                            alignItems={{ default: 'alignItemsCenter' }}>\n                            <FlexItem>\n                                <Flex\n                                    alignItems={{ default: 'alignItemsFlexCenter' }}\n                                    justifyContent={{ default: 'justifyContentCenter' }}>\n                                    {advisorIncidents?.meta?.count > 0 &&\n                                        <ExclamationCircleIcon className='pf-u-font-size-xl pf-u-danger-color-100' />}\n                                    <span className='pf-u-font-size-2xl pf-u-text-align-center pf-u-font-weight-normal'>\n                                        {intl.formatMessage(messages.incidents, { incidents: advisorIncidents?.meta?.count })}\n                                    </span>\n                                </Flex>\n                                <TextContent\n                                    className='insd-c-width-limiter pf-u-text-align-center'\n                                    style={{ '--insd-c-width-limiter--MaxWidth': '34ch' }}>\n                                    <p className='pf-u-font-size-md pf-u-text-center'>\n                                        {intl.formatMessage(messages.advisorCardMessage)}\n                                    </p>\n                                </TextContent>\n                            </FlexItem>\n                            <InsightsLink app='advisor' to={INCIDENT_URL}>\n                                <Button\n                                    variant='secondary'\n                                    isSmall\n                                >\n                                    {intl.formatMessage(messages.advisorCardCTA)}\n                                </Button>\n                            </InsightsLink>\n                        </Flex>\n                    </TemplateCardBody>\n                    } />\n                <Divider inset={{ md: 'insetLg' }} />\n                <ExpandableCardTemplate\n                    appName='advisor-recommendation-by-total-risk'\n                    className='insd-m-toggle-right-on-md'\n                    title={<Flex flexWrap={{ default: 'nowrap' }}>\n                        <h3>{intl.formatMessage(messages.advisorCardHeader2)}</h3>\n                        {iconTooltip(intl.formatMessage(messages.totalRiskDef, { strong: (str) => <strong>{str}</strong> }))}\n                    </Flex>}\n                    isExpanded={JSON.parse(localStorage.getItem('dashboard_expanded_advisor2') || 'true')}\n                    isExpandedCallback={isExpanded => localStorage.setItem('dashboard_expanded_advisor2', isExpanded)}\n                    body={<TemplateCardBody className='ins-c-advisor-recs__card-body pf-u-pb-0'>\n                        <Flex\n                            justifyContent={{ default: 'justifyContentCenter' }}\n                            spaceItems={{ default: 'spaceItemsLg', sm: 'spaceItems2xl' }}\n                        >\n                            {trData.map(({ title, risk, value }) =>\n                                <InsightsLink key={title} app='advisor' to={totalRiskUrl(value)}>\n                                    <Flex\n                                        direction={{ default: 'column' }}\n                                        spaceItems={{ default: 'spaceItemsNone' }}\n                                        alignItems={{ default: 'alignItemsCenter' }}>\n                                        <span className='pf-u-font-size-2xl pf-u-color-100 pf-u-font-weight-normal'>\n                                            {risk}\n                                        </span>\n                                        <span className='pf-u-font-size-sm'>\n                                            {title}\n                                        </span>\n                                    </Flex>\n                                </InsightsLink>)}\n                        </Flex>\n                        <Card component='div'>\n                            <CardTitle>\n                                <Title headingLevel='h4' size='lg'>\n                                    {intl.formatMessage(messages.advisorCardHeader3)}\n                                </Title>\n                            </CardTitle>\n                            <CardBody className='pf-u-pt-sm'>\n                                <Flex direction={{ default: 'column' }} spaceItems={{ default: 'spaceItemsLg' }}>\n                                    <div className=\"insd-c-dashboard__card-chart-container\">\n                                        <div className=\"insd-c-dashboard__card-pie-chart\">\n                                            <PieChart\n                                                ariaDesc='Advisor Category pie chart'\n                                                ariaTitle='Advisor Category pie chart'\n                                                constrainToVisibleArea={true}\n                                                data={categoryData}\n                                                colorScale={colorScale}\n                                                padding={pieChartPadding}\n                                            />\n                                        </div>\n                                        <div className=\"insd-c-dashboard__card-pie-chart-legend\">\n                                            <div className='insd-c-legend insd-m-2-col'>\n                                                {pieLegendData.map((item) =>\n                                                    <InsightsLink\n                                                        key={item.url}\n                                                        app='advisor'\n                                                        to={item.url}\n                                                        className='insd-c-legend__item'\n                                                    >\n                                                        <span className='insd-c-legend__dot'\n                                                            style={{ '--insd-c-legend__dot--BackgroundColor': `${item.fill}` }} />\n                                                        <span className='insd-c-legend__text'>{item.name}</span>\n                                                    </InsightsLink>\n                                                )}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Flex>\n                            </CardBody>\n                        </Card>\n                    </TemplateCardBody>\n                    } />\n            </React.Fragment>}\n    </CompoundCard>;\n};\n\nexport default Advisor;\n","export const INCIDENT_URL = `/recommendations?reports_shown=true&impacting=true&offset=0&limit=10&sort=-publish_date&incident=true`;\n\nexport const SEVERITY_MAP = {\n    critical: 4,\n    important: 3,\n    moderate: 2,\n    low: 1\n};\n"],"names":["PieChart","_ref","ariaDesc","ariaTitle","constrainToVisibleArea","data","legendData","padding","height","width","legendOrientation","colorScale","legend","legendWidth","legendHeight","legendClick","LegendLabel","_ref2","index","rest","_objectWithoutProperties","_excluded","React","id","concat","toLowerCase","replace","href","className","ChartLabel","style","position","ChartPie","labels","_ref3","datum","x","y","tabIndex","map","d","key","ChartLegend","fontSize","rowGutter","top","bottom","orientation","labelComponent","propTypes","CompoundCard","children","props","Card","_extends","global_palette_blue_100","global_palette_blue_200","global_palette_blue_300","global_palette_blue_400","_advisorIncidents$met","_advisorIncidents$met2","text","colors","intl","useIntl","_useState","useState","_useState2","_slicedToArray","trData","setTRData","_useState3","_useState4","categoryData","setCategoryData","_useState5","_useState6","setColorScale","dispatch","useDispatch","recStats","useSelector","DashboardStore","advisorStatsRecs","recStatsStatus","advisorStatsRecsStatus","advisorIncidents","advisorIncidentsStatus","_ref4","selectedTags","_ref5","workloads","_ref6","SID","_ref7","urlRest","length","join","SAP","totalRiskUrl","risk","pieLegendData","item","name","fill","url","value","useEffect","options","_objectSpread","globalFilters","tags","AppActions","advisorFetchStatsRecs","advisorFetchStatsSystems","advisorFetchIncidents","total_risk","category","categoryCount","Stability","Availability","Performance","Security","title","capitalize","formatMessage","messages","SEVERITY_MAP","count","global_disabled_color_100","Loading","TemplateCardBody","FailState","appName","ExpandableCardTemplate","isExpanded","JSON","parse","localStorage","getItem","isExpandedCallback","setItem","body","Flex","direction","default","alignItems","FlexItem","justifyContent","meta","ExclamationCircleIcon","incidents","TextContent","InsightsLink","app","to","Button","variant","isSmall","Divider","inset","md","flexWrap","strong","str","Tooltip","TooltipPosition","content","InfoIcon","spaceItems","sm","_ref8","component","CardTitle","Title","headingLevel","size","CardBody","left","right"],"sourceRoot":""}