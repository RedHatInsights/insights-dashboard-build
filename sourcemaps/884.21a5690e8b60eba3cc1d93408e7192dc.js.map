{"version":3,"file":"js/884.1678896572646.fb4acb2368ca7501cee7.js","mappings":"8XAgBaA,EAAW,SAAH,GAA6E,IAAvEC,EAAS,EAATA,UAAWC,EAAO,EAAPA,QAASC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAOC,EAAI,EAAJA,KAAMC,EAAG,EAAHA,IAAKC,EAAU,EAAVA,WAAeC,GAAK,YACvF,OACI,iCAAKP,UAAS,6CAAyCC,EAAO,YAAID,GAC9DQ,GAAE,4BAAwBP,IACrBM,GAEL,yBAAKP,UAAU,0BACTE,GAEN,kBAACO,EAAA,EAAI,CACDC,UAAY,CAAEC,QAAS,UACvBC,WAAa,CAAED,QAAS,mBAExB,kBAACE,EAAA,EAAK,CAACC,aAAa,KAAKC,KAAK,KAAKf,UAAU,cACvCG,GAEN,kBAACa,EAAA,EAAQ,CAACC,OAAS,CAAEN,QAAS,aAC1B,uBAAGX,UAAU,oCAAqCI,IAEtD,kBAACc,EAAA,GAAM,CAACC,QAAQ,OAAOC,KAAI,UAAMC,EAAAA,GAAO,YAAIhB,GAAQiB,UAAQ,EAACpB,KAAM,kBAAC,KAAc,MAAKqB,aAAa,SAChG,8BAAQjB,EAAa,CAAEA,WAAAA,GAAe,iBAK1D,EAEAP,EAASyB,UAAY,CACjBvB,QAASuB,IAAAA,OACTxB,UAAWwB,IAAAA,OACXtB,KAAMsB,IAAAA,IACNrB,MAAOqB,IAAAA,OACPpB,KAAMoB,IAAAA,OACNnB,IAAKmB,IAAAA,OACLlB,WAAYkB,IAAAA,Q,2DCrCHC,EAAkB,SAAH,GAAwB,IAAlBC,EAAW,EAAXA,YACxBC,GAAaC,EAAAA,EAAAA,YAAWC,EAAAA,GACxBC,GAAOC,EAAAA,EAAAA,KAEb,OAAQJ,EAAWK,aAAcN,GAAkBC,EAAWM,cAAiBN,EAAWO,WA2BpF,GA1BF,kBAACC,EAAA,GAAW,CAACC,gBAAc,EAACpC,UAAU,qCAAqCmB,QAASkB,EAAAA,GAAAA,OAChF,kBAAC5B,EAAA,EAAI,CAACC,UAAW,CAAEC,QAAS,UAAYC,WAAY,CAAED,QAAS,iBAC3D,kBAACE,EAAA,EAAK,CAACC,aAAa,KAAKC,KAAK,MACzBe,EAAKQ,cAAcC,EAAAA,EAAAA,cAExB,yBAAKvC,UAAU,sCACT2B,EAAWO,YACT,kBAACnC,EAAQ,CACLE,QAAQ,aACRE,MAAO2B,EAAKQ,cAAcC,EAAAA,EAAAA,0BAC1BnC,KAAM0B,EAAKQ,cAAcC,EAAAA,EAAAA,wBACzBlC,IAAG,UAAKgB,EAAAA,GAAO,uBACfnB,KAAM,yBAAKsC,IAAKC,EAAgBC,IAAI,iCAEzCf,EAAWM,cACV,kBAAClC,EAAQ,CACLE,QAAQ,cACRE,MAAO2B,EAAKQ,cAAcC,EAAAA,EAAAA,4BAC1BnC,KAAM0B,EAAKQ,cAAcC,EAAAA,EAAAA,0BACzBlC,IAAG,UAAKgB,EAAAA,GAAO,kBACfnB,KAAM,yBAAKsC,IAAKG,EAAkBD,IAAI,kCAOlE,EAEAjB,EAAgBD,UAAY,CAAEE,YAAaF,IAAAA,MAE3C,S","sources":["webpack:///./src/PresentationalComponents/Template/AppBlockTemplate.js","webpack:///./src/SmartComponents/Footer/Footer.js"],"sourcesContent":["import './AppBlockTemplate.scss';\n\nimport {\n    Button,\n    Title\n} from '@patternfly/react-core/dist/esm/components';\nimport {\n    Flex,\n    FlexItem\n} from '@patternfly/react-core/dist/esm/layouts';\n\nimport ArrowRightIcon from '@patternfly/react-icons/dist/esm/icons/arrow-right-icon';\nimport React from 'react';\nimport { UI_BASE } from '../../AppConstants';\nimport propTypes from 'prop-types';\n\nexport const AppBlock = ({ className, appName, icon, title, body, url, buttonText, ...props }) => {\n    return (\n        <div className={ `insd-c-app-block insd-c-app-block--${appName} ${className}` }\n            id={ `insd-c-app-block--${appName}` }\n            { ...props }\n        >\n            <div className='insd-c-app-block__icon'>\n                { icon }\n            </div>\n            <Flex\n                direction={ { default: 'column' } }\n                spaceItems={ { default: 'spaceItemsNone' } }\n            >\n                <Title headingLevel='h3' size='xs' className='pf-u-pt-sm'>\n                    { title }\n                </Title>\n                <FlexItem spacer={ { default: 'spacerSm' } }>\n                    <p className='pf-u-color-200 pf-u-font-size-sm'>{ body }</p>\n                </FlexItem>\n                <Button variant='link' href={ `${UI_BASE}/${url}` } isInline icon={<ArrowRightIcon />} iconPosition='right'>\n                    <span>{ buttonText ? { buttonText } : 'Get started' }</span>\n                </Button>\n            </Flex>\n        </div>\n    );\n};\n\nAppBlock.propTypes = {\n    appName: propTypes.string,\n    className: propTypes.string,\n    icon: propTypes.any,\n    title: propTypes.string,\n    body: propTypes.string,\n    url: propTypes.string,\n    buttonText: propTypes.string\n};\n","import { PageSection, PageSectionVariants, Title } from '@patternfly/react-core/dist/esm/components';\nimport React, { useContext } from 'react';\n\nimport { AppBlock } from '../../PresentationalComponents/Template/AppBlockTemplate';\nimport ComplianceIcon from '../../images/Icon-Red_Hat-Software_and_technologies-App_Secured-A-Red-RGB.svg';\nimport { Flex } from '@patternfly/react-core/dist/esm/layouts';\nimport { PermissionContext } from '../../App';\nimport RemediationsIcon from '../../images/Icon-Red_Hat-Software_and_Technologies-Automation-A-Red-RGB.svg';\nimport { UI_BASE } from '../../AppConstants';\nimport messages from '../../Messages';\nimport propTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\n\nexport const DashboardFooter = ({ supportsSap }) => {\n    const permission = useContext(PermissionContext);\n    const intl = useIntl();\n\n    return (permission.hasSystems && supportsSap) && (!permission.remediations || !permission.compliance) ?\n        <PageSection isWidthLimited className='insd-c-dashboard-footer pf-u-pt-lg' variant={PageSectionVariants.light}>\n            <Flex direction={{ default: 'column' }} spaceItems={{ default: 'spaceItemsXl' }}>\n                <Title headingLevel=\"h2\" size=\"xl\">\n                    {intl.formatMessage(messages.footerTitle)}\n                </Title>\n                <div className=\"insd-l-columns insd-m-3-col-on-xl\">\n                    {!permission.compliance &&\n                        <AppBlock\n                            appName='compliance'\n                            title={intl.formatMessage(messages.complianceAppBlockHeader)}\n                            body={intl.formatMessage(messages.complianceAppBlockBody)}\n                            url={`${UI_BASE}/compliance/reports`}\n                            icon={<img src={ComplianceIcon} alt='Insights Remediation Icon' />}\n                        />\n                    }{!permission.remediations &&\n                        <AppBlock\n                            appName='remediation'\n                            title={intl.formatMessage(messages.remediationsAppBlockHeader)}\n                            body={intl.formatMessage(messages.remediationsAppBlockBody)}\n                            url={`${UI_BASE}/remediations/`}\n                            icon={<img src={RemediationsIcon} alt='Insights Remediation Icon' />}\n                        />\n                    }\n                </div>\n            </Flex>\n        </PageSection>\n        : '';\n};\n\nDashboardFooter.propTypes = { supportsSap: propTypes.bool };\n\nexport default DashboardFooter;\n"],"names":["AppBlock","className","appName","icon","title","body","url","buttonText","props","id","Flex","direction","default","spaceItems","Title","headingLevel","size","FlexItem","spacer","Button","variant","href","UI_BASE","isInline","iconPosition","propTypes","DashboardFooter","supportsSap","permission","useContext","PermissionContext","intl","useIntl","hasSystems","remediations","compliance","PageSection","isWidthLimited","PageSectionVariants","formatMessage","messages","src","ComplianceIcon","alt","RemediationsIcon"],"sourceRoot":""}