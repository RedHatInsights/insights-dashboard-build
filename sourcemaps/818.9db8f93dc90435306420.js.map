{"version":3,"sources":["webpack:///./src/ChartTemplates/PieChart/PieChartTemplate.js"],"names":["PieChart","ariaDesc","ariaTitle","constrainToVisibleArea","data","legendData","padding","height","width","legendOrientation","colorScale","legend","legendWidth","legendHeight","legendClick","LegendLabel","index","rest","id","toLowerCase","replace","href","className","style","position","labels","datum","x","y","tabIndex","map","d","key","fontSize","rowGutter","top","bottom","orientation","labelComponent","propTypes"],"mappings":"6OAQaA,EAAW,SAAC,GAC4C,IAD1CC,EAC0C,EAD1CA,SAAUC,EACgC,EADhCA,UAAWC,EACqB,EADrBA,uBAAwBC,EACH,EADGA,KAAMC,EACT,EADSA,WAAYC,EACrB,EADqBA,QAASC,EAC9B,EAD8BA,OAAQC,EACtC,EADsCA,MAAOC,EAC7C,EAD6CA,kBAC9GC,EAAiE,EAAjEA,WAAYC,EAAqD,EAArDA,OAAQC,EAA6C,EAA7CA,YAAaC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,YAEzCC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAUC,GAAb,mBAAwB,uBAAGC,GAAE,UAAMhB,EAAUiB,cAAcC,QAAQ,MAAO,KAA7C,mBAA4DJ,EAAQ,GACjHK,KAAOP,EAAYE,GAASM,UAAU,qCAAoC,kBAAC,KAAgBL,KAE/F,OACI,yBAAKK,UAAU,wBACX,yBAAKC,MAAQ,CAAEf,QAAOD,SAAQiB,SAAU,aACpC,kBAAC,KAAD,CACIvB,SAAWA,EACXC,UAAYA,EACZC,uBAAyBA,EACzBC,KAAOA,EACPG,OAASA,EACTkB,OAAS,gBAAGC,EAAH,EAAGA,MAAH,gBAAkBA,EAAMC,EAAxB,aAA8BD,EAAME,IAC7CtB,QAAUA,EACVE,MAAQA,EACRE,WAAaA,IAEjB,2BAAOmB,SAAS,IAAIP,UAAU,kBAAkB,aAAapB,EAAY,SACrE,+BACKE,EAAK0B,KAAI,SAACC,EAAGf,GACV,MAAO,CACH,wBAAIgB,IAAMhB,GACN,4BAAKe,EAAEH,GACP,4BAAKG,EAAEJ,WAO9BhB,GACG,yBAAKW,UAAU,0BAA0B,aAAW,eAAeC,MAAQ,CAAEf,MAAOI,EAAaL,OAAQM,IACrG,kBAAC,KAAD,CACIN,OAASM,EACTL,MAAQI,EACRqB,SAAW,GACX7B,KAAOC,EACP6B,UAAY,CAAEC,KAAM,EAAGC,QAAS,GAChCC,YAAc5B,EACd6B,eAAiBxB,GAAe,kBAAEC,EAAF,WAQxDf,EAASuC,UAAY,CACjBtC,SAAUsC,WACVrC,UAAWqC,WACXpC,uBAAwBoC,SACxBnC,KAAMmC,UACNlC,WAAYkC,UACZjC,QAASiC,WACThC,OAAQgC,WACR/B,MAAO+B,WACP9B,kBAAmB8B,WACnB7B,WAAY6B,UACZ5B,OAAQ4B,SACR3B,YAAa2B,WACb1B,aAAc0B,WACdzB,YAAayB","file":"js/818.981e78f913c81daa2ec3.js","sourcesContent":["import './PieChartTemplate.scss';\n\nimport { ChartLabel } from '@patternfly/react-charts/dist/esm/components/ChartLabel/ChartLabel';\nimport { ChartLegend } from '@patternfly/react-charts/dist/esm/components/ChartLegend/ChartLegend';\nimport { ChartPie } from '@patternfly/react-charts/dist/esm/components/ChartPie/ChartPie';\nimport React from 'react';\nimport propTypes from 'prop-types';\n\nexport const PieChart = ({ ariaDesc, ariaTitle, constrainToVisibleArea, data, legendData, padding, height, width, legendOrientation,\n    colorScale, legend, legendWidth, legendHeight, legendClick }) => {\n    // eslint-disable-next-line react/prop-types\n    const LegendLabel = ({ index, ...rest }) => <a id={ `${ariaTitle.toLowerCase().replace(/\\s/g, '-')}-legend-${index + 1}` }\n        href={ legendClick[index] } className=\"pf-c-button pf-m-link pf-m-inline\"><ChartLabel { ...rest } /></a>;\n\n    return (\n        <div className=\"ins-c-pie-chart__row\">\n            <div style={ { width, height, position: 'relative' } }>\n                <ChartPie\n                    ariaDesc={ ariaDesc }\n                    ariaTitle={ ariaTitle }\n                    constrainToVisibleArea={ constrainToVisibleArea }\n                    data={ data }\n                    height={ height }\n                    labels={ ({ datum }) => `${datum.x}: ${datum.y}` }\n                    padding={ padding }\n                    width={ width }\n                    colorScale={ colorScale }\n                />\n                <table tabIndex=\"0\" className=\"visually-hidden\" aria-label={ ariaTitle + ` data` }>\n                    <tbody>\n                        {data.map((d, index) => {\n                            return [\n                                <tr key={ index }>\n                                    <td>{d.y}</td>\n                                    <td>{d.x}</td>\n                                </tr>\n                            ];\n                        })}\n                    </tbody>\n                </table>\n            </div>\n            {legend &&\n                <div className=\"ins-c-pie-chart__legend\" aria-label=\"Chart legend\" style={ { width: legendWidth, height: legendHeight } }>\n                    <ChartLegend\n                        height={ legendHeight }\n                        width={ legendWidth }\n                        fontSize={ 14 }\n                        data={ legendData }\n                        rowGutter={ { top: -5, bottom: -5 } }\n                        orientation={ legendOrientation }\n                        labelComponent={ legendClick && < LegendLabel /> }\n                    />\n                </div>\n            }\n        </div>\n    );\n};\n\nPieChart.propTypes = {\n    ariaDesc: propTypes.string,\n    ariaTitle: propTypes.string,\n    constrainToVisibleArea: propTypes.bool,\n    data: propTypes.array,\n    legendData: propTypes.array,\n    padding: propTypes.object,\n    height: propTypes.number,\n    width: propTypes.number,\n    legendOrientation: propTypes.string,\n    colorScale: propTypes.array,\n    legend: propTypes.bool,\n    legendWidth: propTypes.number,\n    legendHeight: propTypes.number,\n    legendClick: propTypes.any\n};\n\nexport default PieChart;\n"],"sourceRoot":""}