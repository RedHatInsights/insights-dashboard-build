{"version":3,"file":"js/337.1698318551905.74ba7183576f01505e4d.js","mappings":"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","sources":["webpack:///./src/PresentationalComponents/PageLoading/PageLoading.js","webpack:///./src/DashboardRoutes.js","webpack:///./src/App.js","webpack:///./src/AppActions.js","webpack:///./src/AppConstants.js","webpack:///./src/PresentationalComponents/Loading/Loading.js","webpack:///./src/SmartComponents/Drift/utils.js","webpack:///./src/Store/index.js","webpack:///./src/AppReducer.js","webpack:///./src/Utilities/Api.js"],"sourcesContent":["import './PageLoading.scss';\n\nimport {\n    EmptyState,\n    EmptyStateIcon,\n    Title\n} from '@patternfly/react-core/dist/esm/components';\n\nimport React from 'react';\nimport { Spinner } from '@patternfly/react-core/dist/esm/components/Spinner';\n\nconst PageLoading = () => <EmptyState>\n    <EmptyStateIcon variant=\"container\" component={ Spinner } />\n    <Title size=\"lg\" headingLevel=\"h4\">\n        Loading\n    </Title>\n</EmptyState>;\n\nexport default PageLoading;\n","import React, { Suspense, lazy } from 'react';\n\nimport Loading from './PresentationalComponents/Loading/Loading';\nimport { Route, Routes } from 'react-router-dom';\n\nconst Dashboard = lazy(() => import(/* webpackChunkName: 'DashboardRoute' */ './PresentationalComponents/Dashboard/Dashboard'));\nconst ZeroState = lazy(() => import(/* webpackChunkName: \"ZeroStateRoute\" */ './PresentationalComponents/ZeroState/ZeroState'));\n\nexport const DashboardRoutes = () => {\n    return (\n        <Suspense fallback={<Loading />}>\n            <Routes>\n                <Route path='/start' element={<ZeroState />} />\n                <Route path='/*' element={<Dashboard />} />\n            </Routes>\n        </Suspense>\n    );\n};\n","import './App.scss';\n\nimport React, { createContext, useEffect, useState } from 'react';\nimport { batch, useDispatch } from 'react-redux';\nimport { setSIDs, setSelectedTags, setWorkloads } from './AppActions';\n\nimport API from './Utilities/Api';\nimport { INVENTORY_TOTAL_FETCH_URL } from './AppConstants';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport PageLoading from './PresentationalComponents/PageLoading/PageLoading';\nimport { DashboardRoutes } from './DashboardRoutes';\n\nexport const PermissionContext = createContext();\n\nconst App = (props) => {\n    const chrome = useChrome();\n    const dispatch = useDispatch();\n    const [permissions, setPermissions] = useState({\n        customPolicies: false,\n        compliance: false,\n        drift: false,\n        advisor: false,\n        remediations: false,\n        patch: false,\n        vulnerability: false,\n        subscriptions: false,\n        ros: false,\n        notifications: false\n    });\n    const [arePermissionsReady, setArePermissionReady] = useState(false);\n    const [hasSystems, setHasSystems] = useState();\n\n    async function initChrome() {\n        chrome.identifyApp('dashboard');\n\n        chrome?.globalFilterScope?.('insights');\n        if (chrome?.globalFilterScope) {\n            chrome.on('GLOBAL_FILTER_UPDATE', ({ data }) => {\n                const [workloads, SID, selectedTags] = chrome?.mapGlobalFilter?.(data, false, true);\n                batch(() => {\n                    dispatch(setWorkloads(workloads));\n                    dispatch(setSIDs(SID));\n                    dispatch(setSelectedTags(selectedTags));\n                });\n            });\n        }\n\n        // TODO: Update this function to query multiple apps instead of empty request (limited by API)\n        chrome.getUserPermissions('', true).then(\n            dashboardPermissions => {\n                const permissionList = dashboardPermissions.length && dashboardPermissions.map(permissions => permissions.permission);\n                if (permissionList.length) {\n                    setPermissions({\n                        customPolicies: permissionList.includes('custom-policies:*:*'),\n                        compliance: permissionList.includes('compliance:*:*'),\n                        drift: permissionList.includes('drift:*:*'),\n                        advisor: permissionList.includes('insights:*:*') ||\n                            permissionList.includes('advisor:*:*'),\n                        remediations: permissionList.includes('remediations:*:*') ||\n                            permissionList.includes('remediations:remediation:*') ||\n                            permissionList.includes('remediations:remediation:read') ||\n                            permissionList.includes('remediations:*:read'),\n                        patch: permissionList.includes('patch:*:*'),\n                        vulnerability: permissionList.includes('vulnerability:*:*') ||\n                            permissionList.includes('vulnerability:vulnerability_results:read'),\n                        subscriptions: permissionList.includes('subscriptions:*:*') ||\n                            permissionList.includes('subscriptions:reports:read'),\n                        ros: permissionList.includes('ros:*:*') ||\n                            permissionList.includes('ros:*:read'),\n                        notifications: permissionList.includes('notifications:*:*') ||\n                            permissionList.includes('notifications:events:read')\n                    });\n                }\n\n                setArePermissionReady(true);\n            }\n        );\n        try {\n            const { total } = (await API.get(`${INVENTORY_TOTAL_FETCH_URL}`))?.data || { total: 0 };\n            setHasSystems(total > 0);\n            total === 0 && chrome.hideGlobalFilter();\n        } catch (e) {\n            chrome.hideGlobalFilter();\n        }\n    }\n\n    useEffect(() => {\n        initChrome();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        arePermissionsReady ?\n            <PermissionContext.Provider\n                value={ {\n                    customPolicies: permissions.customPolicies,\n                    compliance: permissions.compliance,\n                    drift: permissions.drift,\n                    advisor: permissions.advisor,\n                    remediations: permissions.remediations,\n                    patch: permissions.patch,\n                    vulnerability: permissions.vulnerability,\n                    subscriptions: permissions.subscriptions,\n                    ros: permissions.ros,\n                    notifications: permissions.notifications,\n                    hasSystems\n                } }>\n                <DashboardRoutes childProps={ props } />\n            </PermissionContext.Provider>\n            : <PageLoading />\n    );\n};\n\nexport default App;\n","import * as ActionTypes from './AppConstants';\nimport API from './Utilities/Api';\n\nconst fetchData = async (url, headers, options) => {\n    return (await API.get(url, headers, options)).data;\n};\n\nexport const fetchComplianceSummary = (options) => ({\n    type: ActionTypes.COMPLIANCE_FETCH,\n    payload: fetchData(ActionTypes.COMPLIANCE_FETCH_URL, {}, options)\n});\n\nexport const fetchVulnerabilities = (options) => ({\n    type: ActionTypes.VULNERABILITIES_FETCH,\n    payload: fetchData(ActionTypes.VULNERABILITIES_FETCH_URL, {}, options)\n});\n\nexport const advisorFetchStatsRecs = (options) => ({\n    type: ActionTypes.ADVISOR_STATS_REC_FETCH,\n    payload: fetchData(ActionTypes.ADVISOR_STATS_REC_FETCH_URL, {}, options)\n});\n\nexport const advisorFetchStatsSystems = (options) => ({\n    type: ActionTypes.ADVISOR_STATS_SYSTEMS_FETCH,\n    payload: fetchData(ActionTypes.ADVISOR_STATS_SYSTEMS_FETCH_URL, {}, options)\n});\n\nexport const advisorFetchIncidents = (options) => ({\n    type: ActionTypes.ADVISOR_INCIDENTS_FETCH,\n    payload: fetchData(ActionTypes.ADVISOR_INCIDENTS_FETCH_URL, {}, options)\n});\n\nexport const patchmanFetchSystems = (options) => ({\n    type: ActionTypes.PATCHMAN_SYSTEMS_FETCH,\n    payload: fetchData(ActionTypes.PATCHMAN_SYSTEMS_FETCH_URL, {}, options)\n});\n\nexport const patchmanFetchAdvisories = (options) => ({\n    type: ActionTypes.PATCHMAN_ADVISORIES_FETCH,\n    payload: fetchData(ActionTypes.PATCHMAN_ADVISORIES_FETCH_URL, {}, options)\n});\n\nexport const subscriptionsUtilizedProductOneFetch = (id, options) => ({\n    type: ActionTypes.SUBSCRIPTIONS_UTILIZED_PRODUCT_ONE_FETCH,\n    payload: Promise.all([\n        fetchData(`${ActionTypes.SUBSCRIPTIONS_UTILIZED_REPORT_FETCH_URL}${id}`, {}, options),\n        fetchData(`${ActionTypes.SUBSCRIPTIONS_UTILIZED_CAPACITY_FETCH_URL}${id}`, {}, options)\n    ])\n});\n\nexport const subscriptionsUtilizedProductTwoFetch = (id, options) => ({\n    type: ActionTypes.SUBSCRIPTIONS_UTILIZED_PRODUCT_TWO_FETCH,\n    payload: Promise.all([\n        fetchData(`${ActionTypes.SUBSCRIPTIONS_UTILIZED_REPORT_FETCH_URL}${id}`, {}, options),\n        fetchData(`${ActionTypes.SUBSCRIPTIONS_UTILIZED_CAPACITY_FETCH_URL}${id}`, {}, options)\n    ])\n});\n\nexport const fetchInventorySummary = (options) => ({\n    type: ActionTypes.INVENTORY_FETCH,\n    payload: fetchData(ActionTypes.INVENTORY_FETCH_URL, {}, options)\n});\n\nexport const fetchInventoryTotalSummary = (options) => ({\n    type: ActionTypes.INVENTORY_TOTAL_FETCH,\n    payload: fetchData(ActionTypes.INVENTORY_TOTAL_FETCH_URL, {}, options)\n});\n\nexport const fetchInventoryStaleSummary = (options) => ({\n    type: ActionTypes.INVENTORY_STALE_FETCH,\n    payload: fetchData(ActionTypes.INVENTORY_STALE_FETCH_URL, {}, options)\n});\n\nexport const fetchInventoryWarningSummary = (options) => ({\n    type: ActionTypes.INVENTORY_WARNING_FETCH,\n    payload: fetchData(ActionTypes.INVENTORY_WARNING_FETCH_URL, {}, options)\n});\n\nexport const fetchRemediations = (options) => ({\n    type: ActionTypes.REMEDIATIONS_FETCH,\n    payload: fetchData(ActionTypes.REMEDIATIONS_FETCH_URL, {}, options)\n});\n\nexport const fetchRosIsConfigured = (options) => ({\n    type: ActionTypes.ROS_IS_CONFIGURED_FETCH,\n    payload: fetchData(ActionTypes.ROS_IS_CONFIGURED_FETCH_URL, {}, options)\n});\n\nexport const fetchDrift = (options) => ({\n    type: ActionTypes.DRIFT_EVENTS_PAYLOAD_FETCH,\n    payload: fetchData(ActionTypes.DRIFT_EVENTS_PAYLOAD_FETCH_URL, {}, options)\n});\n\nexport const setSelectedTags = (tags) => ({\n    type: ActionTypes.SELECTED_TAGS_SET,\n    payload: tags\n});\n\nexport const setWorkloads = (data) => ({\n    type: ActionTypes.WORKLOADS_SET,\n    payload: data\n});\n\nexport const setSIDs = (data) => ({\n    type: ActionTypes.SID_SET,\n    payload: data\n});\n","/* eslint-disable max-len */\n\nconst BASE_URL = '/api';\nexport const UI_BASE = '/insights';\nexport const UI_BASE_OPENSHIFT = '/openshift';\nexport const SELECTED_TAGS_SET = 'SELECTED_TAGS_SET';\nexport const WORKLOADS_SET = 'WORKLOADS_SET';\nexport const SID_SET = 'SID_SET';\nexport const SEVERITY_MAP = {\n    critical: 4,\n    important: 3,\n    moderate: 2,\n    low: 1\n};\n\n// Compliance App Constants\nexport const COMPLIANCE_FETCH = 'COMPLIANCE_SUMMARY_FETCH';\nexport const COMPLIANCE_SEARCH = encodeURIComponent('(has_policy_test_results=true AND external=false) OR (has_policy=false AND has_test_results=true)');\nexport const COMPLIANCE_FETCH_URL = `${BASE_URL}/compliance/profiles?search=${COMPLIANCE_SEARCH}`;\n\n// Vulnerability App Constants\nconst VULN_BASE = '/vulnerability/v1';\nexport const VULNERABILITIES_FETCH = 'VULNERABILITIES_FETCH';\nexport const VULNERABILITIES_FETCH_URL = (`${BASE_URL}${VULN_BASE}/dashboard`);\nexport const VULNERABILITIES_CVES_URL = `${BASE_URL}/vulnerability/v1/vulnerabilities/cves`;\n\n// Advisor App Constants\nconst ADV_BASE = '/insights/v1';\nexport const ADVISOR_STATS_REC_FETCH_URL = `${BASE_URL}${ADV_BASE}/stats/rules/`;\nexport const ADVISOR_STATS_REC_FETCH = 'ADVISOR_STATS_REC_FETCH';\nexport const ADVISOR_STATS_SYSTEMS_FETCH_URL = `${BASE_URL}${ADV_BASE}/stats/systems/`;\nexport const ADVISOR_STATS_SYSTEMS_FETCH = 'ADVISOR_STATS_SYSTEMS_FETCH';\nexport const ADVISOR_INCIDENTS_FETCH = 'ADVISOR_INCIDENTS_FETCH';\nexport const ADVISOR_INCIDENTS_FETCH_URL = `${BASE_URL}/insights/v1/rule/?impacting=true&limit=1&incident=true`;\n\n// Patchman App Constants\nexport const PATCHMAN_ID = 'patch';\nexport const PATCHMAN_VER = 'v3';\nexport const PATCHMAN_SYSTEMS_FETCH_URL = `${BASE_URL}/${PATCHMAN_ID}/${PATCHMAN_VER}/systems/?limit=1`;\nexport const PATCHMAN_SYSTEMS_FETCH = 'PATCHMAN_SYSTEMS_FETCH';\nexport const PATCHMAN_ADVISORIES_FETCH_URL = `${BASE_URL}/${PATCHMAN_ID}/${PATCHMAN_VER}/advisories/?limit=1`;\nexport const PATCHMAN_ADVISORIES_FETCH = 'PATCHMAN_ADVISORIES_FETCH';\n\n// Subscriptions Utilized Constants\nexport const SUBSCRIPTIONS_UTILIZED_PRODUCT_ONE_FETCH = 'SUBSCRIPTIONS_UTILIZED_PRODUCT_ONE_FETCH';\nexport const SUBSCRIPTIONS_UTILIZED_PRODUCT_TWO_FETCH = 'SUBSCRIPTIONS_UTILIZED_PRODUCT_TWO_FETCH';\nexport const SUBSCRIPTIONS_UTILIZED_REPORT_FETCH_URL = `${BASE_URL}/rhsm-subscriptions/v1/tally/products/`;\nexport const SUBSCRIPTIONS_UTILIZED_CAPACITY_FETCH_URL = `${BASE_URL}/rhsm-subscriptions/v1/capacity/products/`;\n\n// Inventory Constants\nexport const INVENTORY_BASE = '/inventory/v1';\nconst INVENTORY_PER_PAGE = 'per_page=1';\nexport const INVENTORY_TOTAL_FETCH = 'INVENTORY_TOTAL_FETCH';\nexport const INVENTORY_TOTAL_FETCH_URL = `${BASE_URL}${INVENTORY_BASE}/hosts?${INVENTORY_PER_PAGE}`;\nexport const INVENTORY_FETCH = 'INVENTORY_FETCH';\nexport const INVENTORY_FETCH_URL = `${BASE_URL}${INVENTORY_BASE}/hosts?registered_with=puptoo&${INVENTORY_PER_PAGE}`;\nexport const INVENTORY_STALE_FETCH = 'INVENTORY_STALE_FETCH';\nexport const INVENTORY_STALE_FETCH_URL = `${BASE_URL}${INVENTORY_BASE}/hosts?staleness=stale&registered_with=puptoo&${INVENTORY_PER_PAGE}`;\nexport const INVENTORY_WARNING_FETCH = 'INVENTORY_WARNING_FETCH';\nexport const INVENTORY_WARNING_FETCH_URL = `${BASE_URL}${INVENTORY_BASE}/hosts?staleness=stale_warning&registered_with=puptoo&${INVENTORY_PER_PAGE}`;\n\n// Remediations App Constants\nconst REMEDIATIONS_BASE = '/remediations/v1';\nexport const REMEDIATIONS_FETCH = 'REMEDIATIONS_FETCH';\nexport const REMEDIATIONS_FETCH_URL = `${BASE_URL}${REMEDIATIONS_BASE}/remediations?sort=-updated_at&limit=4&offset=0&fields[data]=playbook_runs`;\n\n// Resource Optimization Constants\nconst ROS_BASE = '/ros/v1';\nexport const ROS_IS_CONFIGURED_FETCH = 'ROS_IS_CONFIGURED_FETCH';\nexport const ROS_IS_CONFIGURED_FETCH_URL = `${BASE_URL}${ROS_BASE}/is_configured`;\n\n// Workloads Constants\nexport const SAP_FETCH_URL = `${BASE_URL}/inventory/v1/system_profile/sap_system`;\n\n// Drift Constants\nexport const DRIFT_EVENTS_PAYLOAD_FETCH_URL = `${BASE_URL}/notifications/v1.0/notifications/events`;\nexport const DRIFT_EVENTS_PAYLOAD_FETCH = 'DRIFT_EVENTS_PAYLOAD_FETCH';\nexport const DRIFT_URL = `${UI_BASE}/drift`;\nexport const DRIFT_BASELINES_URL = `${DRIFT_URL}/baselines`;\nexport const TOP_BASELINES = 5;\nexport const SYSTEMS_LIMIT = 4;\n\n","import React from 'react';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/Skeleton';\n\nconst Loading = () => {\n    return (\n        <React.Fragment>\n            <Skeleton size='md' />\n            <br />\n            <Skeleton size='md' />\n        </React.Fragment>\n    );\n};\n\nexport default Loading;\n","import messages from '../../Messages';\nimport * as ActionTypes from '../../AppConstants';\n\nexport const groupPayload = (data) => {\n    return data.reduce((acc, curr) => {\n        // We'll use just events and inventoryId from context\n        const { events, context: { inventory_id: inventoryId } } = parsePayload(curr.payload);\n\n        // Let's iterate over all events (and use just the event)\n        events.forEach(({ payload: event }) => {\n        // Is there already baselineId?\n            const { systems } = acc.find(({ baselineId }) => baselineId === event.baseline_id) || {};\n            // either assign to list of systems, or create new record\n            if (systems) {\n                !systems.includes(inventoryId) && systems.push(inventoryId);\n            } else {\n                acc.push({\n                    baselineId: event.baseline_id,\n                    baselineName: event.baseline_name,\n                    systems: [inventoryId]\n                });\n            }\n        });\n\n        return acc;\n    }, []);\n};\n\nexport const parseDriftData = (data) => ({\n    numEvents: data.meta.count,\n    baselineDetail: groupPayload(data.data)\n    .sort(({ systems: aSystems }, { systems: bSystems }) => aSystems.length < bSystems.length ?\n        1 :\n        (aSystems.length > bSystems.length ? -1 : 0)\n    )\n});\n\nfunction parsePayload(item) {\n    return JSON.parse(item.replaceAll('\\\\', '').replaceAll('\"{', '{').replaceAll('}\"', '}'));\n}\n\nexport function formatDate(date) {\n    return new Date(date.getTime() - date.getTimezoneOffset() * 60 * 1000).toISOString().split('T')[0];\n}\n\nexport function getDate(ago) {\n    let d = new Date();\n    d.setDate(d.getDate() - ago);\n    return formatDate(d);\n}\n\nexport const translateDriftDropdownItems = (intl) => ([\n    {\n        id: 'days-30',\n        description: intl.formatMessage(messages.driftDropDown30days),\n        startDate: getDate(30),\n        endDate: getDate(0)\n    },\n    {\n        id: 'days-7',\n        description: intl.formatMessage(messages.driftDropDown7days),\n        startDate: getDate(7),\n        endDate: getDate(0)\n    },\n    {\n        id: 'hours-24',\n        description: intl.formatMessage(messages.driftDropDown24hours),\n        startDate: getDate(1),\n        endDate: getDate(0)\n    }\n]);\n\nexport const buildCompareUrl = (baseline_id, system_ids) => {\n\n    let finalUrl = `/?baseline_ids=${baseline_id}`;\n\n    system_ids.slice(0, ActionTypes.SYSTEMS_LIMIT).forEach(system_id => {\n        finalUrl = finalUrl.concat(`&system_ids=${system_id}`);\n    });\n\n    finalUrl = finalUrl.concat('&filter[show]=baseline');\n    return finalUrl;\n};\n","import { DashboardStore } from '../AppReducer';\nimport { compose } from 'redux';\nimport { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport promiseMiddleware from 'redux-promise-middleware';\n\nlet registry;\n\nexport const init = (...middleware) => {\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    registry = getRegistry(\n        {},\n        [...middleware, promiseMiddleware],\n        composeEnhancers\n    );\n    registry.register({ DashboardStore });\n\n    return registry;\n};\n\nexport const getStore = () => registry.getStore();\n\nexport const register = (...args) => registry.register(...args);\n\n","import * as ActionTypes from './AppConstants';\nimport { parseDriftData } from './SmartComponents/Drift/utils';\n\nimport Immutable from 'seamless-immutable';\n\n// eslint-disable-next-line new-cap\nconst initialState = Immutable({\n    complianceSummary: {},\n    complianceFetchStatus: '',\n    vulnerabilities: {},\n    vulnerabilitiesFetchStatus: '',\n    advisorStatsRecs: {},\n    advisorStatsRecsStatus: '',\n    advisorStatsSystems: {},\n    advisorStatsSystemsStatus: '',\n    advisorIncidents: {},\n    advisorIncidentsStatus: '',\n    patchmanSystems: {},\n    patchmanSystemsStatus: '',\n    patchmanAdvisoriesStatus: '',\n    patchmanSecurity: '',\n    patchmanBugs: '',\n    patchmanEnhancements: '',\n    subscriptionsUtilizedProductOne: [],\n    subscriptionsUtilizedProductOneFetchStatus: '',\n    subscriptionsUtilizedProductTwo: [],\n    subscriptionsUtilizedProductTwoFetchStatus: '',\n    inventorySummary: {},\n    inventoryFetchStatus: '',\n    inventoryStaleSummary: {},\n    inventoryStaleFetchStatus: '',\n    inventoryWarningSummary: {},\n    inventoryWarningFetchStatus: '',\n    inventoryTotalSummary: {},\n    inventoryTotalFetchStatus: '',\n    remediations: {},\n    remediationsFetchStatus: '',\n    rosIsConfigured: {},\n    rosIsConfiguredFetchStatus: '',\n    driftEventFetchStatus: '',\n    driftEvents: '',\n    driftEventsRaw: '',\n    selectedTags: [],\n    workloads: {},\n    SID: {}\n});\n\nexport const DashboardStore = (state = initialState, action) => {\n    switch (action.type) {\n        // GLOBAL\n        case ActionTypes.SELECTED_TAGS_SET:\n            return Immutable.merge(state, {\n                selectedTags: action.payload\n            });\n\n        case ActionTypes.WORKLOADS_SET:\n            return Immutable.merge(state, {\n                workloads: action.payload\n            });\n\n        case ActionTypes.SID_SET:\n            return Immutable.merge(state, {\n                SID: action.payload\n            });\n\n        // COMPLIANCE\n        case `${ActionTypes.COMPLIANCE_FETCH}_PENDING`:\n            return state.set('complianceFetchStatus', 'pending');\n        case `${ActionTypes.COMPLIANCE_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                complianceSummary: action.payload,\n                complianceFetchStatus: 'fulfilled'\n            });\n        case `${ActionTypes.COMPLIANCE_FETCH}_REJECTED`:\n            return state.set('complianceFetchStatus', 'rejected');\n\n        // VULN\n        case `${ActionTypes.VULNERABILITIES_FETCH}_PENDING`:\n            return state.set('vulnerabilitiesFetchStatus', 'pending');\n        case `${ActionTypes.VULNERABILITIES_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                vulnerabilities: action.payload,\n                vulnerabilitiesFetchStatus: 'fulfilled'\n            });\n        case `${ActionTypes.VULNERABILITIES_FETCH}_REJECTED`:\n            return state.set('vulnerabilitiesFetchStatus', 'rejected');\n\n        // Advisor\n        case `${ActionTypes.ADVISOR_STATS_REC_FETCH}_PENDING`:\n            return state.set('advisorStatsRecsStatus', 'pending');\n        case `${ActionTypes.ADVISOR_STATS_REC_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                advisorStatsRecs: action.payload,\n                advisorStatsRecsStatus: 'fulfilled'\n            });\n        case `${ActionTypes.ADVISOR_STATS_REC_FETCH}_REJECTED`:\n            return state.set('advisorStatsRecsStatus', 'rejected');\n\n        case `${ActionTypes.ADVISOR_STATS_SYSTEMS_FETCH}_PENDING`:\n            return state.set('advisorStatsSystemsStatus', 'pending');\n        case `${ActionTypes.ADVISOR_STATS_SYSTEMS_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                advisorStatsSystems: action.payload,\n                advisorStatsSystemsStatus: 'fulfilled'\n            });\n        case `${ActionTypes.ADVISOR_STATS_SYSTEMS_FETCH}_REJECTED`:\n            return state.set('advisorStatsSystemsStatus', 'rejected');\n\n        case `${ActionTypes.ADVISOR_INCIDENTS_FETCH}_PENDING`:\n            return state.set('advisorIncidentsStatus', 'pending');\n        case `${ActionTypes.ADVISOR_INCIDENTS_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                advisorIncidents: action.payload,\n                advisorIncidentsStatus: 'fulfilled'\n            });\n        case `${ActionTypes.ADVISOR_INCIDENTS_FETCH}_REJECTED`:\n            return state.set('advisorIncidentsStatus', 'rejected');\n\n        // Patch\n        case `${ActionTypes.PATCHMAN_SYSTEMS_FETCH}_PENDING`:\n            return state.set('patchmanSystemsStatus', 'pending');\n        case `${ActionTypes.PATCHMAN_SYSTEMS_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                patchmanSystems: action.payload.meta.total_items,\n                patchmanSystemsStatus: 'fulfilled'\n            });\n        case `${ActionTypes.PATCHMAN_SYSTEMS_FETCH}_REJECTED`:\n            return state.set('patchmanSystemsStatus', 'rejected');\n\n        case `${ActionTypes.PATCHMAN_ADVISORIES_FETCH}_PENDING`:\n            return state.set('patchmanAdvisoriesStatus', 'pending');\n        case `${ActionTypes.PATCHMAN_ADVISORIES_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                patchmanAdvisories: action.payload.meta.subtotals,\n                patchmanAdvisoriesStatus: 'fulfilled'\n            });\n        case `${ActionTypes.PATCHMAN_ADVISORIES_FETCH}_REJECTED`:\n            return state.set('patchmanAdvisoriesStatus', 'rejected');\n\n        // SubsUtilized Product One\n        case `${ActionTypes.SUBSCRIPTIONS_UTILIZED_PRODUCT_ONE_FETCH}_PENDING`:\n            return state.set('subscriptionsUtilizedProductOneFetchStatus', 'pending');\n        case `${ActionTypes.SUBSCRIPTIONS_UTILIZED_PRODUCT_ONE_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                subscriptionsUtilizedProductOne: action.payload,\n                subscriptionsUtilizedProductOneFetchStatus: 'fulfilled'\n            });\n        case `${ActionTypes.SUBSCRIPTIONS_UTILIZED_PRODUCT_ONE_FETCH}_REJECTED`:\n            return Immutable.merge(state, {\n                subscriptionsUtilizedProductOne: action.payload.response,\n                subscriptionsUtilizedProductOneFetchStatus: 'rejected'\n            });\n\n        // SubsUtilized Product Two\n        case `${ActionTypes.SUBSCRIPTIONS_UTILIZED_PRODUCT_TWO_FETCH}_PENDING`:\n            return state.set('subscriptionsUtilizedProductTwoFetchStatus', 'pending');\n        case `${ActionTypes.SUBSCRIPTIONS_UTILIZED_PRODUCT_TWO_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                subscriptionsUtilizedProductTwo: action.payload,\n                subscriptionsUtilizedProductTwoFetchStatus: 'fulfilled'\n            });\n        case `${ActionTypes.SUBSCRIPTIONS_UTILIZED_PRODUCT_TWO_FETCH}_REJECTED`:\n            return Immutable.merge(state, {\n                subscriptionsUtilizedProductTwo: action.payload.response,\n                subscriptionsUtilizedProductTwoFetchStatus: 'rejected'\n            });\n\n        // Inventory\n        case `${ActionTypes.INVENTORY_FETCH}_PENDING`:\n            return state.set('inventoryFetchStatus', 'pending');\n        case `${ActionTypes.INVENTORY_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                inventorySummary: action.payload,\n                inventoryFetchStatus: 'fulfilled'\n            });\n        case `${ActionTypes.INVENTORY_FETCH}_REJECTED`:\n            return state.set('inventoryFetchStatus', 'rejected');\n\n        case `${ActionTypes.INVENTORY_STALE_FETCH}_PENDING`:\n            return state.set('inventoryStaleFetchStatus', 'pending');\n        case `${ActionTypes.INVENTORY_STALE_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                inventoryStaleSummary: action.payload,\n                inventoryStaleFetchStatus: 'fulfilled'\n            });\n        case `${ActionTypes.INVENTORY_STALE_FETCH}_REJECTED`:\n            return state.set('inventoryStaleFetchStatus', 'rejected');\n\n        case `${ActionTypes.INVENTORY_WARNING_FETCH}_PENDING`:\n            return state.set('inventoryWarningFetchStatus', 'pending');\n        case `${ActionTypes.INVENTORY_WARNING_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                inventoryWarningSummary: action.payload,\n                inventoryWarningFetchStatus: 'fulfilled'\n            });\n        case `${ActionTypes.INVENTORY_WARNING_FETCH}_REJECTED`:\n            return state.set('inventoryWarningFetchStatus', 'rejected');\n\n        case `${ActionTypes.INVENTORY_TOTAL_FETCH}_PENDING`:\n            return state.set('inventoryTotalFetchStatus', 'pending');\n        case `${ActionTypes.INVENTORY_TOTAL_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                inventoryTotalSummary: action.payload,\n                inventoryTotalFetchStatus: 'fulfilled'\n            });\n        case `${ActionTypes.INVENTORY_TOTAL_FETCH}_REJECTED`:\n            return state.set('inventoryTotalFetchStatus', 'rejected');\n\n        // REMEDIATIONS\n        case `${ActionTypes.REMEDIATIONS_FETCH}_PENDING`:\n            return state.set('remediationsFetchStatus', 'pending');\n        case `${ActionTypes.REMEDIATIONS_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                remediations: action.payload,\n                remediationsFetchStatus: 'fulfilled'\n            });\n        case `${ActionTypes.REMEDIATIONS_FETCH}_REJECTED`:\n            return state.set('remediationsFetchStatus', 'rejected');\n\n        // Resource Optimization\n        case `${ActionTypes.ROS_IS_CONFIGURED_FETCH}_PENDING`:\n            return state.set('rosIsConfiguredFetchStatus', 'pending');\n        case `${ActionTypes.ROS_IS_CONFIGURED_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                rosIsConfigured: action.payload,\n                rosIsConfiguredFetchStatus: 'fulfilled'\n            });\n        case `${ActionTypes.ROS_IS_CONFIGURED_FETCH}_REJECTED`:\n            return state.set('rosIsConfiguredFetchStatus', 'rejected');\n\n        // DRIFT\n        case `${ActionTypes.DRIFT_EVENTS_PAYLOAD_FETCH}_PENDING`:\n            return state.set('driftEventFetchStatus', 'pending');\n        case `${ActionTypes.DRIFT_EVENTS_PAYLOAD_FETCH}_FULFILLED`:\n            return Immutable.merge(state, {\n                driftEventsRaw: action.payload,\n                driftEvents: parseDriftData(action.payload),\n                driftEventFetchStatus: 'fulfilled'\n            });\n        case `${ActionTypes.DRIFT_EVENTS_PAYLOAD_FETCH}_REJECTED`:\n            return state.set('driftEventFetchStatus', 'rejected');\n\n        default:\n            return state;\n    }\n};\n","import Qs from 'qs';\nimport axios from 'axios';\n\naxios.defaults.headers.common = { 'x-rh-insights-use-path-prefix': 1 };\n\nexport default {\n    get(url, headers = {}, params = {}) {\n        return axios.get(url, {\n            headers,\n            params,\n            paramsSerializer (params) {\n                return Qs.stringify(params, { arrayFormat: 'repeat' });\n            }\n        });\n    },\n    put(url, data = {}, headers = {}) {\n        return axios.put(url, data, {\n            headers\n        });\n    },\n    post(url, data = {}, headers = {}) {\n        return axios.post(url, data, {\n            headers\n        });\n    }\n};\n"],"names":["React","EmptyState","EmptyStateIcon","variant","component","Spinner","Title","size","headingLevel","Dashboard","lazy","ZeroState","DashboardRoutes","Suspense","fallback","Loading","Routes","Route","path","element","PermissionContext","createContext","props","chrome","useChrome","dispatch","useDispatch","_useState","useState","customPolicies","compliance","drift","advisor","remediations","patch","vulnerability","subscriptions","ros","notifications","_useState2","_slicedToArray","permissions","setPermissions","_useState3","_useState4","arePermissionsReady","setArePermissionReady","_useState5","_useState6","hasSystems","setHasSystems","_initChrome","_asyncToGenerator","_regeneratorRuntime","_callee","_chrome$globalFilterS","_yield$API$get","_ref2","total","_context","prev","next","identifyApp","globalFilterScope","call","on","_ref","_chrome$mapGlobalFilt3","data","_chrome$mapGlobalFilt","mapGlobalFilter","_chrome$mapGlobalFilt2","workloads","SID","selectedTags","batch","setWorkloads","setSIDs","setSelectedTags","getUserPermissions","then","dashboardPermissions","permissionList","length","map","permission","includes","API","concat","INVENTORY_TOTAL_FETCH_URL","t2","sent","t1","t3","t0","hideGlobalFilter","t4","stop","apply","arguments","useEffect","initChrome","Provider","value","childProps","PageLoading","fetchData","url","headers","options","abrupt","_x","_x2","_x3","fetchComplianceSummary","type","ActionTypes","payload","fetchVulnerabilities","advisorFetchStatsRecs","advisorFetchStatsSystems","advisorFetchIncidents","patchmanFetchSystems","patchmanFetchAdvisories","fetchInventorySummary","fetchInventoryTotalSummary","fetchInventoryStaleSummary","fetchInventoryWarningSummary","fetchRemediations","fetchRosIsConfigured","fetchDrift","tags","BASE_URL","UI_BASE","SELECTED_TAGS_SET","WORKLOADS_SET","SID_SET","SEVERITY_MAP","critical","important","moderate","low","COMPLIANCE_FETCH","COMPLIANCE_SEARCH","encodeURIComponent","COMPLIANCE_FETCH_URL","VULNERABILITIES_FETCH","VULNERABILITIES_FETCH_URL","ADV_BASE","ADVISOR_STATS_REC_FETCH_URL","ADVISOR_STATS_REC_FETCH","ADVISOR_STATS_SYSTEMS_FETCH_URL","ADVISOR_STATS_SYSTEMS_FETCH","ADVISOR_INCIDENTS_FETCH","ADVISOR_INCIDENTS_FETCH_URL","PATCHMAN_ID","PATCHMAN_SYSTEMS_FETCH_URL","PATCHMAN_SYSTEMS_FETCH","PATCHMAN_ADVISORIES_FETCH_URL","PATCHMAN_ADVISORIES_FETCH","SUBSCRIPTIONS_UTILIZED_PRODUCT_ONE_FETCH","SUBSCRIPTIONS_UTILIZED_PRODUCT_TWO_FETCH","INVENTORY_BASE","INVENTORY_PER_PAGE","INVENTORY_TOTAL_FETCH","INVENTORY_FETCH","INVENTORY_FETCH_URL","INVENTORY_STALE_FETCH","INVENTORY_STALE_FETCH_URL","INVENTORY_WARNING_FETCH","INVENTORY_WARNING_FETCH_URL","REMEDIATIONS_FETCH","REMEDIATIONS_FETCH_URL","ROS_IS_CONFIGURED_FETCH","ROS_IS_CONFIGURED_FETCH_URL","DRIFT_EVENTS_PAYLOAD_FETCH_URL","DRIFT_EVENTS_PAYLOAD_FETCH","DRIFT_URL","DRIFT_BASELINES_URL","TOP_BASELINES","SYSTEMS_LIMIT","Skeleton","groupPayload","reduce","acc","curr","item","_parsePayload","JSON","parse","replaceAll","events","inventoryId","context","inventory_id","forEach","event","systems","find","_ref3","baselineId","baseline_id","push","baselineName","baseline_name","parseDriftData","numEvents","meta","count","baselineDetail","sort","_ref4","_ref5","aSystems","bSystems","getDate","ago","date","d","Date","setDate","getTime","getTimezoneOffset","toISOString","split","translateDriftDropdownItems","intl","id","description","formatMessage","messages","startDate","endDate","buildCompareUrl","system_ids","finalUrl","slice","system_id","registry","initialState","Immutable","complianceSummary","complianceFetchStatus","vulnerabilities","vulnerabilitiesFetchStatus","advisorStatsRecs","advisorStatsRecsStatus","advisorStatsSystems","advisorStatsSystemsStatus","advisorIncidents","advisorIncidentsStatus","patchmanSystems","patchmanSystemsStatus","patchmanAdvisoriesStatus","patchmanSecurity","patchmanBugs","patchmanEnhancements","subscriptionsUtilizedProductOne","subscriptionsUtilizedProductOneFetchStatus","subscriptionsUtilizedProductTwo","subscriptionsUtilizedProductTwoFetchStatus","inventorySummary","inventoryFetchStatus","inventoryStaleSummary","inventoryStaleFetchStatus","inventoryWarningSummary","inventoryWarningFetchStatus","inventoryTotalSummary","inventoryTotalFetchStatus","remediationsFetchStatus","rosIsConfigured","rosIsConfiguredFetchStatus","driftEventFetchStatus","driftEvents","driftEventsRaw","DashboardStore","state","undefined","action","set","total_items","patchmanAdvisories","subtotals","response","init","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","_len","middleware","Array","_key","getRegistry","promiseMiddleware","register","axios","get","params","paramsSerializer","Qs","arrayFormat","put","post"],"sourceRoot":""}