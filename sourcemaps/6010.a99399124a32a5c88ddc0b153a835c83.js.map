{"version":3,"file":"js/6010.426237031318c5950231.js","mappings":"8OAQaA,EAAW,SAAHC,GACgD,IAD1CC,EAAQD,EAARC,SAAUC,EAASF,EAATE,UAAWC,EAAsBH,EAAtBG,uBAAwBC,EAAIJ,EAAJI,KAAMC,EAAUL,EAAVK,WAAYC,EAAON,EAAPM,QAASC,EAAMP,EAANO,OAAQC,EAAKR,EAALQ,MAAOC,EAAiBT,EAAjBS,kBAC9GC,EAAUV,EAAVU,WAAYC,EAAMX,EAANW,OAAQC,EAAWZ,EAAXY,YAAaC,EAAYb,EAAZa,aAAcC,EAAWd,EAAXc,YAEzCC,EAAc,SAAHC,GAAA,IAAMC,EAAKD,EAALC,MAAUC,GAAIC,EAAAA,EAAAA,GAAAH,EAAAI,GAAA,OAAOC,IAAAA,cAAA,KAAGC,GAAE,GAAAC,OAAMrB,EAAUsB,cAAcC,QAAQ,MAAO,KAAI,YAAAF,OAAWN,EAAQ,GACjHS,KAAOZ,EAAYG,GAASU,UAAU,wCAAuCN,IAAAA,cAACO,EAAAA,EAAgBV,GAAa,EAE/G,OACIG,IAAAA,cAAA,OAAKM,UAAU,yBACXN,IAAAA,cAAA,OAAKQ,MAAQ,CAAErB,MAAAA,EAAOD,OAAAA,EAAQuB,SAAU,aACpCT,IAAAA,cAACU,EAAAA,EAAQ,CACL9B,SAAWA,EACXC,UAAYA,EACZC,uBAAyBA,EACzBC,KAAOA,EACPG,OAASA,EACTyB,OAAS,SAAAC,GAAA,IAAGC,EAAKD,EAALC,MAAK,SAAAX,OAAUW,EAAMC,EAAC,MAAAZ,OAAKW,EAAME,EAAC,EAC9C9B,QAAUA,EACVE,MAAQA,EACRE,WAAaA,IAEjBW,IAAAA,cAAA,SAAOgB,SAAS,IAAIV,UAAU,kBAAkB,aAAazB,EAAY,SACrEmB,IAAAA,cAAA,aACKjB,EAAKkC,KAAI,SAACC,EAAGtB,GACV,MAAO,CACHI,IAAAA,cAAA,MAAImB,IAAMvB,GACNI,IAAAA,cAAA,UAAKkB,EAAEH,GACPf,IAAAA,cAAA,UAAKkB,EAAEJ,IAGnB,OAIXxB,GACGU,IAAAA,cAAA,OAAKM,UAAU,2BAA2B,aAAW,eAAeE,MAAQ,CAAErB,MAAOI,EAAaL,OAAQM,IACtGQ,IAAAA,cAACoB,EAAAA,EAAW,CACRlC,OAASM,EACTL,MAAQI,EACR8B,SAAW,GACXtC,KAAOC,EACPsC,UAAY,CAAEC,KAAM,EAAGC,QAAS,GAChCC,YAAcrC,EACdsC,eAAiBjC,GAAeO,IAAAA,cAAEN,EAAW,SAMrE,EAEAhB,EAASiD,UAAY,CACjB/C,SAAU+C,IAAAA,OACV9C,UAAW8C,IAAAA,OACX7C,uBAAwB6C,IAAAA,KACxB5C,KAAM4C,IAAAA,MACN3C,WAAY2C,IAAAA,MACZ1C,QAAS0C,IAAAA,OACTzC,OAAQyC,IAAAA,OACRxC,MAAOwC,IAAAA,OACPvC,kBAAmBuC,IAAAA,OACnBtC,WAAYsC,IAAAA,MACZrC,OAAQqC,IAAAA,KACRpC,YAAaoC,IAAAA,OACbnC,aAAcmC,IAAAA,OACdlC,YAAakC,IAAAA,I,8LCxEV,MAKP,EAHW,UCGX,EAHW,OCGX,EAHW,U,goBCuBX,IAAMC,EAAmB,SAAHjD,GAIhB,IAHFkD,EAAOlD,EAAPkD,QAASC,EAAanD,EAAbmD,cAAeC,EAAYpD,EAAZoD,aACxBC,EAAUrD,EAAVqD,WAAYC,EAAgBtD,EAAhBsD,iBAAkBC,EAAevD,EAAfuD,gBAC9BC,EAAYxD,EAAZwD,aAAcC,EAASzD,EAATyD,UAAWC,EAAG1D,EAAH0D,IAEnBC,GAAOC,EAAAA,EAAAA,KACPC,EAAW,CAACV,EAAeG,GAAkBQ,OAAM,SAAAC,GAAI,MAAa,cAATA,CAAoB,IACrF/C,EAA8DqC,GAAc,CAAC,EAArEW,EAAQhD,EAARgD,SAAkBC,EAAIjD,EAAZkD,OAA2BC,EAAYnD,EAAzBoD,YAC1BC,EAAe,CACjB,CACIlC,EAAGwB,EAAKW,cAAcC,EAAAA,EAASC,mBAAoB,CAAEC,MAAOT,IAAa5B,EAAG4B,EAAUU,KAAMC,EAC5FC,IAAK,gEAET,CACIzC,EAAGwB,EAAKW,cAAcC,EAAAA,EAASM,iBAAkB,CAAEJ,MAAOR,IAAS7B,EAAG6B,EAAMS,KAAMI,EAClFF,IAAK,8DAET,CACIzC,EAAGwB,EAAKW,cAAcC,EAAAA,EAASQ,sBAAuB,CAAEN,MAAON,IAAiB/B,EAAG+B,EAAcO,KAAMM,EACvGJ,IAAK,oEAKPlE,EAAa,CACfsE,EACAF,EACAH,GASJ,OANAM,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAOC,EAAAA,EAAA,IAAQC,EAAAA,EAAAA,IAAc3B,EAAWC,KAASF,aAAY,EAAZA,EAAc6B,QAAS,GAAK,CAAEC,KAAM9B,IAC3FJ,EAAa8B,GACb3B,EAAgB2B,EACpB,GAAG,CAAC9B,EAAcG,EAAiBE,EAAWC,EAAKF,IAE7B,aAAlBL,EAEI9B,IAAAA,cAACkE,EAAAA,GAAY,CAACC,QAAQ,eAAe7D,UAAW,iCAC5CN,IAAAA,cAACoE,EAAAA,GAAkB,CAACC,SAAU/B,EAAKW,cAAcC,EAAAA,EAASoB,cAC1DtE,IAAAA,cAACuE,EAAAA,GAAgB,KAACvE,IAAAA,cAACwE,EAAAA,EAAS,CAACL,QAAQ,QAAQM,SAAO,MAKzDzE,IAAAA,cAAC0E,EAAAA,EAAsB,CAACP,QAAQ,eACnCQ,WAAYC,KAAKC,MAAMC,aAAaC,QAAQ,6BAA+B,QAC3EC,mBAAoB,SAAAL,GAAU,OAAIG,aAAaG,QAAQ,2BAA4BN,EAAW,EAC9FO,MAAO5C,EAAKW,cAAcC,EAAAA,EAASoB,YACnChE,UAAW,0DACX6E,KAAMnF,IAAAA,cAACuE,EAAAA,GAAgB,KACjB/B,EACExC,IAAAA,cAACoF,EAAAA,EAAI,CAACC,UAAW,CAAEC,QAAS,WACxBtF,IAAAA,cAACuF,EAAAA,EAAY,CAACC,IAAI,QAAQC,GAAG,WAAWnF,UAAU,wCAC9CN,IAAAA,cAAA,YAAOsC,EAAKW,cAAcC,EAAAA,EAASwC,gBAAiB,CAAEtC,MAAOvB,MAEjE7B,IAAAA,cAAA,OAAKM,UAAU,0CACXN,IAAAA,cAAA,OAAKM,UAAU,oCACXN,IAAAA,cAACtB,EAAAA,EAAQ,CACLW,WAAYmD,GAA0B,IAAbG,GAA2B,IAATC,GAA+B,IAAjBE,EAAsB,CAAC6C,EAAAA,EAA0BC,OACpGvG,EACNT,SAAS,sBACTC,UAAU,sBACVC,wBAAwB,EACxBC,KAAMiE,EACNrC,OAAQ,SAAAC,GAAA,IAAGC,EAAKD,EAALC,MAAK,SAAAX,OAAUW,EAAMC,EAAC,MAAAZ,OAAKW,EAAME,EAAC,EAC7C9B,QA3CJ,CAAEuC,OAAQ,EAAGqE,KAAM,EAAGC,MAAO,EAAGvE,IAAK,MA8CzCvB,IAAAA,cAAA,OAAKM,UAAU,2CACXN,IAAAA,cAAA,OAAKM,UAAU,iBACV0C,EAAa/B,KAAI,SAACyB,EAAM9C,GAAK,OAC1BI,IAAAA,cAACuF,EAAAA,EAAY,CAACC,IAAI,QAAQrE,IAAKuB,EAAKa,IAAKkC,GAAI/C,EAAKa,IAAKjD,UAAU,uBAC7DN,IAAAA,cAAA,QAAMM,UAAU,qBACZE,MAAO,CAAE,wCAAyC,GAAFN,OAAKb,EAAWO,OACpEI,IAAAA,cAAA,QAAMM,UAAU,uBAAuBoC,EAAK3B,EAAE,KAAEgF,EAAAA,EAAAA,IAAWrD,EAAK5B,IACrD,QAzB1Bd,IAAAA,cAACgG,EAAAA,EAAO,QAkCjC,EAEApE,EAAiBD,UAAY,CACzBE,QAASoE,IAAAA,IACTnE,cAAemE,IAAAA,OACflE,aAAckE,IAAAA,KACdjE,WAAYiE,IAAAA,IACZhE,iBAAkBgE,IAAAA,OAClB/D,gBAAiB+D,IAAAA,KACjB9D,aAAc8D,IAAAA,QAAkBA,IAAAA,QAChC7D,UAAW8D,EAAAA,GACX7D,IAAK4D,IAAAA,QAAkBA,IAAAA,SAG3B,SAAeE,EAAAA,EAAAA,KACX,SAAAC,GAAA,IAAGC,EAAcD,EAAdC,eAAc,MAAQ,CACrBxE,QAASwE,EAAeC,gBACxBxE,cAAeuE,EAAeE,sBAC9BvE,WAAYqE,EAAeG,mBAC3BvE,iBAAkBoE,EAAeI,yBACjCtE,aAAckE,EAAelE,aAC7BC,UAAWiE,EAAejE,UAC1BC,IAAKgE,EAAehE,IACvB,IACD,SAAAqE,GAAQ,MAAK,CACT3E,aAAc,SAAC8B,GAAO,OAAK6C,GAASC,EAAAA,EAAAA,IAAqB9C,GAAS,EAClE3B,gBAAiB,SAAC2B,GAAO,OAAK6C,GAASE,EAAAA,EAAAA,IAAwB/C,GAAS,EAC3E,GAbL,CAcEjC,E","sources":["webpack:///./src/ChartTemplates/PieChart/PieChartTemplate.js","webpack:///./node_modules/@patternfly/react-tokens/dist/esm/chart_color_blue_200.js","webpack:///./node_modules/@patternfly/react-tokens/dist/esm/chart_color_blue_300.js","webpack:///./node_modules/@patternfly/react-tokens/dist/esm/chart_color_blue_400.js","webpack:///./src/SmartComponents/PatchManager/PatchManagerCard.js"],"sourcesContent":["import './PieChartTemplate.scss';\n\nimport { ChartLabel } from '@patternfly/react-charts/dist/esm/components/ChartLabel/ChartLabel';\nimport { ChartLegend } from '@patternfly/react-charts/dist/esm/components/ChartLegend/ChartLegend';\nimport { ChartPie } from '@patternfly/react-charts/dist/esm/components/ChartPie/ChartPie';\nimport React from 'react';\nimport propTypes from 'prop-types';\n\nexport const PieChart = ({ ariaDesc, ariaTitle, constrainToVisibleArea, data, legendData, padding, height, width, legendOrientation,\n    colorScale, legend, legendWidth, legendHeight, legendClick }) => {\n    // eslint-disable-next-line react/prop-types\n    const LegendLabel = ({ index, ...rest }) => <a id={ `${ariaTitle.toLowerCase().replace(/\\s/g, '-')}-legend-${index + 1}` }\n        href={ legendClick[index] } className=\"pf-v5-c-button pf-m-link pf-m-inline\"><ChartLabel { ...rest } /></a>;\n\n    return (\n        <div className=\"insd-c-pie-chart__row\">\n            <div style={ { width, height, position: 'relative' } }>\n                <ChartPie\n                    ariaDesc={ ariaDesc }\n                    ariaTitle={ ariaTitle }\n                    constrainToVisibleArea={ constrainToVisibleArea }\n                    data={ data }\n                    height={ height }\n                    labels={ ({ datum }) => `${datum.x}: ${datum.y}` }\n                    padding={ padding }\n                    width={ width }\n                    colorScale={ colorScale }\n                />\n                <table tabIndex=\"0\" className=\"visually-hidden\" aria-label={ ariaTitle + ` data` }>\n                    <tbody>\n                        {data.map((d, index) => {\n                            return [\n                                <tr key={ index }>\n                                    <td>{d.y}</td>\n                                    <td>{d.x}</td>\n                                </tr>\n                            ];\n                        })}\n                    </tbody>\n                </table>\n            </div>\n            {legend &&\n                <div className=\"insd-c-pie-chart__legend\" aria-label=\"Chart legend\" style={ { width: legendWidth, height: legendHeight } }>\n                    <ChartLegend\n                        height={ legendHeight }\n                        width={ legendWidth }\n                        fontSize={ 14 }\n                        data={ legendData }\n                        rowGutter={ { top: -5, bottom: -5 } }\n                        orientation={ legendOrientation }\n                        labelComponent={ legendClick && < LegendLabel /> }\n                    />\n                </div>\n            }\n        </div>\n    );\n};\n\nPieChart.propTypes = {\n    ariaDesc: propTypes.string,\n    ariaTitle: propTypes.string,\n    constrainToVisibleArea: propTypes.bool,\n    data: propTypes.array,\n    legendData: propTypes.array,\n    padding: propTypes.object,\n    height: propTypes.number,\n    width: propTypes.number,\n    legendOrientation: propTypes.string,\n    colorScale: propTypes.array,\n    legend: propTypes.bool,\n    legendWidth: propTypes.number,\n    legendHeight: propTypes.number,\n    legendClick: propTypes.any\n};\n\nexport default PieChart;\n","export const chart_color_blue_200 = {\n  \"name\": \"--pf-v5-chart-color-blue-200\",\n  \"value\": \"#519de9\",\n  \"var\": \"var(--pf-v5-chart-color-blue-200, #519de9)\"\n};\nexport default chart_color_blue_200;","export const chart_color_blue_300 = {\n  \"name\": \"--pf-v5-chart-color-blue-300\",\n  \"value\": \"#06c\",\n  \"var\": \"var(--pf-v5-chart-color-blue-300, #06c)\"\n};\nexport default chart_color_blue_300;","export const chart_color_blue_400 = {\n  \"name\": \"--pf-v5-chart-color-blue-400\",\n  \"value\": \"#004b95\",\n  \"var\": \"var(--pf-v5-chart-color-blue-400, #004b95)\"\n};\nexport default chart_color_blue_400;","import './PatchManagerCard.scss';\n\nimport { Flex } from '@patternfly/react-core/dist/esm/layouts';\nimport React, { useEffect } from 'react';\nimport { TemplateCard, TemplateCardBody, TemplateCardHeader } from '../../PresentationalComponents/Template/TemplateCard';\nimport { capitalize, globalFilters, workloadsPropType } from '../../Utilities/Common';\nimport { patchmanFetchAdvisories, patchmanFetchSystems } from '../../AppActions';\n\nimport { ExpandableCardTemplate } from '../../PresentationalComponents/Template/ExpandableCardTemplate';\nimport FailState from '../../PresentationalComponents/FailState/FailState';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport { PieChart } from '../../ChartTemplates/PieChart/PieChartTemplate';\nimport PropTypes from 'prop-types';\nimport chart_color_blue_200 from '@patternfly/react-tokens/dist/esm/chart_color_blue_200';\nimport chart_color_blue_300 from '@patternfly/react-tokens/dist/esm/chart_color_blue_300';\nimport chart_color_blue_400 from '@patternfly/react-tokens/dist/esm/chart_color_blue_400';\nimport { connect } from 'react-redux';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/esm/global_disabled_color_100';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\nimport InsightsLink from '@redhat-cloud-services/frontend-components/InsightsLink';\n\n/**\n * Card for showing the systems and ratios of current advisories.\n */\nconst PatchManagerCard = ({\n    systems, systemsStatus, fetchSystems,\n    advisories, advisoriesStatus, fetchAdvisories,\n    selectedTags, workloads, SID\n}) => {\n    const intl = useIntl();\n    const isLoaded = [systemsStatus, advisoriesStatus].every(item => item === 'fulfilled');\n    const { security, bugfix: bugs, enhancement: enhancements } = advisories || {};\n    const pieChartData = [\n        {\n            x: intl.formatMessage(messages.securityAdvisories, { count: security }), y: security, fill: chart_color_blue_400.value,\n            url: `/advisories?offset=0&filter%5Badvisory_type_name%5D=security`\n        },\n        {\n            x: intl.formatMessage(messages.bugfixAdvisories, { count: bugs }), y: bugs, fill: chart_color_blue_300.value,\n            url: `/advisories?offset=0&filter%5Badvisory_type_name%5D=bugfix`\n        },\n        {\n            x: intl.formatMessage(messages.enhancementAdvisories, { count: enhancements }), y: enhancements, fill: chart_color_blue_200.value,\n            url: `/advisories?offset=0&filter%5Badvisory_type_name%5D=enhancement`\n        }\n    ];\n\n    const pieChartPadding = { bottom: 0, left: 0, right: 0, top: 0 };\n    const colorScale = [\n        chart_color_blue_200.value,\n        chart_color_blue_300.value,\n        chart_color_blue_400.value\n    ];\n\n    useEffect(() => {\n        const options = { ...globalFilters(workloads, SID), ...selectedTags?.length > 0 && { tags: selectedTags } };\n        fetchSystems(options);\n        fetchAdvisories(options);\n    }, [fetchSystems, fetchAdvisories, workloads, SID, selectedTags]);\n\n    if (systemsStatus === 'rejected') {\n        return (\n            <TemplateCard appName='PatchManager' className={'insd-c-dashboard__card--Patch'}>\n                <TemplateCardHeader subtitle={intl.formatMessage(messages.patchTitle)} />\n                <TemplateCardBody><FailState appName='Patch' isSmall /></TemplateCardBody>\n            </TemplateCard>\n        );\n    }\n\n    return <ExpandableCardTemplate appName='PatchManager'\n        isExpanded={JSON.parse(localStorage.getItem('dashboard_expanded_patch') || 'true')}\n        isExpandedCallback={isExpanded => localStorage.setItem('dashboard_expanded_patch', isExpanded)}\n        title={intl.formatMessage(messages.patchTitle)}\n        className={'insd-c-dashboard__card--Patch insd-m-toggle-right-on-md'}\n        body={<TemplateCardBody>\n            {!isLoaded ? <Loading /> :\n                <Flex direction={{ default: 'column' }}>\n                    <InsightsLink app='patch' to='/systems' className='pf-v5-c-button pf-m-link pf-m-inline'>\n                        <span>{intl.formatMessage(messages.systemsAffected, { count: systems })}</span>\n                    </InsightsLink>\n                    <div className=\"insd-c-dashboard__card-chart-container\">\n                        <div className=\"insd-c-dashboard__card-pie-chart\">\n                            <PieChart\n                                colorScale={isLoaded && (security === 0 && bugs === 0 && enhancements === 0) ? [global_disabled_color_100.value]\n                                    : colorScale}\n                                ariaDesc='Patch systems chart'\n                                ariaTitle='Patch systems chart'\n                                constrainToVisibleArea={true}\n                                data={pieChartData}\n                                labels={({ datum }) => `${datum.x}: ${datum.y}`}\n                                padding={pieChartPadding}\n                            />\n                        </div>\n                        <div className='insd-c-dashboard__card-pie-chart-legend'>\n                            <div className=\"insd-c-legend\">\n                                {pieChartData.map((item, index) =>\n                                    <InsightsLink app='patch' key={item.url} to={item.url} className='insd-c-legend__item'>\n                                        <span className='insd-c-legend__dot'\n                                            style={{ '--insd-c-legend__dot--BackgroundColor': `${colorScale[index]}` }} />\n                                        <span className='insd-c-legend__text'>{item.y} {capitalize(item.x)}</span>\n                                    </InsightsLink>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                </Flex>\n            }\n        </TemplateCardBody>}\n    />;\n};\n\nPatchManagerCard.propTypes = {\n    systems: PropTypes.any,\n    systemsStatus: PropTypes.string,\n    fetchSystems: PropTypes.func,\n    advisories: PropTypes.any,\n    advisoriesStatus: PropTypes.string,\n    fetchAdvisories: PropTypes.func,\n    selectedTags: PropTypes.arrayOf(PropTypes.string),\n    workloads: workloadsPropType,\n    SID: PropTypes.arrayOf(PropTypes.string)\n};\n\nexport default connect(\n    ({ DashboardStore }) => ({\n        systems: DashboardStore.patchmanSystems,\n        systemsStatus: DashboardStore.patchmanSystemsStatus,\n        advisories: DashboardStore.patchmanAdvisories,\n        advisoriesStatus: DashboardStore.patchmanAdvisoriesStatus,\n        selectedTags: DashboardStore.selectedTags,\n        workloads: DashboardStore.workloads,\n        SID: DashboardStore.SID\n    }),\n    dispatch => ({\n        fetchSystems: (options) => dispatch(patchmanFetchSystems(options)),\n        fetchAdvisories: (options) => dispatch(patchmanFetchAdvisories(options))\n    })\n)(PatchManagerCard);\n"],"names":["PieChart","_ref","ariaDesc","ariaTitle","constrainToVisibleArea","data","legendData","padding","height","width","legendOrientation","colorScale","legend","legendWidth","legendHeight","legendClick","LegendLabel","_ref2","index","rest","_objectWithoutProperties","_excluded","React","id","concat","toLowerCase","replace","href","className","ChartLabel","style","position","ChartPie","labels","_ref3","datum","x","y","tabIndex","map","d","key","ChartLegend","fontSize","rowGutter","top","bottom","orientation","labelComponent","propTypes","PatchManagerCard","systems","systemsStatus","fetchSystems","advisories","advisoriesStatus","fetchAdvisories","selectedTags","workloads","SID","intl","useIntl","isLoaded","every","item","security","bugs","bugfix","enhancements","enhancement","pieChartData","formatMessage","messages","securityAdvisories","count","fill","chart_color_blue_400","url","bugfixAdvisories","chart_color_blue_300","enhancementAdvisories","chart_color_blue_200","useEffect","options","_objectSpread","globalFilters","length","tags","TemplateCard","appName","TemplateCardHeader","subtitle","patchTitle","TemplateCardBody","FailState","isSmall","ExpandableCardTemplate","isExpanded","JSON","parse","localStorage","getItem","isExpandedCallback","setItem","title","body","Flex","direction","default","InsightsLink","app","to","systemsAffected","global_disabled_color_100","value","left","right","capitalize","Loading","PropTypes","workloadsPropType","connect","_ref4","DashboardStore","patchmanSystems","patchmanSystemsStatus","patchmanAdvisories","patchmanAdvisoriesStatus","dispatch","patchmanFetchSystems","patchmanFetchAdvisories"],"sourceRoot":""}