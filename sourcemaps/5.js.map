{"version":3,"sources":["webpack:///./src/SmartComponents/Cards/CostManagementCard.js"],"names":["_react","__webpack_require__","_insightsFrontendComponents","_reactRedux","_reactIcons","_reactCore","AppActions","CostManagementCard","props","_classCallCheck3","default","this","_possibleConstructorReturn3","__proto__","Object","getPrototypeOf","call","fetchOcpSummary","fetchAwsSummary","_props","ocpSummaryFetchStatus","awsSummaryFetchStatus","ocpSummary","awsSummary","ocpStats","awsStats","getCostStack","costSummary","_react2","createElement","Stack","span","className","StackItem","title","Level","gutter","LevelItem","total","date","deltaColor","delta","CaretDownIcon","CaretUpIcon","getCaret","filter","meta","cost","value","Math","abs","round","percent","_moment2","data","format","time_scope_value","time_scope_units","Card","CardHeader","Title","size","CardBody","_Loading2","DollarSignIcon","CardFooter","href","Component","propTypes","PropTypes","func","object","string","routerParams","connect","state","ownProps","_extends3","DashboardStore","dispatch","url"],"mappings":"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","file":"js/5.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { routerParams } from '@red-hat-insights/insights-frontend-components';\nimport { connect } from 'react-redux';\nimport { CaretUpIcon, CaretDownIcon, DollarSignIcon } from '@patternfly/react-icons';\n\nimport {\n    Card, CardBody, CardFooter, CardHeader,\n    // Grid, GridItem,\n    Level, LevelItem,\n    Stack, StackItem,\n    Title\n} from '@patternfly/react-core';\n\nimport * as AppActions from '../../AppActions';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\n\nimport './_cards.scss';\n\n// expose RELEASE\n/*global RELEASE:true*/\nconst release = RELEASE;\n\n/**\n * Cost Management Summary card for showing costs and monthly delta for AWS\n */\nclass CostManagementCard extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        this.props.fetchOcpSummary();\n        this.props.fetchAwsSummary();\n    }\n\n    render() {\n        const {\n            ocpSummaryFetchStatus,\n            awsSummaryFetchStatus,\n            ocpSummary,\n            awsSummary\n        } = this.props;\n\n        let ocpStats = {};\n        let awsStats = {};\n\n        if (ocpSummaryFetchStatus === 'fulfilled') {\n            if (ocpSummary.meta.total.cost.value > 0) {\n                ocpStats.title = 'OpenShift Total Cost';\n                ocpStats.delta = Math.abs(Math.round(ocpSummary.meta.delta.percent));\n                ocpStats.deltaColor = ocpSummary.meta.delta.percent > 0 ? 'green' :\n                    ocpSummary.meta.delta.percent < 0 ? 'red' : 'black';\n                ocpStats.total = Math.round(ocpSummary.meta.total.cost.value * 100) / 100;\n                // ocpStats.totalUnits = ocpSummary.total.units;\n                ocpStats.date = moment(ocpSummary.data.date).format('MMMM Do YYYY');\n                ocpStats.filter = (-1 * ocpSummary.meta.filter.time_scope_value) + ' ' + ocpSummary.meta.filter.time_scope_units;\n            }\n        }\n\n        if (awsSummaryFetchStatus === 'fulfilled') {\n            if (awsSummary.meta.total.cost.value > 0) {\n                awsStats.title = 'Cloud (AWS) Cost';\n                awsStats.delta = Math.round(awsSummary.meta.delta.percent * 100) / 100;\n                awsStats.total = Math.round(awsSummary.meta.total.cost.value * 100) / 100;\n                awsStats.deltaColor = awsSummary.meta.delta.percent > 0 ? 'green' :\n                    awsSummary.meta.delta.percent < 0 ? 'red' : 'black';\n                // awsStats.totalUnits = awsSummary.total.units;\n                awsStats.date = moment(awsSummary.data.date).format('MMMM Do YYYY');\n                awsStats.filter = (-1 * awsSummary.meta.filter.time_scope_value) + ' ' + awsSummary.meta.filter.time_scope_units;\n            }\n        }\n\n        function getCaret (deltaColor) {\n            switch (deltaColor) {\n                case 'green':\n                    return <CaretDownIcon />;\n                case 'red':\n                    return <CaretUpIcon />;\n                default:\n                    return;\n            }\n        }\n\n        function getCostStack (costSummary) {\n            return (\n                <Stack span={6} className='ins-c-summary'>\n                    <StackItem className='ins-c-summary__title'>{ costSummary.title }</StackItem>\n                    <StackItem>\n                        <Level gutter='sm'>\n                            <LevelItem>\n                                <Stack>\n                                    <StackItem className='ins-c-summary__emphasis'>${ costSummary.total }</StackItem>\n                                    <StackItem className='ins-c-summary__accent'>{ costSummary.date }</StackItem>\n                                </Stack>\n                            </LevelItem>\n                            <LevelItem>\n                                <Stack>\n                                    <StackItem className= {`ins-c-summary__emphasis ins-m-${costSummary.deltaColor}` }>\n                                        { costSummary.delta }%\n                                        { getCaret(costSummary.deltaColor) }\n                                    </StackItem>\n                                    <StackItem className='ins-c-summary__accent'>Compared to { costSummary.filter } ago</StackItem>\n                                </Stack>\n                            </LevelItem>\n                        </Level>\n                    </StackItem>\n                </Stack>\n            );\n        }\n\n        return (\n            <Card className='ins-c-card__cost-management'>\n                <CardHeader>\n                    <Title className='pf-u-mt-0 pf-u-mb-0' size={'lg'}>Cost Management</Title>\n                </CardHeader>\n                <CardBody>\n                    { ocpSummaryFetchStatus === 'fulfilled' && ocpStats.total > 0 && (\n                        getCostStack(ocpStats)\n                    ) } { awsSummaryFetchStatus === 'fulfilled' && awsStats.total > 0 && (\n                        getCostStack(awsStats)\n                    ) } { ocpSummaryFetchStatus === 'pending' && (<Loading/>) }\n                    { ocpSummaryFetchStatus === 'fulfilled' && awsSummaryFetchStatus === 'fulfilled' && !ocpStats.total\n                        && !awsStats.total && (\n                        <center className='ins-c-summary'>\n                            <DollarSignIcon className='ins-c-summary__icon' size='lg' />\n                            <div className='ins-c-summary__label'>No Money, No Problems!</div>\n                        </center>\n                    )}\n                </CardBody>\n                <CardFooter><a href={ `/${release}/cost-management/` }>View All Cost</a></CardFooter>\n            </Card>\n        );\n    }\n}\n\nCostManagementCard.propTypes = {\n    fetchOcpSummary: PropTypes.func,\n    ocpSummary: PropTypes.object,\n    ocpSummaryFetchStatus: PropTypes.string,\n    fetchAwsSummary: PropTypes.func,\n    awsSummary: PropTypes.object,\n    awsSummaryFetchStatus: PropTypes.string\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    awsSummary: state.DashboardStore.awsSummary,\n    awsSummaryFetchStatus: state.DashboardStore.awsSummaryFetchStatus,\n    ocpSummary: state.DashboardStore.ocpSummary,\n    ocpSummaryFetchStatus: state.DashboardStore.ocpSummaryFetchStatus,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchAwsSummary: (url) => dispatch(AppActions.fetchAwsSummary(url)),\n    fetchOcpSummary: (url) => dispatch(AppActions.fetchOcpSummary(url))\n});\n\nexport default routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(CostManagementCard));\n"],"sourceRoot":""}