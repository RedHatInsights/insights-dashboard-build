{"version":3,"sources":["webpack:///./src/SmartComponents/Cards/VulnerabilityCard.js"],"names":["VulnerabilityCard","props","_this","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default","this","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default","call","fetchCriticalVulnerabilities","fetchLatestVulnerabilities","fetchVulnerabilities","_this$props","criticalVulnerabilitiesFetchStatus","latestVulnerabilitiesFetchStatus","criticalVulnerabilities","latestVulnerabilities","vulnerabilitiesFetchStatus","vulnerabilities","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_13__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1___default","className","data-ouia-safe","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_14__","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_15__","size","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_16__","_patternfly_react_icons__WEBPACK_IMPORTED_MODULE_11__","meta","total_items","href","concat","UI_BASE","_PresentationalComponents_Loading_Loading__WEBPACK_IMPORTED_MODULE_19__","_patternfly_react_icons__WEBPACK_IMPORTED_MODULE_12__","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_17__","Component","propTypes","PropTypes","func","object","string","routerParams","connect","state","ownProps","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","DashboardStore","dispatch","url","AppActions"],"mappings":"iXAmBMA,cAEF,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,IAAAC,KAAAJ,IACfE,EAAAG,IAAAD,KAAAE,IAAAN,GAAAO,KAAAH,KAAMH,KACDA,MAAQ,GAFEC,mEAMfE,KAAKH,MAAMO,+BACXJ,KAAKH,MAAMQ,6BACXL,KAAKH,MAAMS,wDAGN,IAAAC,EAQDP,KAAKH,MANLW,EAFCD,EAEDC,mCACAC,EAHCF,EAGDE,iCACAC,EAJCH,EAIDG,wBACAC,EALCJ,EAKDI,sBACAC,EANCL,EAMDK,2BACAC,EAPCN,EAODM,gBAGJ,OACIC,EAAAC,EAAAC,cAACC,EAAA,EAADC,IAAA,CAAMC,UAAU,6BAE+B,YAAvCX,GACqC,YAArCC,GAC+B,YAA/BG,EACA,CACIQ,kBAAkB,GAClB,CACAA,kBAAkB,IAG1BN,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACIP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAOH,UAAU,sBAAsBI,KAAO,MAA9C,kBAEJT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KAC6C,cAAvChB,GACEM,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iBACXL,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAuBN,UAAU,qDACjCL,EAAAC,EAAAC,cAAA,QAAMG,UAAU,2BAA4BT,EAAwBgB,KAAKC,aACzEb,EAAAC,EAAAC,cAAA,QAAMG,UAAU,wBACZL,EAAAC,EAAAC,cAAA,KAAGY,KAAI,IAAAC,OAAOC,IAAP,8CAAP,+BANhB,IASiD,YAAvCtB,GAAqDM,EAAAC,EAAAC,cAACe,EAAA,EAAD,MACpB,cAArCtB,GACEK,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iBACXL,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAUb,UAAU,iDACpBL,EAAAC,EAAAC,cAAA,QAAMG,UAAU,2BAA4BR,EAAsBe,KAAKC,aACvEb,EAAAC,EAAAC,cAAA,QAAMG,UAAU,wBAAhB,mCAIZL,EAAAC,EAAAC,cAACiB,EAAA,EAAD,KACInB,EAAAC,EAAAC,cAAA,KAAGY,KAAI,GAAAC,OAAMC,IAAN,oBAAP,WAC6C,cAA/BlB,GAA8CC,EAAgBa,KAAKC,YAAc,EAAjF,IAAAE,OACFhB,EAAgBa,KAAKC,YADnB,KACoC,GAFlD,6BAzDYO,aAmEhCtC,EAAkBuC,UAAY,CAC1B/B,6BAA8BgC,IAAUC,KACxC3B,wBAAyB0B,IAAUE,OACnC9B,mCAAoC4B,IAAUG,OAC9ClC,2BAA4B+B,IAAUC,KACtC1B,sBAAuByB,IAAUE,OACjC7B,iCAAkC2B,IAAUG,OAC5CjC,qBAAsB8B,IAAUC,KAChCxB,gBAAiBuB,IAAUE,OAC3B1B,2BAA4BwB,IAAUG,QAmB3BC,iCAAaC,kBAhBJ,SAACC,EAAOC,GAAR,OAAAC,IAAA,CACpBlC,wBAAyBgC,EAAMG,eAAenC,wBAC9CF,mCAAoCkC,EAAMG,eAAerC,mCACzDG,sBAAuB+B,EAAMG,eAAelC,sBAC5CF,iCAAkCiC,EAAMG,eAAepC,iCACvDI,gBAAiB6B,EAAMG,eAAehC,gBACtCD,2BAA4B8B,EAAMG,eAAejC,4BAC9C+B,IAGoB,SAAAG,GAAQ,MAAK,CACpC1C,6BAA8B,SAAC2C,GAAD,OAASD,EAASE,IAAwCD,KACxF1C,2BAA4B,SAAC0C,GAAD,OAASD,EAASE,IAAsCD,KACpFzC,qBAAsB,SAACyC,GAAD,OAASD,EAASE,IAAgCD,OAGhDN,CAG1B7C","file":"js/5.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { routerParams } from '@red-hat-insights/insights-frontend-components';\nimport { connect } from 'react-redux';\nimport { ExclamationCircleIcon, FlagIcon } from '@patternfly/react-icons';\n\nimport {\n    Card, CardBody, CardFooter, CardHeader,\n    Title\n} from '@patternfly/react-core';\n\nimport * as AppActions from '../../AppActions';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport './_cards.scss';\nimport { UI_BASE } from '../../AppConstants';\n\n/**\n * Vulnerability Card for showing number of critical vulnerabilities\n */\nclass VulnerabilityCard extends Component {\n\n    constructor(props) {\n        super(props);\n        this.props = {};\n    }\n\n    componentDidMount () {\n        this.props.fetchCriticalVulnerabilities();\n        this.props.fetchLatestVulnerabilities();\n        this.props.fetchVulnerabilities();\n    }\n\n    render() {\n        const {\n            criticalVulnerabilitiesFetchStatus,\n            latestVulnerabilitiesFetchStatus,\n            criticalVulnerabilities,\n            latestVulnerabilities,\n            vulnerabilitiesFetchStatus,\n            vulnerabilities\n        } = this.props;\n\n        return (\n            <Card className='ins-c-card__vulnerability'\n                { ...(\n                    criticalVulnerabilitiesFetchStatus !== 'pending' &&\n                    latestVulnerabilitiesFetchStatus !== 'pending' &&\n                    vulnerabilitiesFetchStatus !== 'pending'\n                ) ? {\n                        'data-ouia-safe': true\n                    } : {\n                        'data-ouia-safe': false\n                    } }\n            >\n                <CardHeader>\n                    <Title className=\"pf-u-mt-0 pf-u-mb-0\" size={ 'lg' }>Vulnerability</Title>\n                </CardHeader>\n                <CardBody>\n                    { criticalVulnerabilitiesFetchStatus === 'fulfilled' && (\n                        <div className='ins-c-summary'>\n                            <ExclamationCircleIcon className='ins-c-summary__icon ins-c-summary__icon-critical' />\n                            <span className='ins-c-summary__emphasis'>{ criticalVulnerabilities.meta.total_items }</span>\n                            <span className='ins-c-summary__label'>\n                                <a href={ `/${UI_BASE}/vulnerability/cves?cvss_filter=from8to10` }>CVEs with CVSS Score &gt;= 8</a>\n                            </span>\n                        </div>\n                    ) } { criticalVulnerabilitiesFetchStatus === 'pending' && (<Loading />) }\n                    { latestVulnerabilitiesFetchStatus === 'fulfilled' && (\n                        <div className='ins-c-summary'>\n                            <FlagIcon className='ins-c-summary__icon ins-c-summary__icon-flag' />\n                            <span className='ins-c-summary__emphasis'>{ latestVulnerabilities.meta.total_items }</span>\n                            <span className='ins-c-summary__label'>CVEs added in the last 7 days</span>\n                        </div>\n                    ) }\n                </CardBody>\n                <CardFooter>\n                    <a href={ `${UI_BASE}/vulnerability/` }>\n                        View All{ vulnerabilitiesFetchStatus === 'fulfilled' && vulnerabilities.meta.total_items > 0 ?\n                            ` ${vulnerabilities.meta.total_items} ` : '' } Vulnerabilities\n                    </a>\n                </CardFooter>\n            </Card>\n        );\n    }\n}\n\nVulnerabilityCard.propTypes = {\n    fetchCriticalVulnerabilities: PropTypes.func,\n    criticalVulnerabilities: PropTypes.object,\n    criticalVulnerabilitiesFetchStatus: PropTypes.string,\n    fetchLatestVulnerabilities: PropTypes.func,\n    latestVulnerabilities: PropTypes.object,\n    latestVulnerabilitiesFetchStatus: PropTypes.string,\n    fetchVulnerabilities: PropTypes.func,\n    vulnerabilities: PropTypes.object,\n    vulnerabilitiesFetchStatus: PropTypes.string\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    criticalVulnerabilities: state.DashboardStore.criticalVulnerabilities,\n    criticalVulnerabilitiesFetchStatus: state.DashboardStore.criticalVulnerabilitiesFetchStatus,\n    latestVulnerabilities: state.DashboardStore.latestVulnerabilities,\n    latestVulnerabilitiesFetchStatus: state.DashboardStore.latestVulnerabilitiesFetchStatus,\n    vulnerabilities: state.DashboardStore.vulnerabilities,\n    vulnerabilitiesFetchStatus: state.DashboardStore.vulnerabilitiesFetchStatus,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchCriticalVulnerabilities: (url) => dispatch(AppActions.fetchCriticalVulnerabilities(url)),\n    fetchLatestVulnerabilities: (url) => dispatch(AppActions.fetchLatestVulnerabilities(url)),\n    fetchVulnerabilities: (url) => dispatch(AppActions.fetchVulnerabilities(url))\n});\n\nexport default routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(VulnerabilityCard));\n"],"sourceRoot":""}